{"mappings":"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KAAAA,GAAQ,EAAA,EACV9J,EAAO+J,QAAAA,IAAU/J,CAAAA,EAAO+J,QAAAA,GAAW,EAAA,AAAA,GACjC/J,CAAAA;Q,I,I,C;Q,O,A,C;Y;Y,E,C,C,I,E,C,C,G;gB,O,I;gB,W,I;gB,Y,I;gB,W,I;gB,M,I;gB,Y,I;gB,K,I;gB,S,I;gB,W,I;gB,O,I;gB,W,I;gB,W,I;gB,W,I;gB,gB,I;gB,O,I;gB,S,I;gB,e,I;gB,O,I;gB,a,I;gB,S,I;gB,wB,I;gB,sB,I;gB,sB,I;gB,yB,I;gB,iB,I;gB,M,I;gB,U,I;gB,M,I;gB,W,I;gB,c,I;gB,U,I;gB,M,I;gB,U,I;gB,W,I;gB,S,I;gB,e,I;gB,M,I;gB,U,I;gB,gB,I;gB,Q,I;gB,a,I;gB,M,I;gB,W,I;gB,Q,I;gB,O,I;gB,Y,I;gB,M,I;gB,Y,I;gB,Q,I;gB,gB,I;gB,Q,I;gB,W,I;gB,S,I;gB,M,I;gB,U,I;gB,gB,I;gB,iB,I;gB,iB,I;gB,Y,I;gB,S,I;gB,M,I;gB,Y,I;gB,Y,I;gB,a,I;gB,Y,I;gB,e,I;gB,e,I;gB,gB,I;gB,e,I;gB,e,I;gB,gB,I;gB,e,I;gB,Y,I;gB,a,I;gB,Y,I;gB,Y,I;gB,a,I;gB,a,I;gB,c,I;gB,a,I;gB,a,I;gB,c,I;gB,a,I;gB,iB,I;gB,W,I;gB,K,I;gB,iB,I;gB,K,I;gB,c,I;Y;Y,I,I,C;Y,E,C,C,I,E,C,C,G;gB,S,I;gB,U,I;gB,U,I;gB,W,I;gB,Y,I;gB,Y,I;Y;Y,I,I,C;Y,E,C,C,I,E,C,C,G;gB,M,I;gB,Y,I;gB,iB,I;gB,M,I;gB,M,I;gB,e,I;gB,U,I;gB,gB,I;gB,Q,I;gB,M,I;gB,S,I;gB,gB,I;Y;Y,I,I,C;Y,E,C,C,I,E,C,C,G;gB,O,I;gB,Y,I;gB,W,I;gB,W,I;gB,O,I;gB,W,I;gB,O,I;gB,S,I;gB,a,I;gB,W,I;gB,Q,I;gB,O,I;gB,Q,I;Y;YCHD,MACMgK,IAAuB,SACvBC,IAA4B,cAE5BC,IAAuB,SACvBC,IAA4B,aAC5BC,IAAuB,SACvBC,IAAyB,WACzBC,IAA8B,eAC9BC,IAA2B,aAC3BC,IAAwB,UACxBC,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,KACpCD;gBAAAA;YAAAA;Y,I,K,E;YCrEhB,MAAA,K,E,C,C;Y,S,G,C,E,C;gB,I,I,O,I,C;gB,I,O,qB,E;oB,I,I,O,qB,C;oB,K,C,I,E,M,C,S,C;wB,O,O,wB,C,G,G,U;oB,E,G,E,I,C,K,C,G;gB;gB,O;Y;Y,S,G,C;gB,I,I,I,G,I,U,M,E,I;oB,I,I,Q,S,C,E,G,S,C,E,G,C;oB,I,I,G,O,I,C,G,O,C,S,C;wB,G,G,G,C,C,E;oB,K,O,yB,G,O,gB,C,G,O,yB,C,M,G,O,I,O,C,S,C;wB,O,c,C,G,G,O,wB,C,G;oB;gB;gB,O;Y;YCIO,MAAME,KAAe,CAACf,GAAUgB,IAAX,GAAA,GAAA,CAAA,GACvBhB,IACAgB,ICNL,KAAA;gBACEC,YAAY,SAAShhB,CAAAA,EAAGtB,CAAAA,EAAGuiB,CAAAA;oBACzB,OAAKA,IAAAA,AACSxnB,CAAAA,KAAKG,MAAAA,KAAY8E,CAAAA,IAAIsB,CAAAA,KAAO,CAAA,IAAKA,IAD9BA,IAAIvG,KAAKG,MAAAA,KAAY8E,CAAAA,IAAIsB,CAAAA;gBAAAA;gBAG5CkhB,gBAAgB,SAASC,CAAAA,EAAQ/U,CAAAA,EAAG6U,CAAAA;oBAClC,OAAOlqB,IAAAA,CAAKiqB,UAAAA,CAAWG,IAAS/U,GAAG+U,IAAS/U,GAAG6U;gBAAAA;gBAGjDG,YAAY,SAASC,CAAAA,GAAAA;gBAErBC,iBAAiB,SAASthB,CAAAA;oBACxB,OAAQA,IAAIyC,IAAM;gBAAA;gBAGpB8e,WAAW,SAAgBC,CAAAA;oBACzB,OAAO,MAAMA,EAAI9mB,QAAAA,CAAS;gBAAA;gBAG5B+mB,aAAa;oBACX,OACE,MAAA,AACC,CAAA,UAAA,AAA4B,CAAA,WAAhBhoB,KAAKG,MAAAA,MAAyB,CAAA,EAAGc,QAAAA,CAAS,GAAA,EAAKgnB,KAAAA,CAAAA;gBAAO;gBAIvErZ,MAAM,SAASrI,CAAAA,EAAGtB,CAAAA,EAAGijB,CAAAA;oBACnB,OAAOjjB,IAAAA,AAAKsB,CAAAA,IAAItB,CAAAA,IAAKijB;gBAAAA;gBAGvBC,WAAW,SAAS7S,CAAAA,EAAG7U,CAAAA;oB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;oB,K,C,I,E,M,C,S,C;wB,O,O,wB,C,G,G,U;oB,E,G,E,I,C,K,C,G;gB;gB,O;Y;Y,S,G,C;gB,I,I,I,G,I,U,M,E,I;oB,I,I,Q,S,C,E,G,S,C,E,G,C;oB,I,I,G,O,I,C,G,O,C,S,C;wB,G,G,G,C,C,E;oB,K,O,yB,G,O,gB,C,G,O,yB,C,M,G,O,I,O,C,S,C;wB,O,c,C,G,G,O,wB,C,G;oB;gB;gB,O;Y;YC9DlC,MAAMM,KAAoC;gBAC/CC,kBCW4B;gBDV5BC,gBCa0B;gBDZ1BC,kBCW4B;gBDV5BC,YCMsB;gBDLtBC,gBCM0B;gBDL1BC,qBCO+B;YAAA,GDJpBC,KAA8B;gBACzCtjB,OAAO;gBACPujB,UCC4B;gBDA5BC,KAAAA,CAAK;YAAA,GAEMC,KAAmC,GAAA,GAAA,CAAA,GAC3CH,KADwC,CAAA,GAAA;gBAE3CC,UAAU;YAAA;Y,S,G,C,E,C;gB,I,I,O,I,C;gB,I,O,qB,E;oB,I,I,O,qB,C;oB,K,C,I,E,M,C,S,C;wB,O,O,wB,C,G,G,U;oB,E,G,E,I,C,K,C,G;gB;gB,O;Y;Y,S,G,C;gB,I,I,I,G,I,U,M,E,I;oB,I,I,Q,S,C,E,G,S,C,E,G,C;oB,I,I,G,O,I,C,G,O,C,S,C;wB,G,G,G,C,C,E;oB,K,O,yB,G,O,gB,C,G,O,yB,C,M,G,O,I,O,C,S,C;wB,O,c,C,G,G,O,wB,C,G;oB;gB;gB,O;Y;YETG,MAAMG,WAAmBlB;gBAUtC/sB,YACEkuB,CAAAA,EACAC,CAAAA,EACAC,IAAqBP,EAAAA,EACrBb,IAAAA,CAAY,CAAA,CAAA;oBAEZzF,KAAAA,CAAM1nB,GAAMmtB;oBAEZ,MAAA,EAAM,QAAEqB,CAAAA,EAAF,gBAAUC,CAAAA,EAAV,eAA0BC,CAAAA,EAAAA,GAAkBL;oBAOlDtyB,IAAAA,CAAKwyB,kBAAAA,GAAqBzI,GACxBkI,IACAO,IAAAA,AAGF,CAAA,IAAIG,CAAAA,EAAgBC,IAAAA,CAClBL,GACAM,CAAAA;wBAKE7yB,IAAAA,CAAKuyB,OAAAA,GAAUM,GAMf7yB,IAAAA,CAAK8yB,QAAAA,GAAW,IAAIJ,EAAJ,GAAA,GAAA,CAAA,G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A,GAASI;oBAEtE,OAAO,IAAI0N,GACTpvB,GACAC,GACAC,GACAmvB,GACA5K,GACA3G,GACA9f,GAAgBqgB,IAChBiD;gBAAAA;YAAAA;YClEN,MAqCMgO,KAAiB1T,CAAAA;gBACrB,MAAM0C,IAAa,EAAA;gBAcnB,OAZA1C,EAAM2T,OAAAA,CAAQC,CAAAA;oBACZ,MAAA,EAAM,MAAEr7B,CAAAA,EAAF,YAAQ+lB,CAAAA,EAAAA,GAAesV;oBAE7B,IAAA,CAAKjxB,GAA+BsoB,QAAAA,CAAS1yB,IAC3C,MAAM,IAAImE,MACP,CAAA,mBAAA,EAAqBnE,EAAAA,gCAAAA,CAAAA;oBAI1BmqB,EAAW7sB,IAAAA,CAAKg6B,CAAAA,CAAUt3B,EAAAA,CAAM63B,QAAAA,CAAS9R;gBAAAA,IAGpCoE;YAAAA;Y,S,G,C,E,C;gB,I,I,O,I,C;gB,I,O,qB,E;oB,I,I,O,qB,C;oB,K,C,I,E,M,C,S,C;wB,O,O,wB,C,G,G,U;oB,E,G,E,I,C,K,C,G;gB;gB,O;Y;Y,S,G,C;gB,I,I,I,G,I,U,M,E,I;oB,I,I,Q,S,C,E,G,S,C,E,G,C;oB,I,I,G,O,I,C,G,O,C,S,C;wB,G,G,G,C,C,E;oB,K,O,yB,G,O,gB,C,G,O,yB,C,M,G,O,I,O,C,S,C;wB,O,c,C,G,G,O,wB,C,G;oB;gB;gB,O;Y;YCzDT,MAAMmR,KAAkB;gBAAEC,gBAAAA,CAAgB;YAAA,GA+FpCJ,KAAiB1T,CAAAA,IACrB,IAAI+T,QAAQ,CAACC,GAASC;oBACpB,IAAA,CAAKjU,EAAMvqB,MAAAA,EACT,OAAOu+B,EAAQ,EAAA;oBAGjB,MAAME,IAAqBlU,EAAMvqB,MAAAA,EAC3B0+B,IAAiB,EAAA;oBAEvBnU,EAAM2T,OAAAA,CAAQC,CAAAA;wBACZ,MAAA,EAAM,MAAEr7B,CAAAA,EAAF,YAAQ+lB,CAAAA,EAAAA,GAAesV;wBAE7B,OAAKjxB,GAA+BsoB,QAAAA,CAAS1yB,KAM7C47B,CAAAA,EAAet+B,IAAAA,CAAKg6B,CAAAA,CAAUt3B,EAAAA,CAAM63B,QAAAA,CAAS9R,KAEzC6V,EAAe1+B,MAAAA,KAAWy+B,IA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AAA,GAAI/L,EAAE4O,CAAAA,AAAAA,IAAM+V,CAAAA,EAAOC,KAAAA,GAAQ,CAAA,GAClDmgB,CAAAA,CAAUmC,IAAK,EAAA,GAAA,AAAMlnC,CAAAA,EAAEgM,CAAAA,GAAIhM,EAAEgkB,CAAAA,AAAAA,IAAMW,CAAAA,EAAOE,MAAAA,GAAS,CAAA,CAAA,GAGrDggB,EAAIsC,SAAAA,CAAUnnC,EAAEwuB,OAAAA,CAAQ8X,KAAAA,EAAOtmC,EAAE+L,CAAAA,EAAG/L,EAAEgM,CAAAA,EAAGhM,EAAE4O,CAAAA,EAAG5O,EAAEgkB,CAAAA;oBAAAA;oBAG9C2gB,MAAiBj9B,KACnBu9B,CAAAA,EAAWoB,WAAAA,GAAAA,CAAc,CAAA,GAG3Bf,EAAae,WAAAA,GAAAA,CAAc;gBAAA;gBAQ7Bzb,UAAAA;oBACE,MAAA,EAAM,YAAEqa,CAAAA,EAAF,cAAcK,CAAAA,EAAd,QAA4B3gB,CAAAA,EAAAA,GAAW1oB,IAAAA;oBAE7CqpC,EAAa8B,OAAAA,IACbnC,KAAcA,EAAWmC,OAAAA,IAErBnrC,IAAAA,CAAKyoC,WAAAA,IACP/f,EAAO8Y,MAAAA,IAGTxhC,IAAAA,CAAK+oC,OAAAA,GAAU,EAAA;gBAAA;YAAA;Y,S,G,C,E,C;gB,I,I,O,I,C;gB,I,O,qB,E;oB,I,I,O,qB,C;oB,K,C,I,E,M,C,S,C;wB,O,O,wB,C,G,G,U;oB,E,G,E,I,C,K,C,G;gB;gB,O;Y;Y,S,G,C;gB,I,I,I,G,I,U,M,E,I;oB,I,I,Q,S,C,E,G,S,C,E,G,C;oB,I,I,G,O,I,C,G,O,C,S,C;wB,G,G,G,C,C,E;oB,K,O,yB,G,O,gB,C,G,O,yB,C,M,G,O,I,O,C,S,C;wB,O,c,C,G,G,O,wB,C,G;oB;gB;gB,O;Y;YG5LnB,IAAIzW,ICAAA;YDQW,MAAM8Y,WAA2BtG;gBAC9C1gC,YAAY89B,CAAAA,EAAWyF,CAAAA,EAAOjgC,IAAUk/B,EAAAA,CAAAA;oBACtCjb,KAAAA,CAAMlgB,IAEN6mB,KAAQtyB,IAAAA,CAAK2nC,KAAAA,GAAQA;oBACrB,MAAMrkC,IAAQ,GAAA,GAAA,CAAA,GAAKsjC,KAA6Bl/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AA,EAC/B,QAAEqiB,CAAAA,EAAAA,GAAWqK,GAAAA,EACb,QAAElmB,CAAAA,EAAAA,GAAWquB,EAASyX,UAAAA,CAAT,KAAA;oBAInB,OAFAhE,EAAO9mC,KAAAA,CAAM6gB,EAAO3gB,KAAAA,GAAQ6mC,IAAS/hC,IAAS,EAAA,GAAK6b,EAAO8nB,YAAAA,EAEnDnqC,IAAAA;gBAAAA;gBAGTgsC,aAAazZ,CAAAA,EAAS6W,CAAAA,EAAAA;oBASpB,OAAA,KAR6BvnC,MAAzB0wB,EAAQ4X,YAAAA,IACLnqC,CAAAA,IAAAA,CAAK6rC,YAAAA,IACR7rC,CAAAA,IAAAA,CAAK6rC,YAAAA,GAAe,IAAIrD,GAAaxoC,IAAAA,EAAMopC,EAAAA,GAG7CppC,IAAAA,CAAK6rC,YAAAA,CAAa5B,UAAAA,CAAW1X,EAAAA,GAGxBA,EAAQ4X,YAAAA;gBAAAA;gBAQjBxb,UAAAA;oBACE,MAAA,EAAM,WAAEuT,CAAAA,EAAF,QAAawJ,CAAAA,EAAb,cAAqBG,CAAAA,EAArB,YAAmCJ,CAAAA,EAAAA,GAAezrC,IAAAA;oBAExDkiC,EAAUV,MAAAA,CAAOkK,IACjBD,EAAW9c,OAAAA,IACXkd,KAAgBA,EAAald,OAAAA;gBAAAA;YAAAA;Y,S,G,C,E,C;gB,I,I,O,I,C;gB,I,O,qB,E;oB,I,I,O,qB,C;oB,K,C,I,E,M,C,S,C;wB,O,O,wB,C,G,G,U;oB,E,G,E,I,C,K,C,G;gB;gB,O;Y;Y,S,G,C;gB,I,I,I,G,I,U,M,E,I;oB,I,I,Q,S,C,E,G,S,C,E,G,C;oB,I,I,G,O,I,C,G,O,C,S,C;wB,G,G,G,C,C,E;oB,K,O,yB,G,O,gB,C,G,O,yB,C,M,G,O,I,O,C,S,C;wB,O,c,C,G,G,O,wB,C,G;oB;gB;gB,O;Y;YC/PlB,MAAM4d,WAA0BzH;gBAC7C1gC,YAAY89B,CAAAA,EAAWyF,CAAAA,EAAOjgC,IAAUk/B,EAAAA,CAAAA;oBACtCjb,KAAAA,CAAMngB,IAEN8mB,KAAQtyB,IAAAA,CAAK2nC,KAAAA,GAAQA;oBACrB,MAAMrkC,IAAQ,GAAA,GAAA,CAAA,GAAKsjC,KAA6Bl/B,IAAAA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","sources":["packages/three-nebula/build/three-nebula.js","packages/three-nebula/build/webpack:/Nebula/webpack/universalModuleDefinition","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_Symbol.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_arrayLikeKeys.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_arrayMap.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_arraySample.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseGetTag.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseIsArguments.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseIsTypedArray.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseKeys.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseRandom.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseSample.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseTimes.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseUnary.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_baseValues.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_freeGlobal.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_getRawTag.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_isIndex.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_isPrototype.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_nativeKeys.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_nodeUtil.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_objectToString.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_overArg.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/_root.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isArguments.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isArray.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isArrayLike.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isBuffer.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isFunction.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isLength.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isNumber.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isObject.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isObjectLike.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/isTypedArray.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/keys.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/sample.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/stubFalse.js","packages/three-nebula/build/webpack:/Nebula/node_modules/lodash/values.js","packages/three-nebula/build/webpack:/Nebula/node_modules/uuid/lib/bytesToUuid.js","packages/three-nebula/build/webpack:/Nebula/node_modules/uuid/lib/rng-browser.js","packages/three-nebula/build/webpack:/Nebula/node_modules/uuid/v1.js","packages/three-nebula/build/webpack:/Nebula/webpack/bootstrap","packages/three-nebula/build/webpack:/Nebula/webpack/runtime/compat get default export","packages/three-nebula/build/webpack:/Nebula/webpack/runtime/define property getters","packages/three-nebula/build/webpack:/Nebula/webpack/runtime/global","packages/three-nebula/build/webpack:/Nebula/webpack/runtime/hasOwnProperty shorthand","packages/three-nebula/build/webpack:/Nebula/webpack/runtime/make namespace object","packages/three-nebula/build/webpack:/Nebula/webpack/runtime/node module decorator","packages/three-nebula/build/webpack:/Nebula/src/behaviour/types.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/types.js","packages/three-nebula/build/webpack:/Nebula/src/zone/types.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/types.js","packages/three-nebula/build/webpack:/Nebula/src/constants/index.js","packages/three-nebula/build/webpack:/Nebula/src/ease/index.js","packages/three-nebula/build/webpack:/Nebula/src/core/constants.js","packages/three-nebula/build/webpack:/Nebula/node_modules/@babel/runtime/helpers/esm/defineProperty.js","packages/three-nebula/build/webpack:/Nebula/src/utils/ColorUtil.js","packages/three-nebula/build/webpack:/Nebula/src/utils/PUID.js","packages/three-nebula/build/webpack:/Nebula/src/core/three/Math.js","packages/three-nebula/build/webpack:/Nebula/src/core/three/Vector3.js","packages/three-nebula/build/webpack:/Nebula/src/core/three/Matrix4.js","packages/three-nebula/build/webpack:/Nebula/src/core/three/Euler.js","packages/three-nebula/build/webpack:/Nebula/src/core/three/Quaternion.js","packages/three-nebula/build/webpack:/Nebula/src/utils/THREEUtil.js","packages/three-nebula/build/webpack:/Nebula/src/utils/Util.js","packages/three-nebula/build/webpack:/Nebula/src/utils/uid.js","packages/three-nebula/build/webpack:/Nebula/src/utils/index.js","packages/three-nebula/build/webpack:/Nebula/src/math/MathUtils.js","packages/three-nebula/build/webpack:/Nebula/src/math/Span.js","packages/three-nebula/build/webpack:/Nebula/src/math/types.js","packages/three-nebula/build/webpack:/Nebula/src/math/ArraySpan.js","packages/three-nebula/build/webpack:/Nebula/src/math/ColorSpan.js","packages/three-nebula/build/webpack:/Nebula/src/math/Box.js","packages/three-nebula/build/webpack:/Nebula/src/math/constants.js","packages/three-nebula/build/webpack:/Nebula/src/math/integration.js","packages/three-nebula/build/webpack:/Nebula/src/math/Vector3D.js","packages/three-nebula/build/webpack:/Nebula/src/math/Polar3D.js","packages/three-nebula/build/webpack:/Nebula/src/core/Particle.js","packages/three-nebula/build/webpack:/Nebula/src/core/types.js","packages/three-nebula/build/webpack:/Nebula/src/core/Pool.js","packages/three-nebula/build/webpack:/Nebula/src/events/index.js","packages/three-nebula/build/webpack:/Nebula/src/events/EventDispatcher.js","packages/three-nebula/build/webpack:/Nebula/src/events/constants.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Initializer.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Body.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/constants.js","packages/three-nebula/build/webpack:/Nebula/src/core/three/constants.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/BodySprite.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/InitializerUtil.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Life.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Mass.js","packages/three-nebula/build/webpack:/Nebula/src/zone/Zone.js","packages/three-nebula/build/webpack:/Nebula/src/zone/BoxZone.js","packages/three-nebula/build/webpack:/Nebula/src/zone/LineZone.js","packages/three-nebula/build/webpack:/Nebula/src/zone/MeshZone.js","packages/three-nebula/build/webpack:/Nebula/src/zone/PointZone.js","packages/three-nebula/build/webpack:/Nebula/src/zone/ScreenZone.js","packages/three-nebula/build/webpack:/Nebula/src/zone/SphereZone.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Position.js","packages/three-nebula/build/webpack:/Nebula/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","packages/three-nebula/build/webpack:/Nebula/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Radius.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Rate.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Texture.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Velocity/Velocity.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Velocity/PolarVelocity.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Velocity/RadialVelocity.js","packages/three-nebula/build/webpack:/Nebula/src/initializer/Velocity/VectorVelocity.js","packages/three-nebula/build/webpack:/Nebula/src/emitter/constants.js","packages/three-nebula/build/webpack:/Nebula/src/emitter/Emitter.js","packages/three-nebula/build/webpack:/Nebula/src/emitter/types.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/constants.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Behaviour.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Alpha.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Attraction.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Collision.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Color.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/CrossZone.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Force.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Gravity.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/RandomDrift.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Repulsion.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Rotate.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Scale.js","packages/three-nebula/build/webpack:/Nebula/src/behaviour/Spring.js","packages/three-nebula/build/webpack:/Nebula/src/core/fromJSON.js","packages/three-nebula/build/webpack:/Nebula/src/core/fromJSONAsync.js","packages/three-nebula/build/webpack:/Nebula/src/core/System.js","packages/three-nebula/build/webpack:/Nebula/src/debug/constants.js","packages/three-nebula/build/webpack:/Nebula/src/debug/Debug.js","packages/three-nebula/build/webpack:/Nebula/src/debug/log.js","packages/three-nebula/build/webpack:/Nebula/src/emitter/FollowEmitter.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/BaseRenderer.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/CustomRenderer.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/MeshRenderer.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/SpriteRenderer.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/common/ParticleBuffer/constants.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/common/constants.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/common/stores/Target.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/common/stores/UniqueList.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/common/ParticleBuffer/index.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/common/TextureAtlas/index.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/common/TextureAtlas/constants.js","packages/three-nebula/build/webpack:/Nebula/node_modules/potpack/index.mjs","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/Desktop/index.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/Mobile/index.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/Desktop/shaders/fragmentShader.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/Mobile/shaders/vertexShader.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/Mobile/shaders/fragmentShader.js","packages/three-nebula/build/webpack:/Nebula/src/renderer/GPURenderer/index.js","packages/three-nebula/build/webpack:/Nebula/src/index.js"],"sourcesContent":[null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Nebula\"] = factory();\n\telse\n\t\troot[\"Nebula\"] = factory();\n})(this, function() {\nreturn ","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.sample` for arrays.\n *\n * @private\n * @param {Array} array The array to sample.\n * @returns {*} Returns the random element.\n */\nfunction arraySample(array) {\n  var length = array.length;\n  return length ? array[baseRandom(0, length - 1)] : undefined;\n}\n\nmodule.exports = arraySample;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var arraySample = require('./_arraySample'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.sample`.\n *\n * @private\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n */\nfunction baseSample(collection) {\n  return arraySample(values(collection));\n}\n\nmodule.exports = baseSample;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arraySample = require('./_arraySample'),\n    baseSample = require('./_baseSample'),\n    isArray = require('./isArray');\n\n/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */\nfunction sample(collection) {\n  var func = isArray(collection) ? arraySample : baseSample;\n  return func(collection);\n}\n\nmodule.exports = sample;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export const BEHAVIOUR_TYPE_ABSTRACT = 'Behaviour';\nexport const BEHAVIOUR_TYPE_ALPHA = 'Alpha';\nexport const BEHAVIOUR_TYPE_ATTRACTION = 'Attraction';\nexport const BEHAVIOUR_TYPE_COLLISION = 'Collision';\nexport const BEHAVIOUR_TYPE_COLOR = 'Color';\nexport const BEHAVIOUR_TYPE_CROSS_ZONE = 'CrossZone';\nexport const BEHAVIOUR_TYPE_FORCE = 'Force';\nexport const BEHAVIOUR_TYPE_GRAVITY = 'Gravity';\nexport const BEHAVIOUR_TYPE_RANDOM_DRIFT = 'RandomDrift';\nexport const BEHAVIOUR_TYPE_REPULSION = 'Repulsion';\nexport const BEHAVIOUR_TYPE_ROTATE = 'Rotate';\nexport const BEHAVIOUR_TYPE_SCALE = 'Scale';\nexport const BEHAVIOUR_TYPE_SPRING = 'Spring';\n","export const INITIALIZER_TYPE_ABSTRACT = 'Initializer';\nexport const INITIALIZER_TYPE_BODY = 'Body';\nexport const INITIALIZER_TYPE_BODY_SPRITE = 'BodySprite';\nexport const INITIALIZER_TYPE_TEXTURE = 'Texture';\nexport const INITIALIZER_TYPE_LIFE = 'Life';\nexport const INITIALIZER_TYPE_MASS = 'Mass';\nexport const INITIALIZER_TYPE_POSITION = 'Position';\nexport const INITIALIZER_TYPE_RADIUS = 'Radius';\nexport const INITIALIZER_TYPE_ZONE = 'Zone';\nexport const INITIALIZER_TYPE_VECTOR_VELOCITY = 'VectorVelocity';\nexport const INITIALIZER_TYPE_POLAR_VELOCITY = 'PolarVelocity';\nexport const INITIALIZER_TYPE_RADIAL_VELOCITY = 'RadialVelocity';\nexport const INITIALIZER_TYPE_RATE = 'Rate';\nexport const INITIALIZER_TYPES_THAT_REQUIRE_THREE = [\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_TEXTURE,\n];\n","export const ZONE_TYPE_ABSTRACT = 'Zone';\nexport const ZONE_TYPE_BOX = 'BoxZone';\nexport const ZONE_TYPE_LINE = 'LineZone';\nexport const ZONE_TYPE_MESH = 'MeshZone';\nexport const ZONE_TYPE_POINT = 'PointZone';\nexport const ZONE_TYPE_SCREEN = 'ScreenZone';\nexport const ZONE_TYPE_SPHERE = 'SphereZone';\n","export const RENDERER_TYPE_BASE = 'BaseRenderer';\nexport const RENDERER_TYPE_CUSTOM = 'CustomRenderer';\nexport const RENDERER_TYPE_SPRITE = 'SpriteRenderer';\nexport const RENDERER_TYPE_MESH = 'MeshRenderer';\nexport const RENDERER_TYPE_GPU = 'GPURenderer';\nexport const RENDERER_TYPE_GPU_MOBILE = 'MobileGPURenderer';\nexport const RENDERER_TYPE_GPU_DESKTOP = 'DesktopGPURenderer';\n","export const PI = 3.142;\n\n/**\n * The max particle number in pool.\n *\n * @const {integer}\n */\nexport const POOL_MAX = 500;\nexport const TIME_STEP = 60;\nexport const DR = PI / 180;\n\n/**\n * 1:100\n *\n * @const {integer}\n */\nexport const MEASURE = 100;\nexport const EULER = 'euler';\nexport const RK2 = 'runge-kutta2';\nexport const RK4 = 'runge-kutta4';\nexport const VERLET = 'verlet';\nexport const BIND_EMITTER_EVENT = false;\n\nexport const __DEV__ = () => {\n  if (!process) {\n    return false;\n  }\n\n  if (!process.env) {\n    return false;\n  }\n\n  if (!process.env.NODE_ENV) {\n    return false;\n  }\n\n  if (process.env.NODE_ENV !== 'development') {\n    return false;\n  }\n\n  return true;\n};\n","import { PI } from '../constants';\n\n/**\n * The Ease class provides a collection of easing functions for use with System\n */\nexport const ease = {\n  easeLinear: function(value) {\n    return value;\n  },\n\n  easeInQuad: function(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad: function(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic: function(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic: function(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart: function(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart: function(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine: function(value) {\n    return -Math.cos(value * (PI / 2)) + 1;\n  },\n\n  easeOutSine: function(value) {\n    return Math.sin(value * (PI / 2));\n  },\n\n  easeInOutSine: function(value) {\n    return -0.5 * (Math.cos(PI * value) - 1);\n  },\n\n  easeInExpo: function(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo: function(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo: function(value) {\n    if (value === 0) return 0;\n    if (value === 1) return 1;\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc: function(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc: function(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc: function(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack: function(value) {\n    var s = 1.70158;\n\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack: function(value) {\n    var s = 1.70158;\n\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack: function(value) {\n    var s = 1.70158;\n\n    if ((value /= 0.5) < 1)\n      return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  }\n};\n\nexport const {\n  easeLinear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInSine,\n  easeOutSine,\n  easeInOutSine,\n  easeInExpo,\n  easeOutExpo,\n  easeInOutExpo,\n  easeInCirc,\n  easeOutCirc,\n  easeInOutCirc,\n  easeInBack,\n  easeOutBack,\n  easeInOutBack\n} = ease;\n\nexport const setEasingByName = easeName => {\n  if (ease[easeName]) return ease[easeName];\n  else return ease.easeLinear;\n};\n\nexport const getEasingByName = name =>\n  ease[name] ? ease[name] : ease.easeLinear;\n","import {\n  BEHAVIOUR_TYPE_ALPHA,\n  BEHAVIOUR_TYPE_ATTRACTION,\n  BEHAVIOUR_TYPE_COLOR,\n  BEHAVIOUR_TYPE_CROSS_ZONE,\n  BEHAVIOUR_TYPE_FORCE,\n  BEHAVIOUR_TYPE_GRAVITY,\n  BEHAVIOUR_TYPE_RANDOM_DRIFT,\n  BEHAVIOUR_TYPE_REPULSION,\n  BEHAVIOUR_TYPE_ROTATE,\n  BEHAVIOUR_TYPE_SCALE,\n  BEHAVIOUR_TYPE_SPRING,\n} from '../behaviour/types';\nimport {\n  INITIALIZER_TYPE_BODY,\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_LIFE,\n  INITIALIZER_TYPE_MASS,\n  INITIALIZER_TYPE_POLAR_VELOCITY,\n  INITIALIZER_TYPE_POSITION,\n  INITIALIZER_TYPE_RADIAL_VELOCITY,\n  INITIALIZER_TYPE_RADIUS,\n  INITIALIZER_TYPE_TEXTURE,\n  INITIALIZER_TYPE_VECTOR_VELOCITY,\n} from '../initializer/types';\nimport {\n  ZONE_TYPE_BOX,\n  ZONE_TYPE_LINE,\n  ZONE_TYPE_MESH,\n  ZONE_TYPE_POINT,\n  ZONE_TYPE_SPHERE,\n} from '../zone/types';\n\nimport { RENDERER_TYPE_SPRITE } from '../renderer/types';\nimport { easeLinear } from '../ease';\n\n/**\n * @desc Default particle life\n * @type {number}\n */\nexport const DEFAULT_LIFE = Infinity;\n/**\n * @desc Default particle age\n * @type {number}\n */\nexport const DEFAULT_AGE = 0;\n/**\n * @desc Default particle energy\n * @type {number}\n */\nexport const DEFAULT_ENERGY = 1;\n/**\n * @desc Default particle dead\n * @type {boolean}\n */\nexport const DEFAULT_DEAD = false;\n/**\n * @desc Default particle sleep\n * @type {boolean}\n */\nexport const DEFAULT_SLEEP = false;\n\n/**\n * @desc Default particle index\n * @type {number}\n */\nexport const DEFAULT_INDEX = 0;\n/**\n * @desc Default particle body\n * @type {?object}\n */\nexport const DEFAULT_BODY = null;\n/**\n * @desc Default particle parent\n * @type {?Emitter}\n */\nexport const DEFAULT_PARENT = null;\n/**\n * @desc Default particle mass\n * @type {number}\n */\nexport const DEFAULT_MASS = 1;\n/**\n * @desc Default particle radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 10;\n/**\n * @desc Default particle alpha\n * @type {number}\n */\nexport const DEFAULT_ALPHA = 1;\n/**\n * @desc Default particle scale\n * @type {number}\n */\nexport const DEFAULT_SCALE = 1;\n/**\n * @desc Default particle useColor\n * @type {boolean}\n */\nexport const DEFAULT_USE_COLOR = false;\n/**\n * @desc Default particle useAlpha\n * @type {boolean}\n */\nexport const DEFAULT_USE_ALPHA = false;\n/**\n * @desc Default particle easing\n * @type {function}\n */\nexport const DEFAULT_EASING = easeLinear;\n\n/**\n * @desc The default delta provided to the System instance\n * @type {number}\n */\nexport const DEFAULT_SYSTEM_DELTA = 0.0167;\n\n/**\n * @desc The types of initializers supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_INITIALIZER_TYPES = [\n  INITIALIZER_TYPE_POSITION,\n  INITIALIZER_TYPE_LIFE,\n  INITIALIZER_TYPE_RADIUS,\n  INITIALIZER_TYPE_MASS,\n  INITIALIZER_TYPE_BODY,\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_TEXTURE,\n  INITIALIZER_TYPE_POLAR_VELOCITY,\n  INITIALIZER_TYPE_RADIAL_VELOCITY,\n  INITIALIZER_TYPE_VECTOR_VELOCITY,\n];\n\n/**\n * @desc The types of behaviours supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_BEHAVIOUR_TYPES = [\n  BEHAVIOUR_TYPE_ALPHA,\n  BEHAVIOUR_TYPE_ATTRACTION,\n  BEHAVIOUR_TYPE_COLOR,\n  BEHAVIOUR_TYPE_CROSS_ZONE,\n  BEHAVIOUR_TYPE_FORCE,\n  BEHAVIOUR_TYPE_GRAVITY,\n  BEHAVIOUR_TYPE_RANDOM_DRIFT,\n  BEHAVIOUR_TYPE_REPULSION,\n  BEHAVIOUR_TYPE_ROTATE,\n  BEHAVIOUR_TYPE_SCALE,\n  BEHAVIOUR_TYPE_SPRING,\n];\n\n/**\n * @desc The types of renderers supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_RENDERER_TYPES = [RENDERER_TYPE_SPRITE];\n\n/**\n * @desc The types of zones supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_ZONE_TYPES = [\n  ZONE_TYPE_BOX,\n  ZONE_TYPE_LINE,\n  ZONE_TYPE_MESH,\n  ZONE_TYPE_POINT,\n  ZONE_TYPE_SPHERE,\n];\n\nexport { INITIALIZER_TYPES_THAT_REQUIRE_THREE } from '../initializer/types';\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default {\n  getRGB: function(color) {\n    var rgb = {};\n\n    if (typeof color === 'number') {\n      hex = Math.floor(color);\n      rgb.r = ((color >> 16) & 255) / 255;\n      rgb.g = ((color >> 8) & 255) / 255;\n      rgb.b = (color & 255) / 255;\n    } else if (typeof color === 'string') {\n      var m;\n\n      if (\n        (m = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(\n          color\n        ))\n      ) {\n        rgb.r = Math.min(255, parseInt(m[1], 10)) / 255;\n        rgb.g = Math.min(255, parseInt(m[2], 10)) / 255;\n        rgb.b = Math.min(255, parseInt(m[3], 10)) / 255;\n        // eslint-disable-next-line no-useless-escape\n      } else if ((m = /^\\#([A-Fa-f0-9]+)$/.exec(color))) {\n        var hex = m[1];\n\n        rgb.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        rgb.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        rgb.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n      }\n    } else {\n      rgb.r = color.r;\n      rgb.g = color.g;\n      rgb.b = color.b;\n    }\n\n    return rgb;\n  },\n};\n","export default {\n  _id: 0,\n  _uids: new Map(),\n  getNewId: function() {\n    return `PUID_${++this._id}`;\n  },\n  id: function(functionOrObject) {\n    if (this._uids.has(functionOrObject)) {\n      return this._uids.get(functionOrObject);\n    }\n\n    const newId = this.getNewId();\n\n    this._uids.set(functionOrObject, newId);\n\n    return newId;\n  },\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n\nexport { _Math };","import { _Math } from './Math.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector3 };","import { Vector3 } from './Vector3.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n\nexport { Matrix4 };","import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { _Math } from './Math.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Euler };","/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nimport { _Math } from './Math.js';\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Quaternion };","import { Vector3 } from '../core/three/';\n\nexport default {\n  toScreenPos: (function() {\n    var vector = new Vector3();\n\n    return function(pos, camera, canvas) {\n      vector.copy(pos);\n      // map to normalized device coordinate (NDC) space\n      vector.project(camera);\n      // map to 2D screen space\n      vector.x = Math.round(((vector.x + 1) * canvas.width) / 2);\n      vector.y = Math.round(((-vector.y + 1) * canvas.height) / 2);\n      vector.z = 0;\n\n      return vector;\n    };\n  })(),\n\n  toSpacePos: (function() {\n    var vector = new Vector3(),\n      dir = new Vector3(),\n      distance;\n\n    return function(pos, camera, canvas) {\n      vector.set(\n        (pos.x / canvas.width) * 2 - 1,\n        -(pos.y / canvas.height) * 2 + 1,\n        0.5\n      );\n      vector.unproject(camera);\n\n      dir.copy(vector.sub(camera.position).normalize());\n      distance = -camera.position.z / dir.z;\n      vector.copy(camera.position);\n      vector.add(dir.multiplyScalar(distance));\n\n      return vector;\n    };\n  })(),\n};\n","export default {\n  initValue: function(value, defaults) {\n    var _value = value != null && value != undefined ? value : defaults;\n\n    return _value;\n  },\n\n  isArray: function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  destroyArray: function(array) {\n    array.length = 0;\n  },\n\n  destroyObject: function(obj) {\n    for (var o in obj) delete obj[o];\n  },\n\n  isUndefined: function() {\n    for (var id in arguments) {\n      var arg = arguments[id];\n\n      if (arg !== undefined) return false;\n    }\n\n    return true;\n  },\n\n  setVectorByObj: function(target, pOBJ) {\n    if (pOBJ['x'] !== undefined) target.position.x = pOBJ['x'];\n    if (pOBJ['y'] !== undefined) target.position.y = pOBJ['y'];\n    if (pOBJ['z'] !== undefined) target.position.z = pOBJ['z'];\n\n    if (pOBJ['vx'] !== undefined) target.velocity.x = pOBJ['vx'];\n    if (pOBJ['vy'] !== undefined) target.velocity.y = pOBJ['vy'];\n    if (pOBJ['vz'] !== undefined) target.velocity.z = pOBJ['vz'];\n\n    if (pOBJ['ax'] !== undefined) target.acceleration.x = pOBJ['ax'];\n    if (pOBJ['ay'] !== undefined) target.acceleration.y = pOBJ['ay'];\n    if (pOBJ['az'] !== undefined) target.acceleration.z = pOBJ['az'];\n\n    if (pOBJ['p'] !== undefined) target.position.copy(pOBJ['p']);\n    if (pOBJ['v'] !== undefined) target.velocity.copy(pOBJ['v']);\n    if (pOBJ['a'] !== undefined) target.acceleration.copy(pOBJ['a']);\n\n    if (pOBJ['position'] !== undefined) target.position.copy(pOBJ['position']);\n    if (pOBJ['velocity'] !== undefined) target.velocity.copy(pOBJ['velocity']);\n    if (pOBJ['accelerate'] !== undefined)\n      target.acceleration.copy(pOBJ['accelerate']);\n  },\n\n  //set prototype\n  setPrototypeByObj: function(target, proObj, filters) {\n    for (var key in proObj) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (target.hasOwnProperty(key)) {\n        if (filters) {\n          if (filters.indexOf(key) < 0)\n            target[key] = this._getValue(proObj[key]);\n        } else {\n          target[key] = this._getValue(proObj[key]);\n        }\n      }\n    }\n\n    return target;\n  },\n\n  _getValue: function(pan) {\n    if (pan.constructor.type === 'Span') return pan.getValue();\n    else return pan;\n  },\n};\n","import uid from 'uuid/v1';\n\nexport default uid;\n","export { default as ColorUtil } from './ColorUtil';\nexport { default as PUID } from './PUID';\nexport { default as THREEUtil } from './THREEUtil';\nexport { default as Util } from './Util';\nexport { default as uid } from './uid';\n\nexport const withDefaults = (defaults, properties) => ({\n  ...defaults,\n  ...properties,\n});\n","import { PI } from '../constants';\n\nexport default {\n  randomAToB: function(a, b, INT) {\n    if (!INT) return a + Math.random() * (b - a);\n    else return ((Math.random() * (b - a)) >> 0) + a;\n  },\n  randomFloating: function(center, f, INT) {\n    return this.randomAToB(center - f, center + f, INT);\n  },\n\n  randomZone: function(display) {}, //eslint-disable-line\n\n  degreeTransform: function(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16: function getRGB(num) {\n    return '#' + num.toString(16);\n  },\n\n  randomColor: function() {\n    return (\n      '#' +\n      ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n    );\n  },\n\n  lerp: function(a, b, energy) {\n    return b + (a - b) * energy;\n  },\n\n  getNormal: function(v, n) {\n    if (v.x == 0 && v.y == 0) {\n      if (v.z == 0) n.set(1, 0, 1);\n      else n.set(1, 1, -v.y / v.z);\n    } else {\n      if (v.x == 0) n.set(1, 0, 1);\n      else n.set(-v.y / v.x, 1, 1);\n    }\n\n    return n.normalize();\n  },\n\n  /**\n   * Rodrigues' Rotation Formula\n   * https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula\n   * v′ = vcos(θ) + k(k⋅v)(1−cos(θ)) + (k*v)sin(θ)\n   */\n  axisRotate: function(v0, v, k, tha) {\n    var cos = Math.cos(tha);\n    var sin = Math.sin(tha);\n    var p = k.dot(v) * (1 - cos);\n\n    v0.copy(k);\n    v0.cross(v).scalar(sin);\n    v0.addValue(v.x * cos, v.y * cos, v.z * cos);\n    v0.addValue(k.x * p, k.y * p, k.z * p);\n  }\n};\n","import MathUtils from './MathUtils';\nimport Util from '../utils/Util';\nimport { MATH_TYPE_SPAN as type } from './types';\n\nexport default class Span {\n  /**\n   * Span Class. Get a random Number from a to b. Or from c-a to c+b\n   * @param {Number|Array} a - min number\n   * @param {Number} b - max number\n   * @param {Number} center - the center's z value\n   * @example\n   * var span = new Span(0,30);\n   * or\n   * var span = new Span([\"#fff\",\"#ff0\",\"#000\"]);\n   * or\n   * var span = new Span(5,1,\"center\");\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, center) {\n    this._isArray = false;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    if (Util.isArray(a)) {\n      this._isArray = true;\n      this.a = a;\n    } else {\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this._center = Util.initValue(center, false);\n    }\n  }\n\n  /**\n   * Span.getValue function\n   * @name get a random Number from a to b. Or get a random Number from c-a to c+b\n   * @param {number} INT or int\n   * @return {number} a random Number\n   */\n  getValue(INT) {\n    if (this._isArray) {\n      return this.a[(this.a.length * Math.random()) >> 0];\n    } else {\n      if (!this._center) return MathUtils.randomAToB(this.a, this.b, INT);\n      else return MathUtils.randomFloating(this.a, this.b, INT);\n    }\n  }\n}\n\nexport const createSpan = (a, b, c) => {\n  if (a instanceof Span) return a;\n\n  if (b === undefined) {\n    return new Span(a);\n  } else {\n    if (c === undefined) return new Span(a, b);\n    else return new Span(a, b, c);\n  }\n};\n","export const MATH_TYPE_ARRAY_SPAN = 'ArraySpan';\nexport const MATH_TYPE_COLOR_SPAN = 'ColorSpan';\nexport const MATH_TYPE_BOX = 'Box';\nexport const MATH_TYPE_POLAR_3D = 'Polar3D';\nexport const MATH_TYPE_SPAN = 'Span';\nexport const MATH_TYPE_VECTOR_3D = 'Vector3D';\n","import Span from './Span';\nimport sample from 'lodash/sample';\nimport { MATH_TYPE_ARRAY_SPAN as type } from './types';\n\n/**\n * Class for storing items of mixed type and fetching a randomised\n * value from these items.\n *\n */\nexport default class ArraySpan extends Span {\n  /**\n   * Constructs an ArraySpan instance.\n   *\n   * @param {mixed|array<mixed>} items - Items\n   * @return void\n   */\n  constructor(items) {\n    super();\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc An array of colors\n     * @type {array}\n     */\n    this.items = Array.isArray(items) ? items : [items];\n  }\n\n  /**\n   * Gets a random item.\n   *\n   * @return {mixed}\n   */\n  getValue() {\n    return sample(this.items);\n  }\n}\n\n/**\n * Attempts to create an ArraySpan from the items provided.\n *\n * @param {mixed} items - Items to try and create an ArraySpan from\n * @return {?ArraySpan}\n */\nexport const createArraySpan = items => {\n  if (!items) {\n    return null;\n  }\n\n  if (items instanceof ArraySpan) {\n    return items;\n  }\n\n  return new ArraySpan(items);\n};\n","import MathUtils from './MathUtils';\nimport Span from './Span';\nimport sample from 'lodash/sample';\nimport { MATH_TYPE_COLOR_SPAN as type } from './types';\n\n/**\n * Class for storing and interacting with an array of colours.\n *\n */\nexport default class ColorSpan extends Span {\n  /**\n   * Constructs a ColorSpan instance.\n   *\n   * @param {string|array<string>} colors - A color or array of colors. If the\n   * string 'random' is provided, a random color will be returned from getValue\n   * @return void\n   */\n  constructor(colors) {\n    super();\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if a random color should be returned from the getValue method.\n     * @type {boolean}\n     */\n    this.shouldRandomize = colors === 'random' ? true : false;\n\n    /**\n     * @desc An array of colors to select from\n     * @type {array<string>}\n     */\n    this.colors = Array.isArray(colors) ? colors : [colors];\n  }\n\n  /**\n   * Gets a color from the color array\n   * or a random color if this.shouldRandomize is true.\n   *\n   * @return {string} a hex color\n   */\n  getValue() {\n    return this.shouldRandomize ? MathUtils.randomColor() : sample(this.colors);\n  }\n}\n\n/**\n * Attempts to create an ArraySpan from the colors provided.\n *\n * @param {mixed} colors - colors to try and create an ArraySpan from\n * @return {?ColorSpan}\n */\nexport const createColorSpan = colors => {\n  if (!colors) {\n    console.warn(\n      `Invalid colors argument ${colors} passed to createColorSpan. Defaulting to 'random'.`\n    );\n\n    colors = 'random';\n  }\n\n  if (colors instanceof ColorSpan) {\n    return colors;\n  }\n\n  return new ColorSpan(colors);\n};\n","import { MATH_TYPE_BOX as type } from './types';\n\nexport default class Box {\n  constructor(x, y, z, w, h, d) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.width = w;\n    this.height = h;\n    this.depth = d;\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y, z) {\n    if (\n      x <= this.right &&\n      x >= this.x &&\n      y <= this.bottom &&\n      y >= this.y &&\n      z <= this.depth &&\n      z >= this.z\n    )\n      return true;\n    else return false;\n  }\n}\n","/**\n * @see https://en.wikipedia.org/wiki/Euler_method\n * @type {string}\n */\nexport const INTEGRATION_TYPE_EULER = 'EULER';\n\n/**\n * @see http://web.mit.edu/10.001/Web/Course_Notes/Differential_Equations_Notes/node5.html\n * @type {string}\n */\nexport const INTEGRATION_TYPE_RK2 = 'RUNGE_KUTTA_2';\n\n/**\n * @see http://web.mit.edu/10.001/Web/Course_Notes/Differential_Equations_Notes/node5.html\n * @type {string}\n */\nexport const INTEGRATION_TYPE_RK4 = 'RUNGE_KUTTA_4';\n\n/**\n * @see https://en.wikipedia.org/wiki/Verlet_integration\n * @type {string}\n */\nexport const INTEGRATION_TYPE_VERLET = 'VERLET';\n","import { INTEGRATION_TYPE_EULER } from './constants';\nimport { DEFAULT_SYSTEM_DELTA } from '../core/constants';\n\n/**\n * Performs euler integration on the particle.\n *\n * @param {Particle} particle - The particle to integrate\n * @param {number} time - The factor of time to use\n * @param {number} damping - The damping to use\n * @return void\n */\nconst eulerIntegration = (particle, time, damping) => {\n  if (particle.sleep) {\n    return;\n  }\n\n  particle.old.position.copy(particle.position);\n  particle.old.velocity.copy(particle.velocity);\n  particle.acceleration.scalar(1 / particle.mass);\n  particle.velocity.add(particle.acceleration.scalar(time));\n  particle.position.add(particle.old.velocity.scalar(time));\n  damping &&\n    particle.velocity.scalar(Math.pow(damping, time / DEFAULT_SYSTEM_DELTA));\n  particle.acceleration.clear();\n};\n\n/**\n * Performs the chosen integration on the particle.\n * Defaults to euler integration.\n *\n * @param {Particle} particle - The particle to integrate\n * @param {number} time - The factor of time to use\n * @param {number} damping - The damping to use\n * @param {string} [type=INTEGRATION_TYPE_EULER] - The algorithm to use\n * @return void\n */\nexport const integrate = (\n  particle,\n  time,\n  damping,\n  type = INTEGRATION_TYPE_EULER\n) => {\n  switch (type) {\n    case INTEGRATION_TYPE_EULER:\n      eulerIntegration(particle, time, damping);\n      break;\n    default:\n      eulerIntegration(particle, time, damping);\n  }\n};\n","import { Euler, Vector3 } from '../core/three/';\n\nexport default class Vector3D extends Vector3 {\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = 0.0;\n\n    return this;\n  }\n\n  scalar(s) {\n    this.x *= s;\n    this.y *= s;\n    this.z *= s;\n\n    return this;\n  }\n\n  addValue(a, b, c) {\n    this.x += a;\n    this.y += b;\n    this.z += c;\n\n    return this;\n  }\n\n  toString() {\n    return 'x:' + this.x + 'y:' + this.y + 'z:' + this.z;\n  }\n\n  eulerFromDir(vector3D) {\n    const euler = new Euler();\n\n    return euler.setFromVector3(vector3D);\n  }\n}\n","import Vector3D from './Vector3D';\nimport { MATH_TYPE_POLAR_3D as type } from './types';\n\nexport default class Polar3D {\n  constructor(radius, theta, phi) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.radius = radius || 1;\n    this.phi = phi || 0;\n    this.theta = theta || 0;\n  }\n\n  set(radius, theta, phi) {\n    this.radius = radius || 1;\n    this.phi = phi || 0;\n    this.theta = theta || 0;\n\n    return this;\n  }\n\n  setRadius(radius) {\n    this.radius = radius;\n\n    return this;\n  }\n\n  setPhi(phi) {\n    this.phi = phi;\n\n    return this;\n  }\n\n  setTheta(theta) {\n    this.theta = theta;\n\n    return this;\n  }\n\n  copy(p) {\n    this.radius = p.radius;\n    this.phi = p.phi;\n    this.theta = p.theta;\n\n    return this;\n  }\n\n  toVector3D() {\n    return new Vector3D(this.getX(), this.getY(), this.getZ());\n  }\n\n  getX() {\n    return this.radius * Math.sin(this.theta) * Math.cos(this.phi);\n  }\n\n  getY() {\n    return -this.radius * Math.sin(this.theta) * Math.sin(this.phi);\n  }\n\n  getZ() {\n    return this.radius * Math.cos(this.theta);\n  }\n\n  normalize() {\n    this.radius = 1;\n\n    return this;\n  }\n\n  equals(v) {\n    return (\n      v.radius === this.radius && v.phi === this.phi && v.theta === this.theta\n    );\n  }\n\n  clear() {\n    this.radius = 0.0;\n    this.phi = 0.0;\n    this.theta = 0.0;\n\n    return this;\n  }\n\n  clone() {\n    return new Polar3D(this.radius, this.phi, this.theta);\n  }\n}\n","import {\n  DEFAULT_AGE,\n  DEFAULT_ALPHA,\n  DEFAULT_BODY,\n  DEFAULT_DEAD,\n  DEFAULT_EASING,\n  DEFAULT_ENERGY,\n  DEFAULT_LIFE,\n  DEFAULT_MASS,\n  DEFAULT_PARENT,\n  DEFAULT_RADIUS,\n  DEFAULT_SCALE,\n  DEFAULT_SLEEP,\n  DEFAULT_USE_ALPHA,\n  DEFAULT_USE_COLOR,\n} from './constants';\nimport { Util, uid } from '../utils';\n\nimport { PI } from '../constants';\nimport { Vector3D } from '../math';\nimport { CORE_TYPE_PARTICLE as type } from './types';\n\n/**\n * A Particle is an object that is emitted by an emitter.\n *\n */\nexport default class Particle {\n  /**\n   * Constructs a Particle instance.\n   *\n   * @param {object} properties - The properties to instantiate the particle with\n   * @property {number} properties.life - The particle's life\n   * @property {number} properties.age - The particle's age\n   * @property {number} properties.energy - The particle's energy loss\n   * @property {boolean} properties.dead - Determines if the particle is dead or not\n   * @property {boolean} properties.sleep - Determines if the particle is sleeping or not\n   * @property {object} properties.target - The particle's target\n   * @property {object} properties.body - The particle's body\n   * @property {number} properties.mass - The particle's mass\n   * @property {number} properties.radius - The particle's radius\n   * @property {number} properties.alpha - The particle's alpha\n   * @property {number} properties.scale - The particle's scale\n   * @property {number} properties.rotation - The particle's rotation\n   * @property {string|number} properties.color - The particle's color\n   * @property {function} properties.easing - The particle's easing\n   * @property {Vector3D} properties.position - The particle's position\n   * @property {Vector3D} properties.velocity - The particle's velocity\n   * @property {Vector3D} properties.acceleration - The particle's acceleration\n   * @property {array} properties.behaviours - The particle's behaviours array\n   * @property {object} properties.transform - The particle's transform collection\n   * @return void\n   */\n  constructor(properties) {\n    /**\n     * @desc The particle's unique id\n     * @type {number}\n     */\n    this.id = `particle-${uid()}`;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @desc The particle's life\n     * @type {number}\n     */\n    this.life = DEFAULT_LIFE;\n    /**\n     * @desc The particle's age\n     * @type {number}\n     */\n    this.age = DEFAULT_AGE;\n    /**\n     * @desc The particle's energy loss\n     * @type {number}\n     */\n    this.energy = DEFAULT_ENERGY;\n    /**\n     * @desc Determines if the particle is dead or not\n     * @type {number}\n     */\n    this.dead = DEFAULT_DEAD;\n    /**\n     * @desc Determines if the particle is sleeping or not\n     * @type {number}\n     */\n    this.sleep = DEFAULT_SLEEP;\n    /**\n     * @desc The particle's body\n     * @type {object}\n     */\n    this.body = DEFAULT_BODY;\n    /**\n     * @desc The particle's parent\n     * @type {?Emitter}\n     */\n    this.parent = DEFAULT_PARENT;\n    /**\n     * @desc The particle's mass\n     * @type {number}\n     */\n    this.mass = DEFAULT_MASS;\n    /**\n     * @desc The particle's radius\n     * @type {number}\n     */\n    this.radius = DEFAULT_RADIUS;\n    /**\n     * @desc The particle's alpha\n     * @type {number}\n     */\n    this.alpha = DEFAULT_ALPHA;\n    /**\n     * @desc The particle's scale\n     * @type {number}\n     */\n    this.scale = DEFAULT_SCALE;\n    /**\n     * @desc Determines whether to use color or not\n     * @type {boolean}\n     */\n    this.useColor = DEFAULT_USE_COLOR;\n    /**\n     * @desc Determines whether to use alpha or not\n     * @type {boolean}\n     */\n    this.useAlpha = DEFAULT_USE_ALPHA;\n    /**\n     * @desc The particle's easing\n     * @type {string}\n     */\n    this.easing = DEFAULT_EASING;\n    /**\n     * @desc The particle's position\n     * @type {Vector3D}\n     */\n    this.position = new Vector3D();\n    /**\n     * @desc The particle's velocity\n     * @type {Vector3D}\n     */\n    this.velocity = new Vector3D();\n    /**\n     * @desc The particle's acceleration\n     * @type {Vector3D}\n     */\n    this.acceleration = new Vector3D();\n    /**\n     * @desc The particle's last position, velocity and acceleration\n     * @type {Vector3D}\n     */\n    this.old = {};\n    /**\n     * @desc The particle's old position\n     * @type {Vector3D}\n     */\n    this.old.position = this.position.clone();\n    /**\n     * @desc The particle's old velocity\n     * @type {Vector3D}\n     */\n    this.old.velocity = this.velocity.clone();\n    /**\n     * @desc The particle's old acceleration\n     * @type {Vector3D}\n     */\n    this.old.acceleration = this.acceleration.clone();\n    /**\n     * @desc The particle's behaviours array\n     * @type {array}\n     */\n    this.behaviours = [];\n    /**\n     * @desc The particle's transform collection\n     * @type {object}\n     */\n    this.transform = {};\n    /**\n     * @desc The particle's color store\n     * @type {object}\n     */\n    this.color = { r: 0, g: 0, b: 0 };\n    /**\n     * @desc The particle's rotation\n     * @type {number}\n     */\n    this.rotation = new Vector3D();\n\n    /**\n     * @desc The particle's distance to the camera, only set by the GPURenderer for depth sorting purposes.\n     * @type {number}\n     */\n    this.distanceToCamera = 0;\n\n    // override constructor props with passed properties.\n    Util.setPrototypeByObj(this, properties);\n  }\n\n  /**\n   * Gets the particle's current direction.\n   *\n   * @return {number}\n   */\n  getDirection() {\n    return Math.atan2(this.velocity.x, -this.velocity.y) * (180 / PI);\n  }\n\n  /**\n   * Resets the particle's default properties and clear's its particle's position,\n   * velocity, acceleration, color and rotation. Also destroy's the particle's\n   * transform collection & removes all behaviours.\n   *\n   * @return {Particle}\n   */\n  reset() {\n    this.life = DEFAULT_LIFE;\n    this.age = DEFAULT_AGE;\n    this.energy = DEFAULT_ENERGY;\n    this.dead = DEFAULT_DEAD;\n    this.sleep = DEFAULT_SLEEP;\n    this.body = DEFAULT_BODY;\n    this.parent = DEFAULT_PARENT;\n    this.mass = DEFAULT_MASS;\n    this.radius = DEFAULT_RADIUS;\n    this.alpha = DEFAULT_ALPHA;\n    this.scale = DEFAULT_SCALE;\n    this.useColor = DEFAULT_USE_COLOR;\n    this.useAlpha = DEFAULT_USE_ALPHA;\n    this.easing = DEFAULT_EASING;\n    this.position.set(0, 0, 0);\n    this.velocity.set(0, 0, 0);\n    this.acceleration.set(0, 0, 0);\n    this.old.position.set(0, 0, 0);\n    this.old.velocity.set(0, 0, 0);\n    this.old.acceleration.set(0, 0, 0);\n    this.color.r = 0;\n    this.color.g = 0;\n    this.color.b = 0;\n\n    this.rotation.clear();\n    Util.destroyObject(this.transform);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  /**\n   * Updates the particle's properties by applying each behaviour to the particle.\n   * Will also update the particle's energy, unless it's age is greater than it's life\n   * in which case it will be destroyed.\n   *\n   * @param {number} time - Integration time\n   * @param {integer} index - Particle index\n   * @return void\n   */\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n\n      let i = this.behaviours.length;\n\n      while (i--) {\n        let behaviour = this.behaviours[i];\n\n        //behaviour && \n        behaviour.applyBehaviour(this, time, index);\n      }\n    }\n\n    if (this.age >= this.life) {\n      this.destroy();\n    } else {\n      const scale = this.easing(this.age / this.life);\n\n      this.energy = Math.max(1 - scale, 0);\n    }\n  }\n\n  /**\n   * Adds a behaviour to the particle.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the particle\n   * @return void\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * Adds multiple behaviours to the particle.\n   *\n   * @param {array<Behaviour>} behaviours - An array of behaviours to add to the particle\n   * @return void\n   */\n  addBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  /**\n   * Removes the behaviour from the particle.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove from the particle\n   * @return void\n   */\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.behaviours.splice(index, 1);\n    }\n  }\n\n  /**\n   * Removes all behaviours from the particle.\n   *\n   * @return void\n   */\n  removeAllBehaviours() {\n    Util.destroyArray(this.behaviours);\n  }\n\n  /**\n   * Destroys the particle.\n   *\n   * @return void\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export const CORE_TYPE_PARTICLE = 'Particle';\nexport const CORE_TYPE_POOL = 'Pool';\nexport const CORE_TYPE_SYSTEM = 'System';\n","import PUID from '../utils/PUID';\nimport { CORE_TYPE_POOL as type } from './types';\n/**\n * An object pool implementation. Used for pooling objects to avoid unnecessary\n * garbage collection.\n *\n */\nexport default class Pool {\n  /**\n   * Constructs a Pool instance.\n   *\n   * @return void\n   */\n  constructor() {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @desc Incrementing id that keeps a count of the number of objects created\n     * @type {integer}\n     */\n    this.cID = 0;\n\n    /**\n     * @desc Map of pools in the format of PUID<String>: pool<Array>\n     * @type {object}\n     */\n    this.list = {};\n  }\n\n  /**\n   * Attempts to create a new object either by creating a new instance or calling its\n   * clone method.\n   *\n   * TODO COVERAGE - for the constructorArgs\n   * @param {function|object} functionOrObject - The object to instantiate or clone\n   * @return {object|undefined}\n   */\n  create(functionOrObject, ...constructorArgs) {\n    if (!this.canCreateNewObject(functionOrObject)) {\n      throw new Error(\n        'The pool is unable to create or clone the object supplied'\n      );\n    }\n\n    this.cID++;\n\n    if (this.canInstantiateObject(functionOrObject)) {\n      return new functionOrObject(...constructorArgs);\n    }\n\n    if (this.canCloneObject(functionOrObject)) {\n      return functionOrObject.clone();\n    }\n  }\n\n  /**\n   * Determines if the object is able to be instantiated or not.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canInstantiateObject(object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * Determines if the object is able to be cloned or not.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canCloneObject(object) {\n    return object.clone && typeof object.clone === 'function';\n  }\n\n  /**\n   * Determines if a new object is able to be created.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canCreateNewObject(object) {\n    return this.canInstantiateObject(object) || this.canCloneObject(object)\n      ? true\n      : false;\n  }\n\n  /**\n   * Gets a count of all objects in the pool.\n   *\n   * @return {integer}\n   */\n  getCount() {\n    var count = 0;\n\n    for (var id in this.list) count += this.list[id].length;\n\n    return count++;\n  }\n\n  /**\n   * Gets an object either by creating a new one or retrieving it from the pool.\n   *\n   * @param {function|object} obj - The function or object to get\n   * @param {array} args - The args to pass to the function on creation\n   * @return {object}\n   */\n  get(obj, ...args) {\n    var p,\n      puid = obj.__puid || PUID.id(obj);\n\n    if (this.list[puid] && this.list[puid].length > 0)\n      p = this.list[puid].pop();\n    else p = this.create(obj, ...args);\n\n    p.__puid = obj.__puid || puid;\n\n    return p;\n  }\n\n  /**\n   * Pushes an object into the pool.\n   *\n   * @param {object} obj - The object to expire\n   * @return {integer}\n   */\n  expire(obj) {\n    return this._getList(obj.__puid).push(obj);\n  }\n\n  /**\n   * Destroys all pools.\n   *\n   * @return void\n   */\n  destroy() {\n    for (var id in this.list) {\n      this.list[id].length = 0;\n      delete this.list[id];\n    }\n  }\n\n  /**\n   * Gets the pool mapped to the UID.\n   *\n   * @param {string} uid - The pool uid\n   * @return {array}\n   */\n  _getList(uid) {\n    uid = uid || 'default';\n    if (!this.list[uid]) this.list[uid] = [];\n\n    return this.list[uid];\n  }\n}\n","import EventDispatcher from './EventDispatcher';\n\nexport default EventDispatcher;\nexport * from './constants';\n","/*\n * EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this.listeners = null;\n  }\n\n  set listeners(listeners) {\n    this._listeners = listeners;\n  }\n\n  get listeners() {\n    return this._listeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this.listeners) {\n      this.listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this.listeners[type]) this.listeners[type] = [];\n    this.listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this.listeners) return;\n    if (!this.listeners[type]) return;\n\n    var arr = this.listeners[type];\n\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete this.listeners[type];\n        }\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this.listeners = null;\n    else if (this.listeners) delete this.listeners[type];\n  }\n\n  dispatchEvent(eventName, eventTarget) {\n    var ret = false,\n      listeners = this.listeners;\n\n    if (eventName && listeners) {\n      var arr = listeners[eventName];\n\n      if (!arr) return ret;\n\n      arr = arr.slice();        //Should use a copy into a temporary here instead...\n      // to avoid issues with items being removed or added during the dispatch\n\n      var handler,\n        i = arr.length;\n\n      while (i--) {\n        handler = arr[i];\n\n        ret = ret || handler(eventTarget);\n      }\n    }\n\n    return !!ret;\n  }\n\n  hasEventListener(type) {\n    var listeners = this.listeners;\n\n    return !!(listeners && listeners[type]);\n  }\n}\n","export const SYSTEM_UPDATE = 'SYSTEM_UPDATE';\nexport const PARTICLE_CREATED = 'PARTICLE_CREATED';\nexport const PARTICLE_UPDATE = 'PARTICLE_UPDATE';\nexport const PARTICLE_DEAD = 'PARTICLE_DEAD';\nexport const EMITTER_ADDED = 'EMITTER_ADDED';\nexport const EMITTER_REMOVED = 'EMITTER_REMOVED';\nexport const EMITTER_DEAD = 'EMITTER_DEAD';\nexport const SYSTEM_UPDATE_AFTER = 'SYSTEM_UPDATE_AFTER';\n","import { INITIALIZER_TYPE_ABSTRACT } from './types';\n\n/**\n * The base Emitter / Particle property class.\n *\n * @abstract\n */\nexport default class Initializer {\n  /**\n   * Constructs an Initializer instance.\n   *\n   * @param {string} [type=INITIALIZER_TYPE_ABSTRACT] - The intiializer type\n   * @param {boolean} [isEnabled=true] - Determines if the initializer should be enabled or not\n\n   * @return void\n   */\n  constructor(type = INITIALIZER_TYPE_ABSTRACT, isEnabled = true) {\n    this.type = type;\n    this.isEnabled = isEnabled;\n  }\n\n  /**\n   * Initializes the property on the emitter or particle.\n   *\n   * @see {@link '../emitter/emitter.js'} setupParticle\n   * @param {Emitter} emitter - the emitter to initialize the property on\n   * @param {Particle} particle - the particle to intiialize the property on\n   * @return void\n   */\n  init(emitter, particle) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (particle) {\n      this.initialize(particle);\n      particle.hasBeenInitialized = true;\n    } else {\n      this.initialize(emitter);\n      emitter.hasBeenInitialized = true;\n    }\n  }\n\n  /**\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Place custom property initialization code in this method in the subclass.\n   *\n   * @param {object} target - either an Emitter or a Particle\n   * @abstract\n   */\n  initialize(target) {} // eslint-disable-line\n\n  /**\n   * Determines if the initializer requires a Web GL API to be provided to its constructor.\n   * If true, the WebGL API will need to be provided as the first argument to the constructor\n   * and fromJSON methods.\n   *\n   * @return {boolean}\n   */\n  static requiresWebGlApi() {\n    return false;\n  }\n\n  /**\n   * Returns a new instance of the initializer from the JSON object passed.\n   *\n   * @abstract\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Behaviour}\n   */\n  static fromJSON(json) {} // eslint-disable-line\n}\n","import Initializer from './Initializer';\nimport { createArraySpan } from '../math';\nimport { INITIALIZER_TYPE_BODY as type } from './types';\n/**\n * Sets the body property on initialized particles.\n *\n */\nexport default class Body extends Initializer {\n  /**\n   * Constructs a Body initalizer instance.\n   *\n   * @param {string|number|object} body - The content for the particle body, can\n   * be a color or an object (mesh)\n   * @param {?number} w - The width of the particle body\n   * @param {?number} h - The height of the particle body\n   * @return void\n   */\n  constructor(body, w, h, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The content for the particle body\n     * @type {ArraySpan}\n     */\n    this.body = createArraySpan(body);\n\n    /**\n     * @desc The width of the particle Body\n     * @type {number}\n     */\n    this.w = w;\n\n    /**\n     * @desc The height of the particle Body\n     * @type {number}\n     */\n    this.h = h || w;\n  }\n\n  /**\n   * Sets the particle's initial body.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    var body = this.body.getValue();\n\n    if (this.w) {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        body: body,\n      };\n    } else {\n      particle.body = body;\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.body - The color for the particle body\n   * @property {number} json.width - The width of the particle body\n   * @property {number} json.height - The height of the particle body\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { body, width, height, isEnabled = true } = json;\n\n    return new Body(body, width, height, isEnabled);\n  }\n}\n","import {\n  AdditiveBlending,\n  CustomBlending,\n  MultiplyBlending,\n  NoBlending,\n  NormalBlending,\n  SubtractiveBlending,\n} from '../core/three/';\n\nexport const SUPPORTED_MATERIAL_BLENDING_MODES = {\n  AdditiveBlending,\n  CustomBlending,\n  MultiplyBlending,\n  NoBlending,\n  NormalBlending,\n  SubtractiveBlending,\n};\n\nexport const DEFAULT_MATERIAL_PROPERTIES = {\n  color: 0xff0000,\n  blending: AdditiveBlending,\n  fog: true,\n};\nexport const DEFAULT_JSON_MATERIAL_PROPERTIES = {\n  ...DEFAULT_MATERIAL_PROPERTIES,\n  blending: 'AdditiveBlending',\n};\nexport const DEFAULT_RATE_NUM_PAN = 1;\nexport const DEFAULT_RATE_TIME_PAN = 1;\n","export var REVISION = '106';\nexport var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nexport var CullFaceNone = 0;\nexport var CullFaceBack = 1;\nexport var CullFaceFront = 2;\nexport var CullFaceFrontBack = 3;\nexport var FrontFaceDirectionCW = 0;\nexport var FrontFaceDirectionCCW = 1;\nexport var BasicShadowMap = 0;\nexport var PCFShadowMap = 1;\nexport var PCFSoftShadowMap = 2;\nexport var FrontSide = 0;\nexport var BackSide = 1;\nexport var DoubleSide = 2;\nexport var FlatShading = 1;\nexport var SmoothShading = 2;\nexport var NoColors = 0;\nexport var FaceColors = 1;\nexport var VertexColors = 2;\nexport var NoBlending = 0;\nexport var NormalBlending = 1;\nexport var AdditiveBlending = 2;\nexport var SubtractiveBlending = 3;\nexport var MultiplyBlending = 4;\nexport var CustomBlending = 5;\nexport var AddEquation = 100;\nexport var SubtractEquation = 101;\nexport var ReverseSubtractEquation = 102;\nexport var MinEquation = 103;\nexport var MaxEquation = 104;\nexport var ZeroFactor = 200;\nexport var OneFactor = 201;\nexport var SrcColorFactor = 202;\nexport var OneMinusSrcColorFactor = 203;\nexport var SrcAlphaFactor = 204;\nexport var OneMinusSrcAlphaFactor = 205;\nexport var DstAlphaFactor = 206;\nexport var OneMinusDstAlphaFactor = 207;\nexport var DstColorFactor = 208;\nexport var OneMinusDstColorFactor = 209;\nexport var SrcAlphaSaturateFactor = 210;\nexport var NeverDepth = 0;\nexport var AlwaysDepth = 1;\nexport var LessDepth = 2;\nexport var LessEqualDepth = 3;\nexport var EqualDepth = 4;\nexport var GreaterEqualDepth = 5;\nexport var GreaterDepth = 6;\nexport var NotEqualDepth = 7;\nexport var MultiplyOperation = 0;\nexport var MixOperation = 1;\nexport var AddOperation = 2;\nexport var NoToneMapping = 0;\nexport var LinearToneMapping = 1;\nexport var ReinhardToneMapping = 2;\nexport var Uncharted2ToneMapping = 3;\nexport var CineonToneMapping = 4;\nexport var ACESFilmicToneMapping = 5;\n\nexport var UVMapping = 300;\nexport var CubeReflectionMapping = 301;\nexport var CubeRefractionMapping = 302;\nexport var EquirectangularReflectionMapping = 303;\nexport var EquirectangularRefractionMapping = 304;\nexport var SphericalReflectionMapping = 305;\nexport var CubeUVReflectionMapping = 306;\nexport var CubeUVRefractionMapping = 307;\nexport var RepeatWrapping = 1000;\nexport var ClampToEdgeWrapping = 1001;\nexport var MirroredRepeatWrapping = 1002;\nexport var NearestFilter = 1003;\nexport var NearestMipMapNearestFilter = 1004;\nexport var NearestMipMapLinearFilter = 1005;\nexport var LinearFilter = 1006;\nexport var LinearMipMapNearestFilter = 1007;\nexport var LinearMipMapLinearFilter = 1008;\nexport var UnsignedByteType = 1009;\nexport var ByteType = 1010;\nexport var ShortType = 1011;\nexport var UnsignedShortType = 1012;\nexport var IntType = 1013;\nexport var UnsignedIntType = 1014;\nexport var FloatType = 1015;\nexport var HalfFloatType = 1016;\nexport var UnsignedShort4444Type = 1017;\nexport var UnsignedShort5551Type = 1018;\nexport var UnsignedShort565Type = 1019;\nexport var UnsignedInt248Type = 1020;\nexport var AlphaFormat = 1021;\nexport var RGBFormat = 1022;\nexport var RGBAFormat = 1023;\nexport var LuminanceFormat = 1024;\nexport var LuminanceAlphaFormat = 1025;\nexport var RGBEFormat = RGBAFormat;\nexport var DepthFormat = 1026;\nexport var DepthStencilFormat = 1027;\nexport var RedFormat = 1028;\nexport var RGB_S3TC_DXT1_Format = 33776;\nexport var RGBA_S3TC_DXT1_Format = 33777;\nexport var RGBA_S3TC_DXT3_Format = 33778;\nexport var RGBA_S3TC_DXT5_Format = 33779;\nexport var RGB_PVRTC_4BPPV1_Format = 35840;\nexport var RGB_PVRTC_2BPPV1_Format = 35841;\nexport var RGBA_PVRTC_4BPPV1_Format = 35842;\nexport var RGBA_PVRTC_2BPPV1_Format = 35843;\nexport var RGB_ETC1_Format = 36196;\nexport var RGBA_ASTC_4x4_Format = 37808;\nexport var RGBA_ASTC_5x4_Format = 37809;\nexport var RGBA_ASTC_5x5_Format = 37810;\nexport var RGBA_ASTC_6x5_Format = 37811;\nexport var RGBA_ASTC_6x6_Format = 37812;\nexport var RGBA_ASTC_8x5_Format = 37813;\nexport var RGBA_ASTC_8x6_Format = 37814;\nexport var RGBA_ASTC_8x8_Format = 37815;\nexport var RGBA_ASTC_10x5_Format = 37816;\nexport var RGBA_ASTC_10x6_Format = 37817;\nexport var RGBA_ASTC_10x8_Format = 37818;\nexport var RGBA_ASTC_10x10_Format = 37819;\nexport var RGBA_ASTC_12x10_Format = 37820;\nexport var RGBA_ASTC_12x12_Format = 37821;\nexport var LoopOnce = 2200;\nexport var LoopRepeat = 2201;\nexport var LoopPingPong = 2202;\nexport var InterpolateDiscrete = 2300;\nexport var InterpolateLinear = 2301;\nexport var InterpolateSmooth = 2302;\nexport var ZeroCurvatureEnding = 2400;\nexport var ZeroSlopeEnding = 2401;\nexport var WrapAroundEnding = 2402;\nexport var TrianglesDrawMode = 0;\nexport var TriangleStripDrawMode = 1;\nexport var TriangleFanDrawMode = 2;\nexport var LinearEncoding = 3000;\nexport var sRGBEncoding = 3001;\nexport var GammaEncoding = 3007;\nexport var RGBEEncoding = 3002;\nexport var LogLuvEncoding = 3003;\nexport var RGBM7Encoding = 3004;\nexport var RGBM16Encoding = 3005;\nexport var RGBDEncoding = 3006;\nexport var BasicDepthPacking = 3200;\nexport var RGBADepthPacking = 3201;\nexport var TangentSpaceNormalMap = 0;\nexport var ObjectSpaceNormalMap = 1;\n","import {\n  DEFAULT_JSON_MATERIAL_PROPERTIES,\n  DEFAULT_MATERIAL_PROPERTIES,\n  SUPPORTED_MATERIAL_BLENDING_MODES,\n} from './constants';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_BODY_SPRITE as type } from './types';\nimport { withDefaults } from '../utils';\n\n/**\n * Sets the body property to be a THREE.Sprite on initialized particles.\n *\n * NOTE The texture map MUST be set on the SpriteMaterial in the TextureLoader.load\n * callback. Not doing so will cause WebGL buffer errors.\n */\nexport default class BodySprite extends Initializer {\n  /**\n   * Constructs a BodySprite initializer.\n   *\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} texture - The sprite texture\n   * @param {object} materialProperties - The sprite material properties\n   * @throws {Error} If the TextureLoader fails to load the supplied texture\n   * @return void\n   */\n  constructor(\n    THREE,\n    texture,\n    materialProperties = DEFAULT_MATERIAL_PROPERTIES,\n    isEnabled = true\n  ) {\n    super(type, isEnabled);\n\n    const { Sprite, SpriteMaterial, TextureLoader } = THREE;\n\n    /**\n     * @desc The material properties for this object's SpriteMaterial\n     * NOTE This is required for testing purposes\n     * @type {object}\n     */\n    this.materialProperties = withDefaults(\n      DEFAULT_MATERIAL_PROPERTIES,\n      materialProperties\n    );\n\n    new TextureLoader().load(\n      texture,\n      map => {\n        /**\n         * @desc The texture for the THREE.SpriteMaterial map.\n         * @type {Texture}\n         */\n        this.texture = map;\n\n        /**\n         * @desc THREE.SpriteMaterial instance.\n         * @type {SpriteMaterial}\n         */\n        this.material = new SpriteMaterial({\n          ...{ map },\n          ...this.materialProperties,\n        });\n\n        /**\n         * @desc THREE.Sprite instance.\n         * @type {Sprite}\n         */\n        this.sprite = new Sprite(this.material);\n      },\n      undefined,\n      error => {\n        throw new Error(error);\n      }\n    );\n  }\n\n  /**\n   * Sets the particle body to the sprite.\n   *\n   * @param {Particle} particle - The particle to set the body of\n   * @return void\n   */\n  initialize(particle) {\n    particle.body = this.sprite;\n  }\n\n  /**\n   * Creates a BodySprite initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} json.texture - The sprite texture\n   * @param {object} json.materialProperties - The sprite material properties\n   * @return {BodySprite}\n   */\n  static fromJSON(json, THREE) {\n    const {\n      texture,\n      materialProperties = DEFAULT_JSON_MATERIAL_PROPERTIES,\n      isEnabled = true,\n    } = json;\n\n    const ensureMappedBlendingMode = properties => {\n      const { blending } = properties;\n\n      return {\n        ...properties,\n        blending: blending\n          ? SUPPORTED_MATERIAL_BLENDING_MODES[blending]\n          : SUPPORTED_MATERIAL_BLENDING_MODES[\n            DEFAULT_JSON_MATERIAL_PROPERTIES.blending\n          ],\n      };\n    };\n\n    return new BodySprite(\n      THREE,\n      texture,\n      withDefaults(\n        DEFAULT_JSON_MATERIAL_PROPERTIES,\n        ensureMappedBlendingMode(materialProperties)\n      ),\n      isEnabled\n    );\n  }\n}\n","import { Euler } from '../core/three/';\n\nconst particleEuler = new Euler();\n\nexport default {\n  particleEuler: null,\n  /**\n   * Loops through the initializers array and calls each initializer's initialize method\n   * on the supplied particle. This sets the particle's initial properties.\n   *\n   * @see {@link '../emitter/Emitter'} setupParticle\n   * @param {Emitter} emitter - The emitter that has called this method\n   * @param {Particle} particle - The particle that has just been created\n   * @param {array<Initializer>} initializers - All of the emitter's initializers\n   * @return void\n   */\n  initialize: function(emitter, particle, initializers) {\n    let i = initializers.length;\n\n    while (i--) {\n      initializers[i].init(emitter, particle);\n    }\n\n    emitter.bindEmitter && this.bindEmitter(emitter, particle);\n  },\n\n  /**\n   * Ensures that the emitter's position, velocity and accleration are added\n   * to each created particle.\n   *\n   * @param {Emitter} emitter - The emitter that is emitting the particles\n   * @param {Particle} particle - The newly created particle\n   * @return void\n   */\n  bindEmitter: function(emitter, particle) {\n    const {\n      rotation: { x, y, z },\n    } = emitter;\n\n    particle.position.add(emitter.position);\n    particle.velocity.add(emitter.velocity);\n    particle.acceleration.add(emitter.acceleration);\n    particle.velocity.applyEuler(particleEuler.set(x, y, z));\n  },\n};\n","import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_LIFE as type } from './types';\n\n/**\n * Sets the life property on initialized particles.\n *\n */\nexport default class Life extends Initializer {\n  /**\n   * Constructs a Life property instance.\n   *\n   * @param {number} min - The minimum life\n   * @param {number} max - The maximum life\n   * @param {boolean} [center] - Determines whether to average the life value\n   * @param {boolean} [isEnabled=true] - Determines if the initializer should be enabled or not\n   * @return void\n   */\n  constructor(min, max, center, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The life span of the particle.\n     * @type {Span}\n     */\n    this.lifePan = createSpan(min, max, center);\n  }\n\n  /**\n   * Sets the particle's initial life.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    if (this.lifePan.a == Infinity || this.lifePan.a == 'infi') {\n      particle.life = Infinity;\n    } else {\n      particle.life = this.lifePan.getValue();\n    }\n  }\n\n  /**\n   * Creates a Life initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.min - The minimum life time\n   * @param {number} json.max - The maximum life time\n   * @param {number} json.center - The center of the life time\n   * @param {boolean} [json.isEnabled=true] - Determines if the initializer should be enabled or not\n   * @return {Life}\n   */\n  static fromJSON(json) {\n    const { min, max, center = false, isEnabled = true } = json;\n\n    return new Life(min, max, center, isEnabled);\n  }\n}\n","import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_MASS as type } from './types';\n\n/**\n * Sets the mass property on initialized particles.\n *\n */\nexport default class Mass extends Initializer {\n  /**\n   * Constructs a Mass initializer instance.\n   *\n   * @param {number} min - The minumum mass for the particle\n   * @param {number} max - The maximum mass for the particle\n   * @param {boolean} [center] - Determines whether to average the mass value\n   * @return void\n   */\n  constructor(min, max, center = false, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The mass span which is used to set the particle mass value.\n     * @type {Span}\n     */\n    this.massPan = createSpan(min, max, center);\n  }\n\n  /**\n   * Sets the particle's initial mass.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    particle.mass = this.massPan.getValue();\n  }\n\n  /**\n   * Creates a Mass initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.min - The minimum mass\n   * @property {number} json.max - The maximum mass\n   * @property {number} json.center - The center of the mass\n   * @return {Mass}\n   */\n  static fromJSON(json) {\n    const { min, max, center = false, isEnabled = true } = json;\n\n    return new Mass(min, max, center, isEnabled);\n  }\n}\n","import Vector3D from '../math/Vector3D';\nimport { ZONE_TYPE_ABSTRACT } from './types';\n\n/**\n * A Zone determines the area in 3D space where an emitter's particles can position\n * themselves. They are supplied to both the Position initializer\n * and the CrossZone behaviour.\n *\n * @see {@link '../initialize/Position.js'}\n * @see {@link '../behaviour/CrossZone.js'}\n * @abstract\n */\nexport default class Zone {\n  /**\n   * Constructs a Zone instance.\n   *\n   * @param {string} type - The zone type\n   * @return void\n   */\n  constructor(type = ZONE_TYPE_ABSTRACT) {\n    this.type = type;\n    this.vector = new Vector3D(0, 0, 0);\n    this.random = 0;\n    this.crossType = 'dead';\n    this.log = true;\n    this.supportsCrossing = true;\n  }\n\n  getPosition() {\n    return null;\n  }\n\n  crossing(particle) {\n    if (!this.supportsCrossing) {\n      return console.warn(\n        `${this.constructor.name} does not support the crossing method`\n      );\n    }\n\n    switch (this.crossType) {\n      case 'bound':\n        this._bound(particle);\n        break;\n\n      case 'cross':\n        this._cross(particle);\n        break;\n\n      case 'dead':\n        this._dead(particle);\n        break;\n    }\n  }\n\n  /**\n   * Determines if this zone is a BoxZone.\n   *\n   * @return {boolean}\n   */\n  isBoxZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a LineZone.\n   *\n   * @return {boolean}\n   */\n  isLineZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a MeshZone.\n   *\n   * @return {boolean}\n   */\n  isMeshZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a PointZone.\n   *\n   * @return {boolean}\n   */\n  isPointZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a ScreenZone.\n   *\n   * @return {boolean}\n   */\n  isScreenZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a SphereZone.\n   *\n   * @return {boolean}\n   */\n  isSphereZone() {\n    return false;\n  }\n\n  /**\n   * Sets the particle's dead property to true if required.\n   *\n   * @param {Particle} particle\n   * @abstract\n   */\n  _dead(particle) {} //eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  _bound(particle) {} //eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  _cross(particle) {} //eslint-disable-line\n}\n","import MathUtils from '../math/MathUtils';\nimport Util from '../utils/Util';\nimport Zone from './Zone';\nimport { ZONE_TYPE_BOX as type } from './types';\n\nexport default class BoxZone extends Zone {\n  /**\n   * BoxZone is a box zone\n   * @param {Number|Vector3D} x - the position's x value or a Vector3D Object\n   * @param {Number} y - the position's y value\n   * @param {Number} z - the position's z value\n   * @param {Number} w - the Box's width\n   * @param {Number} h - the Box's height\n   * @param {Number} d - the Box's depth\n   * @example\n   * var boxZone = new BoxZone(0,0,0,50,50,50);\n   * or\n   * var boxZone = new BoxZone(new Vector3D(0,0,0), 50, 50, 50);\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, c, d, e, f) {\n    super(type);\n\n    // TODO this reassigning of arguments is pretty dangerous, need to fix it.\n    // eslint-disable-next-line\n    var x, y, z, w, h, d;\n\n    if (Util.isUndefined(b, c, d, e, f)) {\n      x = y = z = 0;\n      w = h = d = a || 100;\n    } else if (Util.isUndefined(d, e, f)) {\n      x = y = z = 0;\n      w = a;\n      h = b;\n      d = c;\n    } else {\n      x = a;\n      y = b;\n      z = c;\n      w = d;\n      h = e;\n      d = f;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.width = w;\n    this.height = h;\n    this.depth = d;\n    // TODO Set this via an argument to the constructor\n    this.friction = 0.85;\n    // TODO Set this via an argument to the constructor\n    this.max = 6;\n  }\n\n  /**\n   * Returns true to indicate this is a BoxZone.\n   *\n   * @return {boolean}\n   */\n  isBoxZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + MathUtils.randomAToB(-0.5, 0.5) * this.width;\n    this.vector.y = this.y + MathUtils.randomAToB(-0.5, 0.5) * this.height;\n    this.vector.z = this.z + MathUtils.randomAToB(-0.5, 0.5) * this.depth;\n\n    return this.vector;\n  }\n\n  _dead(particle) {\n    if (particle.position.x + particle.radius < this.x - this.width / 2)\n      particle.dead = true;\n    else if (particle.position.x - particle.radius > this.x + this.width / 2)\n      particle.dead = true;\n\n    if (particle.position.y + particle.radius < this.y - this.height / 2)\n      particle.dead = true;\n    else if (particle.position.y - particle.radius > this.y + this.height / 2)\n      particle.dead = true;\n\n    if (particle.position.z + particle.radius < this.z - this.depth / 2)\n      particle.dead = true;\n    else if (particle.position.z - particle.radius > this.z + this.depth / 2)\n      particle.dead = true;\n  }\n\n  _bound(particle) {\n    if (particle.position.x - particle.radius < this.x - this.width / 2) {\n      particle.position.x = this.x - this.width / 2 + particle.radius;\n      particle.velocity.x *= -this.friction;\n      this._static(particle, 'x');\n    } else if (particle.position.x + particle.radius > this.x + this.width / 2) {\n      particle.position.x = this.x + this.width / 2 - particle.radius;\n      particle.velocity.x *= -this.friction;\n      this._static(particle, 'x');\n    }\n\n    if (particle.position.y - particle.radius < this.y - this.height / 2) {\n      particle.position.y = this.y - this.height / 2 + particle.radius;\n      particle.velocity.y *= -this.friction;\n      this._static(particle, 'y');\n    } else if (particle.position.y + particle.radius > this.y + this.height / 2) {\n      particle.position.y = this.y + this.height / 2 - particle.radius;\n      particle.velocity.y *= -this.friction;\n      this._static(particle, 'y');\n    }\n\n    if (particle.position.z - particle.radius < this.z - this.depth / 2) {\n      particle.position.z = this.z - this.depth / 2 + particle.radius;\n      particle.velocity.z *= -this.friction;\n      this._static(particle, 'z');\n    } else if (particle.position.z + particle.radius > this.z + this.depth / 2) {\n      particle.position.z = this.z + this.depth / 2 - particle.radius;\n      particle.velocity.z *= -this.friction;\n      this._static(particle, 'z');\n    }\n  }\n\n  _static(particle, axis) {\n    if (particle.velocity[axis] * particle.acceleration[axis] > 0) return;\n    if (\n      Math.abs(particle.velocity[axis]) <\n      Math.abs(particle.acceleration[axis]) * 0.0167 * this.max\n    ) {\n      particle.velocity[axis] = 0;\n      particle.acceleration[axis] = 0;\n    }\n  }\n\n  _cross(particle) {\n    if (\n      particle.position.x + particle.radius < this.x - this.width / 2 &&\n      particle.velocity.x <= 0\n    )\n      particle.position.x = this.x + this.width / 2 + particle.radius;\n    else if (\n      particle.position.x - particle.radius > this.x + this.width / 2 &&\n      particle.velocity.x >= 0\n    )\n      particle.position.x = this.x - this.width / 2 - particle.radius;\n\n    if (\n      particle.position.y + particle.radius < this.y - this.height / 2 &&\n      particle.velocity.y <= 0\n    )\n      particle.position.y = this.y + this.height / 2 + particle.radius;\n    else if (\n      particle.position.y - particle.radius > this.y + this.height / 2 &&\n      particle.velocity.y >= 0\n    )\n      particle.position.y = this.y - this.height / 2 - particle.radius;\n\n    if (\n      particle.position.z + particle.radius < this.z - this.depth / 2 &&\n      particle.velocity.z <= 0\n    )\n      particle.position.z = this.z + this.depth / 2 + particle.radius;\n    else if (\n      particle.position.z - particle.radius > this.z + this.depth / 2 &&\n      particle.velocity.z >= 0\n    )\n      particle.position.z = this.z - this.depth / 2 - particle.radius;\n  }\n}\n","import Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_LINE as type } from './types';\n\nexport default class LineZone extends Zone {\n  /**\n   * LineZone is a 3d line zone\n   * @param {Number|Vector3D} x1 - the line's start point of x value or a Vector3D Object\n   * @param {Number|Vector3D} y1 - the line's start point of y value or a Vector3D Object\n   * @param {Number} z1 - the line's start point of z value\n   * @param {Number} x2 - the line's end point of x value\n   * @param {Number} y2 - the line's end point of y value\n   * @param {Number} z2 - the line's end point of z value\n   * @example\n   * var lineZone = new System.LineZone(0,0,0,100,100,0);\n   * or\n   * var lineZone = new System.LineZone(new System.Vector3D(0,0,0),new System.Vector3D(100,100,0));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(x1, y1, z1, x2, y2, z2) {\n    super(type);\n\n    if (x1 instanceof Vector3D) {\n      this.x1 = x1.x;\n      this.y1 = x1.y;\n      this.z1 = x1.z;\n\n      this.x2 = x2.x;\n      this.y2 = x2.y;\n      this.z2 = x2.z;\n    } else {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.z1 = z1;\n\n      this.x2 = x2;\n      this.y2 = y2;\n      this.z2 = z2;\n    }\n\n    this.supportsCrossing = false;\n  }\n\n  /**\n   * Returns true to indicate this is a LineZone.\n   *\n   * @return {boolean}\n   */\n  isLineZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.random = Math.random();\n    this.vector.x = this.x1 + this.random * (this.x2 - this.x1);\n    this.vector.y = this.y1 + this.random * (this.y2 - this.y1);\n    this.vector.z = this.z1 + this.random * (this.z2 - this.z1);\n\n    return this.vector;\n  }\n}\n","import Zone from './Zone';\nimport { ZONE_TYPE_MESH as type } from './types';\n\n/**\n * Uses a three THREE.Geometry to determine the zone parameters.\n *\n */\nexport default class MeshZone extends Zone {\n  /**\n   * @constructs {MeshZone}\n   *\n   * @param {THREE.Geometry|Mesh} bounds - the geometry or mesh that will determine the zone bounds\n   * @param {number} scale - the zone scale\n   * @param {THREE.Geometry} ThreeGeometry - the three geometry class\n   * @return void\n   */\n  constructor(bounds, scale = 1, ThreeGeometry) {\n    super(type);\n\n    this.geometry = null;\n    this.scale = scale;\n    this.supportsCrossing = false;\n\n    if (bounds.type && bounds.type === 'Geometry') {\n      this.geometry = bounds;\n    }\n\n    if (bounds.geometry) {\n      this.geometry = bounds.geometry;\n    }\n\n    if (!this.geometry) {\n      throw new Error(\n        'MeshZone unable to set geometry from the supplied bounds'\n      );\n    }\n\n    if (this.geometry.isBufferGeometry) {\n      this.geometry = new ThreeGeometry().fromBufferGeometry(this.geometry);\n    }\n  }\n\n  /**\n   * Returns true to indicate this is a MeshZone.\n   *\n   * @return {boolean}\n   */\n  isMeshZone() {\n    return true;\n  }\n\n  getPosition() {\n    const vertices = this.geometry.vertices;\n    const rVector = vertices[(vertices.length * Math.random()) >> 0];\n\n    this.vector.x = rVector.x * this.scale;\n    this.vector.y = rVector.y * this.scale;\n    this.vector.z = rVector.z * this.scale;\n\n    return this.vector;\n  }\n}\n","import Util from '../utils/Util';\nimport Zone from './Zone';\nimport { ZONE_TYPE_POINT as type } from './types';\n\nexport default class PointZone extends Zone {\n  /**\n   * PointZone is a point zone\n   * @param {Number|Vector3D} x - the center's x value or a Vector3D Object\n   * @param {Number} y - the center's y value\n   * @param {Number} z - the center's z value\n   * @example\n   * var pointZone = new System.PointZone(0,30,10);\n   * or\n   * var pointZone = new System.PointZone(new System.Vector3D(0,30,10));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, c) {\n    super(type);\n\n    // TODO see below, these should probably be assigned properly\n    // eslint-disable-next-line\n    var x, y, z;\n\n    if (Util.isUndefined(a, b, c)) {\n      x = y = z = 0;\n    } else {\n      x = a;\n      // eslint-disable-next-line\n      y = b;\n      // eslint-disable-next-line\n      z = c;\n    }\n\n    this.x = x;\n\n    // TODO shouldn't this be set to y?\n    this.y = x;\n\n    // TODO shouldn't this be set to z?\n    this.z = x;\n    this.supportsCrossing = false;\n  }\n\n  /**\n   * Returns true to indicate this is a PointZone.\n   *\n   * @return {boolean}\n   */\n  isPointZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n    this.vector.z = this.z;\n\n    return this.vector;\n  }\n}\n","import THREEUtil from '../utils/THREEUtil';\nimport Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_SCREEN as type } from './types';\n\nexport default class ScreenZone extends Zone {\n  /**\n   * ScreenZone is a 3d line zone\n   * @param {Number|Vector3D} x1 - the line's start point of x value or a Vector3D Object\n   * @param {Number|Vector3D} y1 - the line's start point of y value or a Vector3D Object\n   * @param {Number} z1 - the line's start point of z value\n   * @param {Number} x2 - the line's end point of x value\n   * @param {Number} y2 - the line's end point of y value\n   * @param {Number} z2 - the line's end point of z value\n   * @example\n   * var lineZone = new ScreenZone(0,0,0,100,100,0);\n   * or\n   * var lineZone = new ScreenZone(new Vector3D(0,0,0),new Vector3D(100,100,0));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(camera, renderer, dis, dir) {\n    super(type);\n\n    this.camera = camera;\n    this.renderer = renderer;\n    this.dis = dis || 20;\n    dir = dir || '1234';\n\n    for (var i = 1; i < 5; i++) this['d' + i] = dir.indexOf(i + '') >= 0;\n  }\n\n  /**\n   * Returns true to indicate this is a ScreenZone.\n   *\n   * @return {boolean}\n   */\n  isScreenZone() {\n    return true;\n  }\n\n  _dead(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis && this.d1) {\n      particle.dead = true;\n    } else if (pos.y - particle.radius > canvas.height + this.dis && this.d3) {\n      particle.dead = true;\n    }\n\n    if (pos.x + particle.radius < -this.dis && this.d4) {\n      particle.dead = true;\n    } else if (pos.x - particle.radius > canvas.width + this.dis && this.d2) {\n      particle.dead = true;\n    }\n  }\n\n  _bound(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis) {\n      particle.velocity.y *= -1;\n    } else if (pos.y - particle.radius > canvas.height + this.dis) {\n      particle.velocity.y *= -1;\n    }\n\n    if (pos.x + particle.radius < -this.dis) {\n      particle.velocity.y *= -1;\n    } else if (pos.x - particle.radius > canvas.width + this.dis) {\n      particle.velocity.y *= -1;\n    }\n  }\n}\n\nScreenZone.prototype.getPosition = (function() {\n  var vec2 = new Vector3D(),\n    canvas;\n\n  return function() {\n    canvas = this.renderer.domElement;\n    vec2.x = Math.random() * canvas.width;\n    vec2.y = Math.random() * canvas.height;\n    this.vector.copy(THREEUtil.toSpacePos(vec2, this.camera, canvas));\n\n    return this.vector;\n  };\n})();\n\nScreenZone.prototype._cross = (function() {\n  var vec2 = new Vector3D();\n\n  return function(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis) {\n      vec2.x = pos.x;\n      vec2.y = canvas.height + this.dis + particle.radius;\n      particle.position.y = THREEUtil.toSpacePos(vec2, this.camera, canvas).y;\n    } else if (pos.y - particle.radius > canvas.height + this.dis) {\n      vec2.x = pos.x;\n      vec2.y = -this.dis - particle.radius;\n      particle.position.y = THREEUtil.toSpacePos(vec2, this.camera, canvas).y;\n    }\n\n    if (pos.x + particle.radius < -this.dis) {\n      vec2.y = pos.y;\n      vec2.x = canvas.width + this.dis + particle.radius;\n      particle.position.x = THREEUtil.toSpacePos(vec2, this.camera, canvas).x;\n    } else if (pos.x - particle.radius > canvas.width + this.dis) {\n      vec2.y = pos.y;\n      vec2.x = -this.dis - particle.radius;\n      particle.position.x = THREEUtil.toSpacePos(vec2, this.camera, canvas).x;\n    }\n  };\n})();\n","import { PI } from '../constants';\nimport Util from '../utils/Util';\nimport Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_SPHERE as type } from './types';\n\n/**\n * A spherical zone for particles to be emitted within.\n *\n */\nexport default class SphereZone extends Zone {\n  /**\n   * @constructs {SphereZone}\n   *\n   * @param {number} centerX - the sphere's center x coordinate\n   * @param {number} centerY - the sphere's center y coordinate\n   * @param {number} centerZ - the sphere's center z coordinate\n   * @param {number} radius - the sphere's radius value\n   * @return void\n   */\n  constructor(centerX, centerY, centerZ, radius) {\n    super(type);\n\n    // TODO see below, these should probably be assigned properly\n    // eslint-disable-next-line\n    let x, y, z, r;\n\n    if (Util.isUndefined(centerY, centerZ, radius)) {\n      x = y = z = 0;\n      r = centerX || 100;\n    } else {\n      x = centerX;\n      // eslint-disable-next-line\n      y = centerY;\n      // eslint-disable-next-line\n      z = centerZ;\n      r = radius;\n    }\n\n    this.x = x;\n\n    // TODO shouldn't this be set to y?\n    this.y = x;\n\n    // TODO shouldn't this be set to z?\n    this.z = x;\n    this.radius = r;\n    this.the = this.phi = 0;\n  }\n\n  /**\n   * Returns true to indicate this is a SphereZone.\n   *\n   * @return {boolean}\n   */\n  isSphereZone() {\n    return true;\n  }\n\n  /**\n   * Sets the particle to dead if the particle collides with the sphere.\n   *\n   * @param {object} particle\n   * @return void\n   */\n  _dead(particle) {\n    var d = particle.position.distanceTo(this);\n\n    if (d - particle.radius > this.radius) particle.dead = true;\n  }\n\n  /**\n   * Warns that this zone does not support the _cross method.\n   *\n   * @return void\n   */\n  _cross() {\n    console.warn(`${this.constructor.name} does not support the _cross method`);\n  }\n}\n\nSphereZone.prototype.getPosition = (function() {\n  var tha, phi, r;\n\n  return function() {\n    this.random = Math.random();\n\n    r = this.random * this.radius;\n    tha = PI * Math.random(); //[0-pi]\n    phi = PI * 2 * Math.random(); //[0-2pi]\n\n    this.vector.x = this.x + r * Math.sin(tha) * Math.cos(phi);\n    this.vector.y = this.y + r * Math.sin(phi) * Math.sin(tha);\n    this.vector.z = this.z + r * Math.cos(tha);\n\n    return this.vector;\n  };\n})();\n\nSphereZone.prototype._bound = (function() {\n  var normal = new Vector3D(),\n    v = new Vector3D(),\n    k;\n\n  return function(particle) {\n    var d = particle.position.distanceTo(this);\n\n    if (d + particle.radius >= this.radius) {\n      normal\n        .copy(particle.position)\n        .sub(this)\n        .normalize();\n      v.copy(particle.velocity);\n      k = 2 * v.dot(normal);\n      particle.velocity.sub(normal.scalar(k));\n    }\n  };\n})();\n","import * as Zone from '../zone';\n\nimport Initializer from './Initializer';\nimport { SUPPORTED_JSON_ZONE_TYPES } from '../core/constants';\nimport { INITIALIZER_TYPE_POSITION as type } from './types';\n\n/**\n * Sets the starting position property for initialized particles.\n * This is derived from a zone randomly chosen from those supplied to the constructor.\n *\n */\nexport default class Position extends Initializer {\n  /**\n   * Constructs a Position initializer instance.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  constructor() {\n    super(type);\n\n    this.reset.apply(this, arguments);\n  }\n\n  /**\n   * Resets the initializer properties.\n   * Clears all previously set zones and resets the zones according to args passed.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  reset() {\n    if (!this.zones) {\n      this.zones = [];\n    } else {\n      this.zones.length = 0;\n    }\n\n    /**\n     * @desc The zones to use as bounds for calculating the particle's starting position.\n     * @type {array<Zone>}\n     */\n    this.zones = this.zones.concat(Array.prototype.slice.call(arguments));\n  }\n\n  /**\n   * Adds a zone or zones to this.zones.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  addZone() {\n    this.zones = this.zones.concat(Array.prototype.slice.call(arguments));\n  }\n\n  /**\n   * Creates a Position initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {string} json.zoneType - The type of zone to use for initial position\n   * @return {Position}\n   */\n  static fromJSON(json) {\n    const { zoneType, ...params } = json;\n\n    if (!SUPPORTED_JSON_ZONE_TYPES.includes(zoneType)) {\n      throw new Error(\n        `The zone type ${zoneType} is invalid or not yet supported`\n      );\n    }\n\n    return new Position(new Zone[zoneType](...Object.values(params)));\n  }\n}\n\n/**\n * Sets the particle's initial position.\n *\n * @param {Particle} particle - the particle to initialize the property on\n * @return void\n */\nPosition.prototype.initialize = (function() {\n  let zone;\n\n  return function(target) {\n    zone = this.zones[(Math.random() * this.zones.length) >> 0];\n\n    zone.getPosition();\n\n    target.position.x = zone.vector.x;\n    target.position.y = zone.vector.y;\n    target.position.z = zone.vector.z;\n  };\n})();\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_RADIUS as type } from './types';\n/**\n * Sets the radius property on initialized particles.\n *\n */\nexport default class Radius extends Initializer {\n  /**\n   * Constructs a Radius initializer instance.\n   *\n   * @param {number} width - The width of the particle radius\n   * @param {number} height - The height of the particle radius\n   * @param {boolean} [center=false] - Determines whether to average the radius value\n   * @return void\n   */\n  constructor(width, height, center = false, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The radius span which is used to set the particle radius value.\n     * @type {Span}\n     */\n    this.radius = createSpan(width, height, center);\n  }\n\n  /**\n   * Resets the initializer properties.\n   * Clears all previously set zones and resets the zones according to args passed.\n   *\n   * @param {number} width - The width of the particle radius\n   * @param {number} height - The height of the particle radius\n   * @param {boolean} [center=false] - Determines whether to average the radius value\n   * @return void\n   */\n  reset(width, height, center = false) {\n    this.radius = createSpan(width, height, center);\n  }\n\n  /**\n   * Sets the particle's initial radius.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.transform.oldRadius = particle.radius;\n  }\n\n  /**\n   * Creates a Radius initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.width - The width of the particle radius\n   * @property {number} json.height - The height of the particle radius\n   * @property {number} json.center - The center of the particle radius\n   * @return {Radius}\n   */\n  static fromJSON(json) {\n    const { width, height, center = false, isEnabled = true } = json;\n\n    return new Radius(width, height, center, isEnabled);\n  }\n}\n","import { DEFAULT_RATE_NUM_PAN, DEFAULT_RATE_TIME_PAN } from './constants';\nimport { Span, createSpan } from '../math';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_RATE as type } from './types';\n\n/**\n * Calculates the rate of particle emission.\n *\n * NOTE This doesn't need to be an initializer, it doesn't have an initialize\n * method, it overrides the base init method and it is only relevent to the Emitter class.\n * It would be better to move this to the Emitter module itself as a standalone class.\n *\n */\nexport default class Rate extends Initializer {\n  /**\n   * Constructs a Rate instance.\n   *\n   * @param {number|array|Span} numPan - The number of particles to emit\n   * @param {number|array|Span} timePan - The time between each particle emission\n   * @return void\n   */\n  constructor(numPan = DEFAULT_RATE_NUM_PAN, timePan = DEFAULT_RATE_TIME_PAN) {\n    super(type);\n\n    /**\n     * @desc Sets the number of particles to emit.\n     * @type {Span}\n     */\n    this.numPan = createSpan(numPan);\n\n    /**\n     * @desc Sets the time between each particle emission.\n     * @type {Span}\n     */\n    this.timePan = createSpan(timePan);\n\n    /**\n     * @desc The rate's start time.\n     * @type {number}\n     */\n    this.startTime = 0;\n\n    /**\n     * @desc The rate's next time.\n     * @type {number}\n     */\n    this.nextTime = 0;\n\n    this.init();\n  }\n\n  /**\n   * Sets the startTime and nextTime properties.\n   *\n   * @return void\n   */\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  /**\n   * Gets the number of particles to emit.\n   *\n   * @param {number} time - Current particle engine time\n   * @return {number}\n   */\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.init();\n\n      if (this.numPan.b == 1) {\n        if (this.numPan.getValue('Float') > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue('Int');\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Creates a Rate initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.particlesMin - The minimum number of particles to emit\n   * @property {number} json.particlesMax - The maximum number of particles to emit\n   * @property {number} json.perSecondMin - The minimum per second emit rate\n   * @property {number} json.perSecondMax - The maximum per second emit rate\n   * @return {Rate}\n   */\n  static fromJSON(json) {\n    const { particlesMin, particlesMax, perSecondMin, perSecondMax } = json;\n\n    return new Rate(\n      new Span(particlesMin, particlesMax),\n      new Span(perSecondMin, perSecondMax)\n    );\n  }\n}\n","import {\n  DEFAULT_JSON_MATERIAL_PROPERTIES,\n  DEFAULT_MATERIAL_PROPERTIES,\n  SUPPORTED_MATERIAL_BLENDING_MODES,\n} from './constants';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_TEXTURE as type } from './types';\nimport { withDefaults } from '../utils';\n\n/**\n * Sets the body property to be a THREE.Sprite with a texture map on initialized particles.\n *\n */\nexport default class Texture extends Initializer {\n  /**\n   * Constructs an Texture initializer.\n   *\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} texture - The sprite texture\n   * @param {object|undefined} materialProperties - The sprite material properties\n   * @param {?Texture} loadedTexture - Preloaded THREE.Texture instance\n   */\n  constructor(\n    THREE,\n    loadedTexture,\n    materialProperties = DEFAULT_MATERIAL_PROPERTIES,\n    isEnabled = true\n  ) {\n    super(type, isEnabled);\n\n    const { Sprite, SpriteMaterial } = THREE;\n\n    /**\n     * @desc The material properties for this object's SpriteMaterial\n     * NOTE This is required for testing purposes\n     * @type {object}\n     */\n    this.materialProperties = withDefaults(\n      DEFAULT_MATERIAL_PROPERTIES,\n      materialProperties\n    );\n\n    /**\n     * @desc The texture for the THREE.SpriteMaterial map.\n     * @type {Texture}\n     */\n    this.texture = loadedTexture;\n\n    /**\n     * @desc THREE.SpriteMaterial instance.\n     * @type {SpriteMaterial}\n     */\n    this.material = new SpriteMaterial({\n      ...{ map: loadedTexture },\n      ...this.materialProperties,\n    });\n\n    /**\n     * @desc THREE.Sprite instance.\n     * @type {Sprite}\n     */\n    this.sprite = new Sprite(this.material);\n  }\n\n  /**\n   * Sets the particle body to the sprite.\n   *\n   * @param {Particle} particle - The particle to set the body of\n   * @return void\n   */\n  initialize(particle) {\n    particle.body = this.sprite;\n  }\n\n  /**\n   * Creates a Texture initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {Texture} json.loadedTexture - The loaded sprite texture\n   * @param {object} json.materialProperties - The sprite material properties\n   * @return {BodySprite}\n   */\n  static fromJSON(json, THREE) {\n    const {\n      loadedTexture,\n      materialProperties = DEFAULT_JSON_MATERIAL_PROPERTIES,\n      isEnabled = true,\n    } = json;\n\n    const ensureMappedBlendingMode = properties => {\n      const { blending } = properties;\n\n      return {\n        ...properties,\n        blending: blending\n          ? SUPPORTED_MATERIAL_BLENDING_MODES[blending]\n          : SUPPORTED_MATERIAL_BLENDING_MODES[\n            DEFAULT_JSON_MATERIAL_PROPERTIES.blending\n          ],\n      };\n    };\n\n    return new Texture(\n      THREE,\n      loadedTexture,\n      withDefaults(\n        DEFAULT_JSON_MATERIAL_PROPERTIES,\n        ensureMappedBlendingMode(materialProperties)\n      ),\n      isEnabled\n    );\n  }\n}\n","import { MEASURE, PI } from '../../constants';\nimport { MathUtils, Vector3D } from '../../math';\n\nimport Initializer from '../Initializer';\n\n/**\n * Abstract class for Velocity initializers.\n *\n */\nexport default class Velocity extends Initializer {\n  /**\n   * Constructs a Velocity intitializer instance.\n   *\n   * @return void\n   */\n  constructor(type, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Directional vector\n     * @type {Vector3D}\n     */\n    this.dirVec = new Vector3D(0, 0, 0);\n  }\n\n  normalize(vr) {\n    return vr * MEASURE;\n  }\n}\n\n/**\n * Sets the particle's initial velocity.\n *\n * @singleton\n * @param {Particle} particle - the particle to initialize the property on\n * @return void\n */\nVelocity.prototype.initialize = (function() {\n  var tha;\n  var normal = new Vector3D(0, 0, 1);\n  var v = new Vector3D(0, 0, 0);\n\n  return function initialize(particle) {\n    tha = this.tha * Math.random();\n    this._useV && this.dirVec.copy(this.dir).scalar(this.radiusPan.getValue());\n\n    MathUtils.getNormal(this.dirVec, normal);\n    v.copy(this.dirVec).applyAxisAngle(normal, tha);\n    v.applyAxisAngle(this.dirVec.normalize(), Math.random() * PI * 2);\n\n    particle.velocity.copy(v);\n\n    return this;\n  };\n})();\n","import { DR } from '../../constants';\nimport { Polar3D } from '../../math';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_POLAR_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class PolarVelocity extends Velocity {\n  /**\n   * Constructs a PolarVelocity initializer.\n   *\n   * @param {Polar3D} polar3d - The polar vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(polar3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Directional vector\n     * @type {Vector3D}\n     */\n    this.dirVec = polar3d.toVector3D();\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = false;\n  }\n\n  /**\n   * Creates a PolarVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.polarRadius - The Polar3D radius\n   * @param {number} json.polarTheta - The Polar3D theta\n   * @param {number} json.polarPhi - The Polar3D phi\n   * @param {number} json.velocityTheta - The velocity theta\n   * @return {PolarVelocity}\n   */\n  static fromJSON(json) {\n    const {\n      polarRadius,\n      polarTheta,\n      polarPhi,\n      velocityTheta,\n      isEnabled = true,\n    } = json;\n\n    return new PolarVelocity(\n      new Polar3D(polarRadius, polarTheta, polarPhi),\n      velocityTheta,\n      isEnabled\n    );\n  }\n}\n","import { Vector3D, createSpan } from '../../math';\n\nimport { DR } from '../../constants';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_RADIAL_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class RadialVelocity extends Velocity {\n  /**\n   * Constructs a RadialVelocity initializer.\n   *\n   * @param {number|Span} radius - The velocity radius\n   * @param {Vector3D} vector3d - The directional vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(radius, vector3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Velocity radius span.\n     * @type {Span}\n     */\n    this.radiusPan = createSpan(radius);\n\n    /**\n     * @desc Direction vector.\n     * @type {Vector3D}\n     */\n    this.dir = vector3d.clone().normalize();\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = true;\n  }\n\n  /**\n   * Creates a RadialVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.radius - The velocity radius\n   * @param {number} json.x - The velocity x axis direction\n   * @param {number} json.y - The velocity y axis direction\n   * @param {number} json.z - The velocity z axis direction\n   * @param {number} json.theta - The velocity theta\n   * @return {RadialVelocity}\n   */\n  static fromJSON(json) {\n    const { radius, x, y, z, theta, isEnabled = true } = json;\n\n    return new RadialVelocity(radius, new Vector3D(x, y, z), theta, isEnabled);\n  }\n}\n","import { Vector3D, createSpan } from '../../math';\n\nimport { DR } from '../../constants';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_VECTOR_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class VectorVelocity extends Velocity {\n  /**\n   * Constructs a VectorVelocity initializer.\n   *\n   * @param {Vector3D} vector3d - The directional vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(vector3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Velocity radius span.\n     * @type {Span}\n     */\n    this.radiusPan = createSpan(1);\n\n    /**\n     * @desc Direction vector.\n     * @type {Vector3D}\n     */\n    this.dir = vector3d.clone();\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = true;\n  }\n\n  /**\n   * Creates a VectorVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.x - The velocity x axis direction\n   * @param {number} json.y - The velocity y axis direction\n   * @param {number} json.z - The velocity z axis direction\n   * @param {number} json.theta - The velocity theta\n   * @return {VectorVelocity}\n   */\n  static fromJSON(json) {\n    const { x, y, z, theta, isEnabled = true } = json;\n\n    return new VectorVelocity(new Vector3D(x, y, z), theta, isEnabled);\n  }\n}\n","import { Rate } from '../initializer';\n\nexport const DEFAULT_DAMPING = 0.006;\nexport const DEFAULT_BIND_EMITTER = true;\nexport const DEFAULT_EMITTER_RATE = new Rate(1, 0.1);\nexport const DEFAULT_BIND_EMITTER_EVENT = false;\nexport const DEFAULT_EMITTER_INDEX = undefined;\n","import {\n  DEFAULT_BIND_EMITTER,\n  DEFAULT_BIND_EMITTER_EVENT,\n  DEFAULT_DAMPING,\n  DEFAULT_EMITTER_INDEX,\n  DEFAULT_EMITTER_RATE,\n} from './constants';\nimport EventDispatcher, {\n  EMITTER_DEAD,\n  PARTICLE_CREATED,\n  PARTICLE_DEAD,\n  PARTICLE_UPDATE,\n} from '../events';\nimport { INTEGRATION_TYPE_EULER, integrate } from '../math';\nimport { Util, uid } from '../utils';\n\nimport { InitializerUtil } from '../initializer';\nimport Particle from '../core/Particle';\nimport isNumber from 'lodash/isNumber';\nimport { EMITTER_TYPE_EMITTER as type } from './types';\n\n/**\n * Emitters are the System engine's particle factories. They cause particles to\n * be rendered by emitting them, and store all particle initializers and behaviours.\n *\n */\nexport default class Emitter extends Particle {\n  /**\n   * Constructs an Emitter instance.\n   *\n   * @param {object} properties - The properties to instantiate the emitter with\n   * @return void\n   */\n  constructor(properties) {\n    super(properties);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc The particles emitted by this emitter.\n     * @type {array}\n     */\n    this.particles = [];\n\n    /**\n     * @desc The initializers for particles emitted by this emitter.\n     * @type {array}\n     */\n    this.initializers = [];\n\n    /**\n     * @desc The behaviours for particles emitted by this emitter.\n     * @type {array}\n     */\n    this.behaviours = [];\n\n    /**\n     * @desc The behaviours for the emitter.\n     * @type {array}\n     */\n    this.emitterBehaviours = [];\n\n    /**\n     * @desc The current emit iteration.\n     * @type {integer}\n     */\n    this.currentEmitTime = 0;\n\n    /**\n     * @desc The total number of times the emitter should emit particles.\n     * @type {integer}\n     */\n    this.totalEmitTimes = -1;\n\n    /**\n     * @desc The friction coefficient for all particle to emit by.\n     * @type {number}\n     */\n    this.damping = DEFAULT_DAMPING;\n\n    /**\n     * @desc Ensures that particles emitted by this emitter are positioned\n     * according to the emitter's properties.\n     * @type {boolean}\n     */\n    this.bindEmitter = DEFAULT_BIND_EMITTER;\n\n    /**\n     * @desc Determines if the emitter will dispatch internal events. Defaults\n     * to false\n     * @type {boolean}\n     */\n    this.bindEmitterEvent = DEFAULT_BIND_EMITTER_EVENT;\n\n    /**\n     * @desc The number of particles to emit per second (a [particle]/b [s])\n     * @type {Rate}\n     */\n    this.rate = DEFAULT_EMITTER_RATE;\n\n    /**\n     * @desc Determines if the emitter is emitting particles or not.\n     * @type {boolean}\n     */\n    this.isEmitting = false;\n\n    /**\n     * @desc The emitter's id.\n     * @type {string}\n     */\n    this.id = `emitter-${uid()}`;\n    this.cID = 0;\n    this.name = 'Emitter';\n\n    /**\n     * @desc The index of the emitter as it is added to the system.\n     * @type {number|undefined}\n     */\n    this.index = DEFAULT_EMITTER_INDEX;\n\n    /**\n     * @desc The emitter's internal event dispatcher.\n     * @type {EventDispatcher}\n     */\n    this.eventDispatcher = new EventDispatcher();\n  }\n\n  /**\n   * Proxy method for the internal event dispatcher's dispatchEvent method.\n   *\n   * @param {string} event - The event to dispatch\n   * @param {object<Particle>} [target=this] - The event target\n   */\n  dispatch(event, target = this) {\n    this.eventDispatcher.dispatchEvent(event, target);\n  }\n\n  /**\n   * Sets the emitter rate.\n   *\n   * @param {Rate} rate - a rate initializer object\n   * @return {Emitter}\n   */\n  setRate(rate) {\n    this.rate = rate;\n\n    return this;\n  }\n\n  /**\n   * Sets the position of the emitter.\n   *\n   * @param {object} newPosition - an object the new x, y and z props\n   * @return {Emitter}\n   */\n  setPosition(newPosition = {}) {\n    const { position } = this;\n    const { x = position.x, y = position.y, z = position.z } = newPosition;\n\n    this.position.set(x, y, z);\n\n    return this;\n  }\n\n  /**\n   * Sets the rotation of the emitter.\n   *\n   * @param {object} newRotation - an object the new x, y and z props\n   * @return {Emitter}\n   */\n  setRotation(newRotation = {}) {\n    const { rotation } = this;\n    const { x = rotation.x, y = rotation.y, z = rotation.z } = newRotation;\n\n    this.rotation.set(x, y, z);\n\n    return this;\n  }\n\n  /**\n   * Sets the total number of times the emitter should emit particles as well as\n   * the emitter's life. Also intializes the emitter rate.\n   * This enables the emitter to emit particles.\n   *\n   * @param {number} [totalEmitTimes=Infinity] - the total number of times to emit particles\n   * @param {number} [life=Infinity] - the life of this emitter in milliseconds\n   * @return {Emitter}\n   */\n  emit(totalEmitTimes = Infinity, life = Infinity) {\n    this.currentEmitTime = 0;\n    this.totalEmitTimes = isNumber(totalEmitTimes) ? totalEmitTimes : Infinity;\n\n    if (totalEmitTimes === 1) {\n      this.life = totalEmitTimes;\n    } else {\n      this.life = isNumber(life) ? life : Infinity;\n    }\n\n    this.rate.init();\n    this.isEmitting = true;\n\n    return this;\n  }\n\n  /**\n   * Experimental emit method that is designed to be called from the System.emit method.\n   *\n   * @return {Emitter}\n   */\n  experimental_emit() {\n    const { isEmitting, totalEmitTimes, life } = this;\n\n    if (!isEmitting) {\n      this.currentEmitTime = 0;\n\n      if (!totalEmitTimes) {\n        this.setTotalEmitTimes(Infinity);\n      }\n\n      if (!life) {\n        this.setLife(Infinity);\n      }\n\n      this.rate.init();\n      this.isEmitting = true;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the total emit times for the emitter.\n   *\n   * @param {number} [totalEmitTimes=Infinity] - the total number of times to emit particles\n   * @return {Emitter}\n   */\n  setTotalEmitTimes(totalEmitTimes = Infinity) {\n    this.totalEmitTimes = isNumber(totalEmitTimes) ? totalEmitTimes : Infinity;\n\n    return this;\n  }\n\n  /**\n   * Sets the life of the emitter.\n   *\n   * @param {number} [life=Infinity] - the life of this emitter in milliseconds\n   * @return {Emitter}\n   */\n  setLife(life = Infinity) {\n    if (this.totalEmitTimes === 1) {\n      this.life = this.totalEmitTimes;\n    } else {\n      this.life = isNumber(life) ? life : Infinity;\n    }\n\n    return this;\n  }\n\n  /**\n   * Stops the emitter from emitting particles.\n   *\n   * @return void\n   */\n  stopEmit() {\n    this.totalEmitTimes = -1;\n    this.currentEmitTime = 0;\n    this.isEmitting = false;\n  }\n\n  /**\n   * Kills all of the emitter's particles.\n   *\n   * @return void\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n\n    while (i--) {\n      this.particles[i].dead = true;\n    }\n  }\n\n  /**\n   * Adds a particle initializer to the emitter.\n   * Each initializer is run on each particle when they are created.\n   *\n   * @param {Initializer} initializer - The initializer to add\n   * @return {Emitter}\n   */\n  addInitializer(initializer) {\n    this.initializers.push(initializer);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple particle initializers to the emitter.\n   *\n   * @param {array<Initializer>} initializers - an array of particle initializers\n   * @return {Emitter}\n   */\n  addInitializers(initializers) {\n    let i = initializers.length;\n\n    while (i--) {\n      this.addInitializer(initializers[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's particle initializers.\n   *\n   * @param {array<Initializer>} initializers - an array of particle initializers\n   * @return {Emitter}\n   */\n  setInitializers(initializers) {\n    this.initializers = initializers;\n\n    return this;\n  }\n\n  /**\n   * Removes an initializer from the emitter's initializers array.\n   *\n   * @param {Initializer} initializer - The initializer to remove\n   * @return {Emitter}\n   */\n  removeInitializer(initializer) {\n    const index = this.initializers.indexOf(initializer);\n\n    if (index > -1) {\n      this.initializers.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all initializers.\n   *\n   * @return {Emitter}\n   */\n  removeAllInitializers() {\n    Util.destroyArray(this.initializers);\n\n    return this;\n  }\n\n  /**\n   * Adds a behaviour to the emitter. All emitter behaviours are added to each particle when\n   * they are emitted.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the emitter\n   * @return {Emitter}\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple behaviours to the emitter.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  addBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addBehaviour(behaviours[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's behaviours.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  setBehaviours(behaviours) {\n    this.behaviours = behaviours;\n\n    return this;\n  }\n\n  /**\n   * Removes the behaviour from the emitter's behaviours array.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove\n   * @return {Emitter}\n   */\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.behaviours.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all behaviours from the emitter.\n   *\n   * @return {Emitter}\n   */\n  removeAllBehaviours() {\n    Util.destroyArray(this.behaviours);\n\n    return this;\n  }\n\n  /**\n   * Adds an emitter behaviour to the emitter.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the emitter\n   * @return {Emitter}\n   */\n  addEmitterBehaviour(behaviour) {\n    this.emitterBehaviours.push(behaviour);\n\n    behaviour.initialize(this);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple behaviours to the emitter.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  addEmitterBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addEmitterBehaviour(behaviours[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's behaviours.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  setEmitterBehaviours(behaviours) {\n    const length = behaviours.length;\n\n    this.emitterBehaviours = behaviours;\n\n    for (let i = 0; i < length; i++) {\n      this.emitterBehaviours[i].initialize(this);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes the behaviour from the emitter's behaviours array.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove\n   * @return {Emitter}\n   */\n  removeEmitterBehaviour(behaviour) {\n    const index = this.emitterBehaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.emitterBehaviours.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all behaviours from the emitter.\n   *\n   * @return {Emitter}\n   */\n  removeAllEmitterBehaviours() {\n    Util.destroyArray(this.emitterBehaviours);\n\n    return this;\n  }\n\n  /**\n   * Adds the event listener for the EMITTER_DEAD event.\n   *\n   * @param {onEmitterDead} - The function to call when the EMITTER_DEAD is dispatched.\n   * @return {Emitter}\n   */\n  addOnEmitterDeadEventListener(onEmitterDead) {\n    this.eventDispatcher.addEventListener(`${this.id}_${EMITTER_DEAD}`, () =>\n      onEmitterDead()\n    );\n\n    return this;\n  }\n\n  /**\n   * Creates a particle by retreiving one from the pool and setting it up with\n   * the supplied initializer and behaviour.\n   *\n   * @return {Emitter}\n   */\n  createParticle() {\n    const particle = this.parent.pool.get(Particle);\n    const index = this.particles.length;\n\n    this.setupParticle(particle, index);\n    this.parent && this.parent.dispatch(PARTICLE_CREATED, particle);\n    this.bindEmitterEvent && this.dispatch(PARTICLE_CREATED, particle);\n\n    return particle;\n  }\n\n  /**\n   * Sets up a particle by running all initializers on it and setting its behaviours.\n   * Also adds the particle to this.particles.\n   *\n   * @param {Particle} particle - The particle to setup\n   * @return void\n   */\n  setupParticle(particle, index) {\n    const { initializers, behaviours } = this;\n\n    InitializerUtil.initialize(this, particle, initializers);\n\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n    particle.index = index;\n\n    this.particles.push(particle);\n  }\n\n  /**\n   * Updates the emitter according to the time passed by calling the generate\n   * and integrate methods. The generate method creates particles, the integrate\n   * method updates existing particles.\n   *\n   * If the emitter age is greater than time, the emitter is killed.\n   *\n   * This method also indexes/deindexes particles.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  update(time) {\n    if (!this.isEmitting) {\n      return;\n    }\n\n    this.age += time;\n\n    if (this.dead || this.age >= this.life) {\n      this.destroy();\n    }\n\n    this.generate(time);\n    this.integrate(time);\n\n    let i = this.particles.length;\n\n    while (i--) {\n      const particle = this.particles[i];\n\n      if (particle.dead) {\n        this.parent && this.parent.dispatch(PARTICLE_DEAD, particle);\n        this.bindEmitterEvent && this.dispatch(PARTICLE_DEAD, particle);\n        this.parent.pool.expire(particle.reset());\n        this.particles.splice(i, 1);\n      }\n    }\n\n    this.updateEmitterBehaviours(time);\n  }\n\n  /**\n   * Updates the emitter's emitter behaviours.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  updateEmitterBehaviours(time) {\n    if (this.sleep) {\n      return;\n    }\n\n    const length = this.emitterBehaviours.length;\n\n    for (let i = 0; i < length; i++) {\n      this.emitterBehaviours[i].applyBehaviour(this, time, i);\n    }\n  }\n\n  /**\n   * Runs the integration algorithm on the emitter and all particles.\n   * Updates the particles with the timstamp passed.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  integrate(time) {\n    const integrationType = this.parent\n      ? this.parent.integrationType\n      : INTEGRATION_TYPE_EULER;\n    const damping = 1 - this.damping;\n\n    integrate(this, time, damping, integrationType);\n\n    let index = this.particles.length;\n\n    while (index--) {\n      const particle = this.particles[index];\n\n      particle.update(time, index);\n      integrate(particle, time, damping, integrationType);\n\n      this.parent && this.parent.dispatch(PARTICLE_UPDATE, particle);\n      this.bindEmitterEvent && this.dispatch(PARTICLE_UPDATE, particle);\n    }\n  }\n\n  /**\n   * Generates new particles.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  generate(time) {\n    if (this.totalEmitTimes === 1) {\n      let i = this.rate.getValue(99999);\n\n      if (i > 0) {\n        this.cID = i;\n      }\n\n      while (i--) {\n        this.createParticle();\n      }\n\n      this.totalEmitTimes = 0;\n\n      return;\n    }\n\n    this.currentEmitTime += time;\n\n    if (this.currentEmitTime < this.totalEmitTimes) {\n      let i = this.rate.getValue(time);\n\n      if (i > 0) {\n        this.cID = i;\n      }\n\n      while (i--) {\n        this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * Kills the emitter.\n   *\n   * @return void\n   */\n  destroy() {\n    this.dead = true;\n    this.energy = 0;\n    this.totalEmitTimes = -1;\n\n    if (this.particles.length == 0) {\n      this.isEmitting = false;\n      this.removeAllInitializers();\n      this.removeAllBehaviours();\n      this.dispatch(`${this.id}_${EMITTER_DEAD}`);\n\n      this.parent && this.parent.removeEmitter(this);\n    }\n  }\n}\n","export const EMITTER_TYPE_EMITTER = 'Emitter';\nexport const EMITTER_TYPE_FOLLOW = 'FollowEmitter';\n","import { easeLinear } from '../ease';\n\nexport const DEFAULT_LIFE = Infinity;\nexport const DEFAULT_ATTRACITON_RADIUS = 1000;\nexport const DEFAULT_ATTRACTION_FORCE_SCALAR = 100;\nexport const DEFAULT_BEHAVIOUR_EASING = easeLinear;\nexport const DEFAULT_BEHAVIOUR_EASING_TYPE = 'easeLinear';\nexport const DEFAULT_RANDOM_DRIFT_DELAY = 0.03;\nexport const PARTICLE_ALPHA_THRESHOLD = 0.002;\nexport const PARTICLE_LENGTH_SQ_THRESHOLD = 0.000004;\nexport const DEFAULT_CROSS_TYPE = 'dead';\n","import { DEFAULT_BEHAVIOUR_EASING, DEFAULT_LIFE } from './constants';\n\nimport { BEHAVIOUR_TYPE_ABSTRACT } from './types';\nimport { MEASURE } from '../constants';\nimport isNumber from 'lodash/isNumber';\nimport { uid } from '../utils';\n\n/**\n * The base behaviour class.\n * Behaviours manage a particle's behaviour after they have been emitted.\n *\n */\nexport default class Behaviour {\n  /**\n   * Constructs a Behaviour instance.\n   *\n   * @param {number} [life=Infinity] - The life of the behaviour\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   * @param {string} [type=BEHAVIOUR_TYPE_ABSTRACT] - The behaviour type\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(\n    life = Infinity,\n    easing = DEFAULT_BEHAVIOUR_EASING,\n    type = BEHAVIOUR_TYPE_ABSTRACT,\n    isEnabled = true\n  ) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if the behaviour will be applied or not\n     * @type {boolean}\n     */\n    this.isEnabled = isEnabled;\n\n    /**\n     * @desc The behaviour's id\n     * @type {string} id\n     */\n    this.id = `behaviour-${uid()}`;\n\n    /**\n     * @desc The life of the behaviour\n     * @type {number}\n     */\n    this.life = life;\n\n    /**\n     * @desc The behaviour's decaying trend\n     * @type {function}\n     */\n    this.easing = easing;\n\n    /**\n     * @desc The age of the behaviour\n     * @type {number}\n     */\n    this.age = 0;\n\n    /**\n     * @desc The energy of the behaviour\n     * @type {number}\n     */\n    this.energy = 1;\n\n    /**\n     * Determines if the behaviour is dead or not\n     * @type {boolean}\n     */\n    this.dead = false;\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @param {number} [life=DEFAULT_LIFE] - The life of the behaviour\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   */\n  reset(life = DEFAULT_LIFE, easing = DEFAULT_BEHAVIOUR_EASING) {\n    this.life = life;\n    this.easing = easing || DEFAULT_BEHAVIOUR_EASING;\n  }\n\n  /**\n   * Ensures that life is infinity if an invalid value is supplied.\n   *\n   * @return void\n   */\n  set life(life) {\n    this._life = isNumber(life) ? life : DEFAULT_LIFE;\n  }\n\n  /**\n   * Gets the behaviour's life.\n   *\n   * @return {Number}\n   */\n  get life() {\n    return this._life;\n  }\n\n  /**\n   * Normalize a force by 1:100;\n   *\n   * @param {Vector3D} force - The force to normalize.\n   * @return {Vector3D}\n   */\n  normalizeForce(force) {\n    return force.scalar(MEASURE);\n  }\n\n  /**\n   * Normalize a value by 1:100;\n   *\n   * @param {number} value - The value to normalize\n   * @return {number}\n   */\n  normalizeValue(value) {\n    return value * MEASURE;\n  }\n\n  /**\n   * Set the behaviour's initial properties on the particle.\n   *\n   * @param {Particle} particle\n   * @abstract\n   */\n  initialize(particle) {} // eslint-disable-line\n\n  /**\n   * Apply behaviour to the target as a factor of time.\n   * Internally calls the mutate method to change properties on the target\n   * Will not do so if the behaviour is disabled\n   *\n   * @abstract\n   * @param {Particle|Emitter} target - The particle or emitter to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @param {integer} index - the target index\n   * @return mixed\n   */\n  applyBehaviour(target, time, index) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this.mutate(target, time, index);\n  }\n\n  /**\n   * Change the target's properties according to specific behaviour logic.\n   *\n   * @abstract\n   * @param {Particle|Emitter} target - The particle or emitter to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @return mixed\n   */\n  mutate(target, time, index) {} // eslint-disable-line\n\n  /**\n   * Compares the age of the behaviour vs integration time and determines\n   * if the behaviour should be set to dead or not.\n   * Sets the behaviour energy as a factor of particle age and life.\n   *\n   * @param {Particle} particle - The particle to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @return void\n   */\n  energize(particle, time) {\n    if (this.dead) {\n      return;\n    }\n\n    this.age += time;\n\n    if (this.age >= this.life) {\n      this.energy = 0;\n      this.dead = true;\n\n      return;\n    }\n\n    const scale = this.easing(particle.age / particle.life);\n\n    this.energy = Math.max(1 - scale, 0);\n  }\n\n  /**\n   * Destory this behaviour.\n   *\n   * @abstract\n   */\n  destroy() {}\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @abstract\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Behaviour}\n   */\n  fromJSON(json) {} // eslint-disable-line\n}\n","import { MathUtils, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { PARTICLE_ALPHA_THRESHOLD } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ALPHA as type } from './types';\n\n/**\n * Behaviour that applies an alpha transition effect to particles.\n *\n */\nexport default class Alpha extends Behaviour {\n  /**\n   * Constructs an Alpha behaviour instance.\n   *\n   * @param {number} alphaA - The starting alpha value\n   * @param {?number} alphaB - The ending alpha value\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(alphaA = 1, alphaB = null, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    /**\n     * @desc The starting alpha value\n     * @type {number|Span}\n     */\n    this.alphaA = alphaA;\n\n    /**\n     * @desc The ending alpha value\n     * @type {number|Span}\n     */\n    this.alphaB = alphaB;\n\n    this.reset(alphaA, alphaB);\n  }\n\n  /**\n   * Gets the _same property which determines if the alpha are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the alpha are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} alphaA - the starting alpha value\n   * @param {?number} alphaB - the ending alpha value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(alphaA = 1, alphaB = null, life, easing) {\n    this.same = alphaB === null || alphaB === undefined ? true : false;\n    this.alphaA = createSpan(alphaA);\n    this.alphaB = createSpan(alphaB);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    particle.useAlpha = true;\n    particle.transform.alphaA = this.alphaA.getValue();\n\n    particle.transform.alphaB = this.same\n      ? particle.transform.alphaA\n      : this.alphaB.getValue();\n  }\n\n  /**\n   * Mutates the target's alpha/opacity property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.alpha = MathUtils.lerp(\n      particle.transform.alphaA,\n      particle.transform.alphaB,\n      this.energy\n    );\n\n    if (particle.alpha < PARTICLE_ALPHA_THRESHOLD) {\n      particle.alpha = 0;\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.alphaA - The starting alpha value\n   * @property {number} json.alphaB - The ending alpha value\n   * @property {number} json.life - The life of the behaviour\n   * @property {string} json.easing - The easing equation to use for transforms\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { alphaA, alphaB, life, easing, isEnabled = true } = json;\n\n    return new Alpha(alphaA, alphaB, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import {\n  DEFAULT_ATTRACITON_RADIUS,\n  DEFAULT_ATTRACTION_FORCE_SCALAR,\n  DEFAULT_BEHAVIOUR_EASING,\n  DEFAULT_LIFE,\n  PARTICLE_LENGTH_SQ_THRESHOLD,\n} from './constants';\n\nimport Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ATTRACTION as type } from './types';\n\n/**\n * Behaviour that causes particles to be attracted to a target position.\n *\n */\nexport default class Attraction extends Behaviour {\n  /**\n   * Constructs an Attraction behaviour instance.\n   *\n   * @param {Vector3D} targetPosition - The position the particles will be attracted to\n   * @param {number} force - The attraction force scalar multiplier\n   * @param {number} radius - The attraction radius\n   * @param {number} [life=DEFAULT_LIFE] - The life of the particle\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(\n    targetPosition = new Vector3D(),\n    force = DEFAULT_ATTRACTION_FORCE_SCALAR,\n    radius = DEFAULT_ATTRACITON_RADIUS,\n    life = DEFAULT_LIFE,\n    easing = DEFAULT_BEHAVIOUR_EASING,\n    isEnabled = true\n  ) {\n    super(life, easing, type, isEnabled);\n\n    /**\n     * @desc The position the particles will be attracted to\n     * @type {Vector3D}\n     */\n    this.targetPosition = targetPosition;\n\n    /**\n     * @desc The attraction radius\n     * @type {number} - the attraction radius\n     */\n    this.radius = radius;\n\n    /**\n     * @desc The attraction force scalar multiplier\n     * @type {number}\n     */\n    this.force = this.normalizeValue(force);\n\n    /**\n     * @desc The radius of the attraction squared\n     * @type {number}\n     */\n    this.radiusSq = this.radius * this.radius;\n\n    /**\n     * @desc The attraction force in 3D space\n     * @type {Vector3D}\n     */\n    this.attractionForce = new Vector3D();\n\n    /**\n     * @desc The linear attraction force\n     * @type {number}\n     */\n    this.lengthSq = 0;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Vector3D} targetPosition - the position the particles will be attracted to\n   * @param {number} force - the attraction force multiplier\n   * @param {number} radius - the attraction radius\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(\n    targetPosition = new Vector3D(),\n    force = DEFAULT_ATTRACTION_FORCE_SCALAR,\n    radius = DEFAULT_ATTRACITON_RADIUS,\n    life,\n    easing\n  ) {\n    this.targetPosition = targetPosition;\n    this.radius = radius;\n    this.force = this.normalizeValue(force);\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector3D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Mutates particle acceleration.\n   *\n   * @param {Particle} particle - the particle to apply the behaviour to\n   * @param {number} time - particle engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.position);\n\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (\n      this.lengthSq > PARTICLE_LENGTH_SQ_THRESHOLD &&\n      this.lengthSq < this.radiusSq\n    ) {\n      this.attractionForce.normalize();\n      this.attractionForce.scalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.scalar(this.force);\n\n      particle.acceleration.add(this.attractionForce);\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.x - The target position x value\n   * @property {number} json.y - The target position y value\n   * @property {number} json.z - The target position z value\n   * @property {number} json.force - The attraction force scalar multiplier\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { x, y, z, force, radius, life, easing, isEnabled = true } = json;\n\n    return new Attraction(\n      new Vector3D(x, y, z),\n      force,\n      radius,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { BEHAVIOUR_TYPE_COLLISION as type } from './types';\n\n/**\n * Behaviour that causes particles to move away from other particles they collide with.\n */\nexport default class Collision extends Behaviour {\n  /**\n   * Constructs a Collision behaviour instance.\n   *\n   * @param {Emitter} emitter - The emitter containing the particles to detect collisions against\n   * @param {boolean} useMass - Determiens whether to use mass or not\n   * @param {function} onCollide - Function to call when particles collide\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(emitter, useMass, onCollide, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(emitter, useMass, onCollide);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Emitter} emitter - The emitter containing the particles to detect collisions against\n   * @param {boolean} useMass - Determiens whether to use mass or not\n   * @param {function} onCollide - Function to call when particles collide\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(emitter, useMass, onCollide, life, easing) {\n    this.emitter = emitter;\n    this.useMass = useMass;\n    this.onCollide = onCollide;\n    this.particles = [];\n    this.delta = new Vector3D();\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Detects collisions with other particles and calls the\n   * onCollide function on colliding particles.\n   *\n   * @param {Particle} particle - the particle to apply the behaviour to\n   * @param {number} time - particle engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    const particles = this.emitter\n      ? this.emitter.particles.slice(index)\n      : this.particles.slice(index);\n\n    let otherParticle, lengthSq, overlap, distance, averageMass1, averageMass2;\n\n    let i = particles.length;\n\n    while (i--) {\n      otherParticle = particles[i];\n\n      if (otherParticle == particle) {\n        continue;\n      }\n\n      this.delta.copy(otherParticle.position).sub(particle.position);\n\n      lengthSq = this.delta.lengthSq();\n      distance = particle.radius + otherParticle.radius;\n\n      if (lengthSq <= distance * distance) {\n        overlap = distance - Math.sqrt(lengthSq);\n        overlap += 0.5;\n\n        averageMass1 = this._getAverageMass(particle, otherParticle);\n        averageMass2 = this._getAverageMass(otherParticle, particle);\n\n        particle.position.add(\n          this.delta\n            .clone()\n            .normalize()\n            .scalar(overlap * -averageMass1)\n        );\n\n        otherParticle.position.add(\n          this.delta.normalize().scalar(overlap * averageMass2)\n        );\n\n        this.onCollide && this.onCollide(particle, otherParticle);\n      }\n    }\n  }\n\n  /**\n   * Gets the average mass of both particles.\n   *\n   * @param {Particle} particleA - The first particle\n   * @param {Particle} particleB - The second particle\n   * @return {number}\n   */\n  _getAverageMass(particleA, particleB) {\n    return this.useMass\n      ? particleB.mass / (particleA.mass + particleB.mass)\n      : 0.5;\n  }\n\n  // TODO\n  fromJSON(json) {} // eslint-disable-line\n}\n","import { MathUtils, createColorSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { ColorUtil } from '../utils';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_COLOR as type } from './types';\n\n/**\n * A behaviour which mutates the color of a particle over time.\n *\n */\nexport default class Color extends Behaviour {\n  /**\n   * Constructs a Color behaviour instance.\n   *\n   * @param {number|string} colorA - the starting color\n   * @param {number|string} colorB - the ending color\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(colorA, colorB, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(colorA, colorB);\n  }\n\n  /**\n   * Gets the _same property which determines if the alpha are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the alpha are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  reset(colorA, colorB, life, easing) {\n    this.same = colorB === null || colorB === undefined ? true : false;\n\n    this.colorA = createColorSpan(colorA);\n    this.colorB = createColorSpan(colorB);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.transform.colorA = ColorUtil.getRGB(this.colorA.getValue());\n\n    particle.useColor = true;\n    particle.transform.colorB = this.same\n      ? particle.transform.colorA\n      : ColorUtil.getRGB(this.colorB.getValue());\n  }\n\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    if (!this._same) {\n      particle.color.r = MathUtils.lerp(\n        particle.transform.colorA.r,\n        particle.transform.colorB.r,\n        this.energy\n      );\n      particle.color.g = MathUtils.lerp(\n        particle.transform.colorA.g,\n        particle.transform.colorB.g,\n        this.energy\n      );\n      particle.color.b = MathUtils.lerp(\n        particle.transform.colorA.b,\n        particle.transform.colorB.b,\n        this.energy\n      );\n    } else {\n      particle.color.r = particle.transform.colorA.r;\n      particle.color.g = particle.transform.colorA.g;\n      particle.color.b = particle.transform.colorA.b;\n    }\n  }\n\n  /**\n   * Creates a Color initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.colorA - The starting color\n   * @property {number} json.colorB - The ending color\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Color}\n   */\n  static fromJSON(json) {\n    const { colorA, colorB, life, easing, isEnabled = true } = json;\n\n    return new Color(colorA, colorB, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import * as Zone from '../zone';\n\nimport Behaviour from './Behaviour';\nimport { DEFAULT_CROSS_TYPE } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_CROSS_ZONE as type } from './types';\n\n/**\n * Behaviour that allows for specific functions to be called on particles when\n * they interact with a zone.\n *\n */\nexport default class CrossZone extends Behaviour {\n  /**\n   * Constructs a CrossZone behaviour instance.\n   *\n   * @param {Zone} zone - the zone used to apply to particles with this behaviour\n   * @param {string} [crossType=DEFAULT_CROSS_TYPE] - enum of cross types, valid strings include 'dead', 'bound', 'cross'\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   */\n  constructor(zone, crossType, life, easing, isEnabled) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(zone, crossType);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Zone} zone - the zone used to apply to particles with this behaviour\n   * @param {string} [crossType=DEFAULT_CROSS_TYPE] - enum of cross types, valid strings include 'dead', 'bound', 'cross'\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   */\n  reset(zone, crossType = DEFAULT_CROSS_TYPE, life, easing) {\n    /**\n     * @desc The zone used to apply to particles with this behaviour\n     * @type {Zone}\n     */\n    this.zone = zone;\n    this.zone.crossType = crossType;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   *\n   * @see {@link '../zone/Zone.js'} crossing\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.zone.crossing.call(this.zone, particle);\n  }\n\n  /**\n   * Creates a CrossZone initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @return {CrossZone}\n   */\n  static fromJSON(json) {\n    const {\n      zoneType,\n      zoneParams,\n      crossType,\n      life,\n      easing,\n      isEnabled = true,\n    } = json;\n\n    const zone = new Zone[zoneType](...Object.values(zoneParams));\n\n    return new CrossZone(\n      zone,\n      crossType,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_FORCE as type } from './types';\n/**\n * Behaviour that forces particles along a specific axis.\n *\n */\nexport default class Force extends Behaviour {\n  /**\n   * Constructs a Force behaviour instance.\n   *\n   * @param {number} fx - the x axis force\n   * @param {number} fy - the y axis force\n   * @param {number} fz - the z axis force\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(fx, fy, fz, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(fx, fy, fz);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} fx - the x axis force\n   * @param {number} fy - the y axis force\n   * @param {number} fz - the z axis force\n   */\n  reset(fx, fy, fz) {\n    /**\n     * @desc The normalized force to exert on the particle in\n     * @type {Vector3D}\n     */\n    this.force = this.normalizeForce(new Vector3D(fx, fy, fz));\n\n    /**\n     * @desc The id of the force vector\n     * @property {number} this.force.id\n     */\n    this.force.id = Math.random();\n  }\n\n  /**\n   * Mutates the particle.acceleration property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.acceleration.add(this.force);\n  }\n\n  /**\n   * Creates a Force initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @return {Force}\n   */\n  static fromJSON(json) {\n    const { fx, fy, fz, life, easing, isEnabled = true } = json;\n\n    return new Force(fx, fy, fz, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import Force from './Force';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_GRAVITY as type } from './types';\n\n/**\n * Behaviour that forces particles down the y axis.\n *\n */\nexport default class Gravity extends Force {\n  /**\n   * Constructs a Gravity behaviour instance.\n   *\n   * @param {number} gravity - the force to pull the particle down the y axis\n   * @param {number} life - the life of the particle\n   * @param {string} easing - the easing equation to use\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(gravity, life, easing, isEnabled = true) {\n    super(0, -gravity, 0, life, easing, isEnabled);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  static fromJSON(json) {\n    const { gravity, life, easing, isEnabled = true } = json;\n\n    return new Gravity(gravity, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import { MathUtils, Vector3D, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { DEFAULT_RANDOM_DRIFT_DELAY } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_RANDOM_DRIFT as type } from './types';\n\n/**\n * Behaviour that causes particles to drift to random coordinates in 3D space.\n *\n */\nexport default class RandomDrift extends Behaviour {\n  /**\n   * Constructs a RandomDrift behaviour instance.\n   *\n   * @param {number} driftX - x axis drift\n   * @param {number} driftY - y axis drift\n   * @param {number} driftZ - z axis drift\n   * @param {number} [delay=DEFAULT_RANDOM_DRIFT_DELAY] - drift delay\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  constructor(\n    driftX,\n    driftY,\n    driftZ,\n    delay = DEFAULT_RANDOM_DRIFT_DELAY,\n    life,\n    easing,\n    isEnabled = true\n  ) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(driftX, driftY, driftZ, delay);\n\n    /**\n     * @desc Internal time used for calculating drift vs internal delay.\n     * @type {number}\n     */\n    this.time = 0;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} driftX - x axis drift\n   * @param {number} driftY - y axis drift\n   * @param {number} driftZ - z axis drift\n   * @param {number} [delay=DEFAULT_RANDOM_DRIFT_DELAY] - drift delay\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   */\n  reset(\n    driftX,\n    driftY,\n    driftZ,\n    delay = DEFAULT_RANDOM_DRIFT_DELAY,\n    life,\n    easing\n  ) {\n    /**\n     * @desc A Vector3D that stores the drift properties.\n     * @type {Vector3D}\n     */\n    this.randomForce = this.normalizeForce(\n      new Vector3D(driftX, driftY, driftZ)\n    );\n    /**\n     * @desc A Span containing the delay supplied.\n     * @type {Span}\n     */\n    this.delayPan = createSpan(delay);\n    this.time = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Mutates the particle.acceleration property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.time += time;\n\n    if (this.time >= this.delayPan.getValue()) {\n      const ax = MathUtils.randomAToB(-this.randomForce.x, this.randomForce.x);\n      const ay = MathUtils.randomAToB(-this.randomForce.y, this.randomForce.y);\n      const az = MathUtils.randomAToB(-this.randomForce.z, this.randomForce.z);\n\n      particle.acceleration.addValue(ax, ay, az);\n\n      this.time = 0;\n    }\n  }\n\n  static fromJSON(json) {\n    const { x, y, z, delay, life, easing, isEnabled = true } = json;\n\n    return new RandomDrift(\n      x,\n      y,\n      z,\n      delay,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import Attraction from './Attraction';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_REPULSION as type } from './types';\n/**\n * Behaviour that causes particles to be repelled from a target position.\n *\n */\nexport default class Repulsion extends Attraction {\n  /**\n   * Constructs an Repulsion behaviour instance.\n   *\n   * @param {Vector3D} targetPosition - The position the particles will be repelled from\n   * @param {number} force - The repulsion force scalar multiplier\n   * @param {number} radius - The repulsion radius\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  constructor(targetPosition, force, radius, life, easing, isEnabled = true) {\n    super(targetPosition, force, radius, life, easing, isEnabled);\n\n    /**\n     * @desc Repulsion is attraction with negative force.\n     * @type {number}\n     */\n    this.force *= -1;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Vector3D} targetPosition - the position the particles will be attracted to\n   * @param {number} force - the attraction force multiplier\n   * @param {number} radius - the attraction radius\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    super.reset(targetPosition, force, radius, life, easing);\n    this.force *= -1;\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.x - The target position x value\n   * @property {number} json.y - The target position y value\n   * @property {number} json.z - The target position z value\n   * @property {number} json.force - The attraction force scalar multiplier\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { x, y, z, force, radius, life, easing, isEnabled = true } = json;\n\n    return new Repulsion(\n      new Vector3D(x, y, z),\n      force,\n      radius,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import { DR, PI } from '../constants';\nimport { MathUtils, Vector3D, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ROTATE as type } from './types';\n\n/**\n * Behaviour that rotates particles.\n */\nexport default class Rotate extends Behaviour {\n  /**\n   * Constructs a Rotate behaviour instance.\n   *\n   * @param {number} x - X axis rotation\n   * @param {number} y - Y axis rotation\n   * @param {number} z - Z axis rotation\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(x, y, z, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(x, y, z);\n  }\n\n  /**\n   * Gets the rotation type.\n   *\n   * @return {string}\n   */\n  get rotationType() {\n    return this._rotationType;\n  }\n\n  /**\n   * Sets the rotation type.\n   *\n   * @param {string}\n   * @return void\n   */\n  set rotationType(rotationType) {\n    /**\n     * @desc The rotation type. ENUM of ['same', 'set', 'to', 'add'].\n     * @type {string}\n     */\n    this._rotationType = rotationType;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} x - X axis rotation\n   * @param {number} y - Y axis rotation\n   * @param {number} z - Z axis rotation\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(x, y, z, life, easing) {\n    /**\n     * @desc X axis rotation.\n     * @type {number|Span}\n     */\n    this.x = x || 0;\n\n    /**\n     * @desc Y axis rotation.\n     * @type {number|Span}\n     */\n    this.y = y || 0;\n\n    /**\n     * @desc Z axis rotation.\n     * @type {number|Span}\n     */\n    this.z = z || 0;\n\n    if (x === undefined || x == 'same') {\n      this.rotationType = 'same';\n    } else if (y == undefined) {\n      this.rotationType = 'set';\n    } else if (z === undefined) {\n      this.rotationType = 'to';\n    } else {\n      this.rotationType = 'add';\n      this.x = createSpan(this.x * DR);\n      this.y = createSpan(this.y * DR);\n      this.z = createSpan(this.z * DR);\n    }\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    switch (this.rotationType) {\n      case 'same':\n        break;\n\n      case 'set':\n        this._setRotation(particle.rotation, this.x);\n        break;\n\n      case 'to':\n        particle.transform.fR = particle.transform.fR || new Vector3D();\n        particle.transform.tR = particle.transform.tR || new Vector3D();\n        this._setRotation(particle.transform.fR, this.x);\n        this._setRotation(particle.transform.tR, this.y);\n        break;\n\n      case 'add':\n        particle.transform.addR = new Vector3D(\n          this.x.getValue(),\n          this.y.getValue(),\n          this.z.getValue()\n        );\n        break;\n    }\n  }\n\n  /**\n   * Sets the particle's rotation prior to the behaviour being applied.\n   *\n   * NOTE It's hard to see here, but this is mutating the particle's rotation\n   * even though the particle is not being passed in directly.\n   *\n   * NOTE the else if below will never be reached because the value being passed in\n   * will never be of type Vector3D.\n   *\n   * @param {Vector3D} particleRotation - the particle's rotation vector\n   * @param {string|number} value - the value to set the rotation value to, if 'random'\n   * rotation is randomised\n   * @return void\n   */\n  _setRotation(particleRotation, value) {\n    particleRotation = particleRotation || new Vector3D();\n    if (value == 'random') {\n      var x = MathUtils.randomAToB(-PI, PI);\n      var y = MathUtils.randomAToB(-PI, PI);\n      var z = MathUtils.randomAToB(-PI, PI);\n\n      particleRotation.set(x, y, z);\n    }\n    // we can't ever get here because value will never be a Vector3D!\n    // consider refactoring to\n    //  if (value instance of Span) { vec3.add(value.getValue()); }\n    else if (value instanceof Vector3D) {\n      particleRotation.copy(value);\n    }\n  }\n\n  /**\n   * Mutates the particle.rotation property.\n   *\n   * @see http://stackoverflow.com/questions/21622956/how-to-convert-direction-vector-to-euler-angles\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    switch (this.rotationType) {\n      // orients the particle in the direction it is moving\n      case 'same':\n        if (!particle.rotation) {\n          particle.rotation = new Vector3D();\n        }\n\n        particle.rotation.eulerFromDir(particle.velocity);\n        break;\n\n      case 'set':\n        //\n        break;\n\n      case 'to':\n        particle.rotation.x = MathUtils.lerp(\n          particle.transform.fR.x,\n          particle.transform.tR.x,\n          this.energy\n        );\n        particle.rotation.y = MathUtils.lerp(\n          particle.transform.fR.y,\n          particle.transform.tR.y,\n          this.energy\n        );\n        particle.rotation.z = MathUtils.lerp(\n          particle.transform.fR.z,\n          particle.transform.tR.z,\n          this.energy\n        );\n        break;\n\n      case 'add':\n        particle.rotation.add(particle.transform.addR);\n        break;\n    }\n  }\n\n  static fromJSON(json) {\n    const { x, y, z, life, easing, isEnabled = true } = json;\n\n    return new Rotate(x, y, z, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import { MathUtils, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_SCALE as type } from './types';\n\n/**\n * Behaviour that scales particles.\n *\n */\nexport default class Scale extends Behaviour {\n  /**\n   * Constructs a Scale behaviour instance.\n   *\n   * @param {number} scaleA - the starting scale value\n   * @param {?number} scaleB - the ending scale value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(scaleA, scaleB, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(scaleA, scaleB);\n  }\n\n  /**\n   * Gets the _same property which determines if the scale props are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the scale props are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} scaleA - the starting scale value\n   * @param {?number} scaleB - the ending scale value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(scaleA, scaleB, life, easing) {\n    this.same = scaleB === null || scaleB === undefined ? true : false;\n\n    /**\n     * @desc The starting scale.\n     * @type {Span}\n     */\n    this.scaleA = createSpan(scaleA || 1);\n\n    /**\n     * @desc The ending scale.\n     * @type {Span}\n     */\n    this.scaleB = createSpan(scaleB);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   * Stores initial values for comparison and mutation in the applyBehaviour method.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    particle.transform.scaleA = this.scaleA.getValue();\n    particle.transform.oldRadius = particle.radius;\n\n    particle.transform.scaleB = this.same\n      ? particle.transform.scaleA\n      : this.scaleB.getValue();\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   * Mutates the particle's scale and its radius according to this scale.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.scale = MathUtils.lerp(\n      particle.transform.scaleA,\n      particle.transform.scaleB,\n      this.energy\n    );\n\n    if (particle.scale < 0.0005) {\n      particle.scale = 0;\n    }\n\n    particle.radius = particle.transform.oldRadius * particle.scale;\n  }\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Spring}\n   */\n  static fromJSON(json) {\n    const { scaleA, scaleB, life, easing, isEnabled = true } = json;\n\n    return new Scale(scaleA, scaleB, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_SPRING as type } from './types';\n\n/**\n * Behaviour that causes particles to spring.\n *\n */\nexport default class Spring extends Behaviour {\n  /**\n   * Constructs a Spring behaviour instance.\n   *\n   * @param {number} x - X axis spring\n   * @param {number} y - Y axis spring\n   * @param {number} z - Z axis spring\n   * @param {number} spring - Spring factor\n   * @param {number} friction - Spring friction\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(x, y, z, spring, friction, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(x, y, z, spring, friction);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} x - X axis spring\n   * @param {number} y - Y axis spring\n   * @param {number} z - Z axis spring\n   * @param {number} spring - Spring factor\n   * @param {number} friction - Spring friction\n   * @return void\n   */\n  reset(x, y, z, spring, friction) {\n    if (!this.pos) {\n      this.pos = new Vector3D(x, y, z);\n    } else {\n      this.pos.set(x, y, z);\n    }\n\n    this.spring = spring || 0.1;\n    this.friction = friction || 0.98;\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   * Mutates the particle's velocity according to this.pos and this.spring.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.velocity.x += (this.pos.x - particle.position.x) * this.spring;\n    particle.velocity.y += (this.pos.y - particle.position.y) * this.spring;\n    particle.velocity.z += (this.pos.z - particle.position.z) * this.spring;\n  }\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Spring}\n   */\n  static fromJSON(json) {\n    const { x, y, z, spring, friction, life, easing, isEnabled = true } = json;\n\n    return new Spring(\n      x,\n      y,\n      z,\n      spring,\n      friction,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import * as Behaviour from '../behaviour';\nimport * as Initializer from '../initializer';\n\nimport { EULER, POOL_MAX } from '../constants';\nimport {\n  INITIALIZER_TYPES_THAT_REQUIRE_THREE,\n  SUPPORTED_JSON_BEHAVIOUR_TYPES,\n  SUPPORTED_JSON_INITIALIZER_TYPES,\n} from './constants';\n\nimport Rate from '../initializer/Rate';\n\n/**\n * Makes a rate instance.\n *\n * @param {object} json - The data required to construct a Rate instance\n * @return {Rate}\n */\nconst makeRate = json => Rate.fromJSON(json);\n\n/**\n * Makes initializers from json items.\n *\n * @param {array<object>} items - An array of objects which provide initializer constructor params\n * @param {object} THREE - The Web GL Api to use\n * @return {array<Initializer>}\n */\nconst makeInitializers = (items, THREE) => {\n  const initializers = [];\n\n  items.forEach(data => {\n    const { type, properties } = data;\n\n    if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n      throw new Error(\n        `The initializer type ${type} is invalid or not yet supported`\n      );\n    }\n\n    if (INITIALIZER_TYPES_THAT_REQUIRE_THREE.includes(type)) {\n      initializers.push(Initializer[type].fromJSON(properties, THREE));\n    } else {\n      initializers.push(Initializer[type].fromJSON(properties));\n    }\n  });\n\n  return initializers;\n};\n\n/**\n * Makes behaviours from json items.\n *\n * @param {array<object>} items - An array of objects which provide behaviour constructor params\n * @return {array<Behaviour>}\n */\nconst makeBehaviours = items => {\n  const behaviours = [];\n\n  items.forEach(data => {\n    const { type, properties } = data;\n\n    if (!SUPPORTED_JSON_BEHAVIOUR_TYPES.includes(type)) {\n      throw new Error(\n        `The behaviour type ${type} is invalid or not yet supported`\n      );\n    }\n\n    behaviours.push(Behaviour[type].fromJSON(properties));\n  });\n\n  return behaviours;\n};\n\n/**\n * Creates a System instance from a JSON object.\n *\n * @deprecated Use fromJSONAsync instead.\n *\n * @param {object} json - The JSON to create the System instance from\n * @param {object} THREE - The Web GL Api to use\n * @param {function} System - The system class\n * @param {function} Emitter - The emitter class\n * @param {number} json.preParticles - The predetermined number of particles\n * @param {string} json.integrationType - The integration algorithm to use\n * @param {array<object>} json.emitters - The emitters for the system instance\n * @return {System}\n */\nexport default (json, THREE, System, Emitter) => {\n  const {\n    preParticles = POOL_MAX,\n    integrationType = EULER,\n    emitters = [],\n  } = json;\n  const system = new System(THREE, preParticles, integrationType);\n\n  emitters.forEach(data => {\n    const emitter = new Emitter();\n    const {\n      rate,\n      rotation,\n      initializers,\n      behaviours,\n      emitterBehaviours = [],\n      position,\n      totalEmitTimes = Infinity,\n      life = Infinity,\n    } = data;\n\n    emitter\n      .setRate(makeRate(rate))\n      .setRotation(rotation)\n      .setInitializers(makeInitializers(initializers, THREE))\n      .setBehaviours(makeBehaviours(behaviours))\n      .setEmitterBehaviours(makeBehaviours(emitterBehaviours))\n      .setPosition(position)\n      .emit(totalEmitTimes, life);\n\n    system.addEmitter(emitter);\n  });\n\n  return system;\n};\n","import * as Behaviour from '../behaviour';\nimport * as Initializer from '../initializer';\n\nimport { EULER, POOL_MAX } from '../constants';\nimport {\n  INITIALIZER_TYPES_THAT_REQUIRE_THREE,\n  SUPPORTED_JSON_BEHAVIOUR_TYPES,\n  SUPPORTED_JSON_INITIALIZER_TYPES,\n} from './constants';\n\nimport Rate from '../initializer/Rate';\nimport TextureInitializer from '../initializer/Texture';\n\nconst DEFAULT_OPTIONS = { shouldAutoEmit: true };\n\n/**\n * Makes a rate instance.\n *\n * @param {object} json - The data required to construct a Rate instance\n * @return {Rate}\n */\nconst makeRate = json => Rate.fromJSON(json);\n\n/**\n * Makes initializers from json items.\n *\n * @param {array<object>} items - An array of objects which provide initializer constructor params\n * @param {object} THREE - The Web GL Api to use\n * @return {array<Initializer>}\n */\nconst makeInitializers = (items, THREE) =>\n  new Promise((resolve, reject) => {\n    if (!items.length) {\n      return resolve([]);\n    }\n\n    const numberOfInitializers = items.length;\n    const madeInitializers = [];\n    const doNotRequireTextureLoading = items.filter(\n      ({ properties }) => !properties.texture\n    );\n    const doRequireTextureLoading = items.filter(\n      ({ properties }) => properties.texture\n    );\n\n    doNotRequireTextureLoading.forEach(data => {\n      const { type, properties } = data;\n\n      if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n        return reject(\n          `The initializer type ${type} is invalid or not yet supported`\n        );\n      }\n\n      if (INITIALIZER_TYPES_THAT_REQUIRE_THREE.includes(type)) {\n        madeInitializers.push(Initializer[type].fromJSON(properties, THREE));\n      } else {\n        madeInitializers.push(Initializer[type].fromJSON(properties));\n      }\n\n      if (madeInitializers.length === numberOfInitializers) {\n        return resolve(madeInitializers);\n      }\n    });\n\n    doRequireTextureLoading.forEach(data => {\n      const {\n        type,\n        properties,\n        properties: { texture },\n      } = data;\n      const textureLoader = new THREE.TextureLoader();\n\n      if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n        return reject(\n          `The initializer type ${type} is invalid or not yet supported`\n        );\n      }\n\n      textureLoader.load(\n        texture,\n        loadedTexture => {\n          madeInitializers.push(\n            TextureInitializer.fromJSON(\n              {\n                ...properties,\n                loadedTexture,\n              },\n              THREE\n            )\n          );\n\n          if (madeInitializers.length === numberOfInitializers) {\n            return resolve(madeInitializers);\n          }\n        },\n        undefined,\n        reject\n      );\n    });\n  });\n\n/**\n * Makes behaviours from json items.\n *\n * @param {array<object>} items - An array of objects which provide behaviour constructor params\n * @return {Promise<array>}\n */\nconst makeBehaviours = items =>\n  new Promise((resolve, reject) => {\n    if (!items.length) {\n      return resolve([]);\n    }\n\n    const numberOfBehaviours = items.length;\n    const madeBehaviours = [];\n\n    items.forEach(data => {\n      const { type, properties } = data;\n\n      if (!SUPPORTED_JSON_BEHAVIOUR_TYPES.includes(type)) {\n        return reject(\n          `The behaviour type ${type} is invalid or not yet supported`\n        );\n      }\n\n      madeBehaviours.push(Behaviour[type].fromJSON(properties));\n\n      if (madeBehaviours.length === numberOfBehaviours) {\n        return resolve(madeBehaviours);\n      }\n    });\n  });\n\nconst makeEmitters = (emitters, Emitter, THREE, shouldAutoEmit) =>\n  new Promise((resolve, reject) => {\n    if (!emitters.length) {\n      return resolve([]);\n    }\n\n    const madeEmitters = [];\n    const numberOfEmitters = emitters.length;\n\n    if (!numberOfEmitters) {\n      return resolve(madeEmitters);\n    }\n\n    emitters.forEach(data => {\n      const emitter = new Emitter();\n      const {\n        rate,\n        rotation,\n        initializers,\n        behaviours,\n        emitterBehaviours = [],\n        position,\n        totalEmitTimes = Infinity,\n        life = Infinity,\n      } = data;\n\n      emitter\n        .setRate(makeRate(rate))\n        .setRotation(rotation)\n        .setPosition(position);\n\n      makeInitializers(initializers, THREE)\n        .then(madeInitializers => {\n          emitter.setInitializers(madeInitializers);\n\n          return makeBehaviours(behaviours);\n        })\n        .then(madeBehaviours => {\n          emitter.setBehaviours(madeBehaviours);\n\n          return makeBehaviours(emitterBehaviours);\n        })\n        .then(madeEmitterBehaviours => {\n          emitter.setEmitterBehaviours(madeEmitterBehaviours);\n\n          return Promise.resolve(emitter);\n        })\n        .then(emitter => {\n          madeEmitters.push(\n            shouldAutoEmit\n              ? emitter.emit(totalEmitTimes, life)\n              : emitter.setTotalEmitTimes(totalEmitTimes).setLife(life)\n          );\n\n          if (madeEmitters.length === numberOfEmitters) {\n            return resolve(madeEmitters);\n          }\n        })\n        .catch(reject);\n    });\n  });\n\n/**\n * Creates a System instance from a JSON object.\n *\n * @param {object} json - The JSON to create the System instance from\n * @param {number} json.preParticles - The predetermined number of particles\n * @param {string} json.integrationType - The integration algorithm to use\n * @param {array<object>} json.emitters - The emitters for the system instance\n * @param {object} THREE - The Web GL Api to use\n * @param {function} System - The system class\n * @param {function} Emitter - The emitter class\n * @param {object} [options={}] - Optional config options\n * @return {Promise<System>}\n */\nexport default (json, THREE, System, Emitter, options = {}) =>\n  new Promise((resolve, reject) => {\n    const {\n      preParticles = POOL_MAX,\n      integrationType = EULER,\n      emitters = [],\n    } = json;\n    const system = new System(preParticles, integrationType);\n    const { shouldAutoEmit } = { ...DEFAULT_OPTIONS, ...options };\n\n    makeEmitters(emitters, Emitter, THREE, shouldAutoEmit)\n      .then(madeEmitters => {\n        const numberOfEmitters = madeEmitters.length;\n\n        if (!numberOfEmitters) {\n          return resolve(system);\n        }\n\n        madeEmitters.forEach(madeEmitter => {\n          system.addEmitter(madeEmitter);\n\n          if (system.emitters.length === numberOfEmitters) {\n            resolve(system);\n          }\n        });\n      })\n      .catch(reject);\n  });\n","import EventDispatcher, {\n  EMITTER_ADDED,\n  EMITTER_REMOVED,\n  SYSTEM_UPDATE,\n  SYSTEM_UPDATE_AFTER,\n} from '../events';\n\nimport { DEFAULT_SYSTEM_DELTA } from './constants';\nimport Emitter from '../emitter/Emitter';\nimport { INTEGRATION_TYPE_EULER } from '../math/constants';\nimport { POOL_MAX } from '../constants';\nimport Pool from './Pool';\nimport fromJSON from './fromJSON';\nimport fromJSONAsync from './fromJSONAsync';\nimport { CORE_TYPE_SYSTEM as type } from './types';\n\n/**\n * The core of the three-system particle engine.\n * A System instance can contain multiple emitters, each with their own initializers\n * and behaviours.\n *\n */\nexport default class System {\n  /**\n   * Constructs a System instance.\n   *\n   * @param {object} THREE - ThreeJs\n   * @param {number} [preParticles=POOL_MAX] - The number of particles to start with\n   * @param {string} [integrationType=INTEGRATION_TYPE_EULER] - The integration type to use\n   * @return void\n   */\n  constructor(\n    preParticles = POOL_MAX,\n    integrationType = INTEGRATION_TYPE_EULER\n  ) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if the system can update or not. Set to false when destroying\n     * to ensure that external calls to update do not throw errors.\n     * @type {boolean}\n     */\n    this.canUpdate = true;\n\n    /**\n     * @desc The number of particles to start with.\n     * @type {number}\n     */\n    this.preParticles = preParticles;\n\n    /**\n     * @desc The integration algorithm type to use.\n     * @param {string}\n     */\n    this.integrationType = integrationType;\n\n    /**\n     * @desc The emitters in the particle system.\n     * @type {array<Emitter>}\n     */\n    this.emitters = [];\n\n    /**\n     * @desc The renderers for the system.\n     * @type {array<Renderer>}\n     */\n    this.renderers = [];\n\n    /**\n     * @desc A pool used to manage the internal system cache of objects\n     * @type {Pool}\n     */\n    this.pool = new Pool();\n\n    /**\n     * @desc Internal event dispatcher\n     * @type {EventDispatcher}\n     */\n    this.eventDispatcher = new EventDispatcher();\n  }\n\n  /**\n   * Creates a System instance from a JSON object.\n   *\n   * @param {object} json - The JSON to create the System instance from\n   * @param {object} THREE - The Web GL Api to use eg., THREE\n   * @return {System}\n   *\n   * @deprecated use fromJSONAsync instead\n   */\n  static fromJSON(json, THREE) {\n    return fromJSON(json, THREE, System, Emitter);\n  }\n\n  /**\n   * Loads a System instance from JSON asynchronously. Ensures all textures are\n   * fully loaded before resolving with the instantiated System instance.\n   *\n   * @param {object} json - The JSON to create the System instance from\n   * @param {object} THREE - The Web GL Api to use eg., THREE\n   * @param {?object} options - Optional config options\n   * @return {Promise<System>}\n   */\n  static fromJSONAsync(json, THREE, options) {\n    return fromJSONAsync(json, THREE, System, Emitter, options);\n  }\n\n  /**\n   * Proxy method for the internal event dispatcher's dispatchEvent method.\n   *\n   * @param {string} event - The event to dispatch\n   * @param {object<System|Emitter|Particle>} [target=this] - The event target\n   */\n  dispatch(event, target = this) {\n    this.eventDispatcher.dispatchEvent(event, target);\n  }\n\n  /**\n   * Adds a renderer to the System instance and initializes it.\n   *\n   * @param {Renderer} renderer - The renderer to add\n   * @return {System}\n   */\n  addRenderer(renderer) {\n    this.renderers.push(renderer);\n    renderer.init(this);\n\n    return this;\n  }\n\n  /**\n   * Removes a renderer from the System instance.\n   *\n   * @param {Renderer} renderer\n   * @return {System}\n   */\n  removeRenderer(renderer) {\n    this.renderers.splice(this.renderers.indexOf(renderer), 1);\n    renderer.remove(this);\n\n    return this;\n  }\n\n  /**\n   * Adds an emitter to the System instance.\n   * Dispatches the EMITTER_ADDED event.\n   *\n   * @param {Emitter} emitter - The emitter to add\n   * @return {System}\n   */\n  addEmitter(emitter) {\n    const index = this.emitters.length;\n\n    emitter.parent = this;\n    emitter.index = index;\n\n    this.emitters.push(emitter);\n    this.dispatch(EMITTER_ADDED, emitter);\n\n    return this;\n  }\n\n  /**\n   * Removes an emitter from the System instance.\n   * Dispatches the EMITTER_REMOVED event.\n   *\n   * @param {Emitter} emitter - The emitter to remove\n   * @return {System}\n   */\n  removeEmitter(emitter) {\n    if (emitter.parent !== this) {\n      return this;\n    }\n\n    emitter.parent = null;\n    emitter.index = undefined;\n\n    this.emitters.splice(this.emitters.indexOf(emitter), 1);\n    this.dispatch(EMITTER_REMOVED, emitter);\n\n    return this;\n  }\n\n  /**\n   * Wires up life cycle methods and causes a system's emitters to emit particles.\n   * Expects emitters to have their totalEmitTimes and life set already.\n   * Inifnite systems will resolve immediately.\n   *\n   * @param {object} hooks - Functions to hook into the life cycle API\n   * @param {function} hooks.onStart - Called when the system starts to emit particles\n   * @param {function} hooks.onUpdate - Called each time the system updates\n   * @param {function} hooks.onEnd - Called when the system's emitters have all died\n   * @return {Promise}\n   */\n  emit({ onStart, onUpdate, onEnd }) {\n    if (onStart) {\n      onStart();\n    }\n\n    if (onUpdate) {\n      this.eventDispatcher.addEventListener(SYSTEM_UPDATE, onUpdate);\n    }\n\n    const emitters = this.emitters.map(emitter => {\n      const { life } = emitter;\n\n      if (life === Infinity) {\n        if (onEnd) {\n          onEnd();\n        }\n\n        emitter.experimental_emit();\n\n        return Promise.resolve();\n      }\n\n      return new Promise(resolve => {\n        emitter.addOnEmitterDeadEventListener(() => {\n          if (onEnd) {\n            onEnd();\n          }\n\n          resolve();\n        });\n\n        emitter.experimental_emit();\n      });\n    });\n\n    try {\n      return Promise.all(emitters);\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  /**\n   * Updates the particle system based on the delta passed.\n   *\n   * @example\n   * animate = () => {\n   *   threeRenderer.render(threeScene, threeCamera);\n   *   system.update();\n   *   requestAnimationFrame(animate);\n   * }\n   * animate();\n   *\n   * @param {number} delta - Delta time\n   * @return {Promise}\n   */\n  update(delta = DEFAULT_SYSTEM_DELTA) {\n    const d = delta || DEFAULT_SYSTEM_DELTA;\n\n    if (this.canUpdate) {\n      if (d > 0) {\n        let i = this.emitters.length;\n\n        while (i--) {\n          const emitter = this.emitters[i];\n\n          emitter.update(d);\n          emitter.isEmitting && this.dispatch(SYSTEM_UPDATE);\n        }\n      }\n\n      this.dispatch(SYSTEM_UPDATE_AFTER);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Gets a count of the total number of particles in the system.\n   *\n   * @return {integer}\n   */\n  getCount() {\n    const length = this.emitters.length;\n\n    let total = 0;\n\n    let i;\n\n    for (i = 0; i < length; i++) {\n      total += this.emitters[i].particles.length;\n    }\n\n    return total;\n  }\n\n  /**\n   * Destroys all emitters, renderers and the Nebula pool.\n   * Ensures that this.update will not perform any operations while the system\n   * is being destroyed.\n   *\n   * @return void\n   */\n  destroy() {\n    const length = this.emitters.length;\n\n    this.canUpdate = false;\n\n    for (let e = 0; e < length; e++) {\n      this.emitters[e] && this.emitters[e].destroy();\n      delete this.emitters[e];\n    }\n\n    for (let r = 0; r < length; r++) {\n      if (this.renderers[r] && this.renderers[r].destroy) {\n        this.renderers[r].destroy();\n        delete this.renderers[r];\n      }\n    }\n\n    this.emitters.length = 0;\n    this.pool.destroy();\n    this.canUpdate = true;\n  }\n}\n","export const DEFAULT_WIDTH = 10;\nexport const DEFAULT_HEIGHT = 10;\nexport const DEFAULT_DEPTH = 10;\nexport const DEFAULT_RADIUS = 15;\nexport const DEFAULT_SIZE = 15;\nexport const DEFAULT_POSITION = 0;\n","import { DEFAULT_POSITION, DEFAULT_SIZE as size } from './constants';\n\n/**\n * @exports Debug - methods and helpers for debugging System emitters, zones and particles.\n * @requires THREE - { SphereGeometry, BoxGeometry, MeshBasicMaterial, OctahedronGeometry, Mesh }\n */\nexport default {\n  /**\n   * Adds an event listener to the system instance's SYSTEM_UPDATE event.\n   *\n   * @param {System} system - the system instance\n   * @param {function} onSystemUpdated - the function to call when system has been updated\n   * @return {Debug}\n   */\n  addEventListener: function(system, onSystemUpdated) {\n    system.eventDispatcher.addEventListener('SYSTEM_UPDATE', onSystemUpdated);\n\n    return this;\n  },\n\n  /**\n   * Draws a wireframe mesh around the zone for debugging purposes.\n   *\n   * @param {System} system - the system instance\n   * @param {object} container - a three Object3D (usually the scene)\n   * @param {Zone} zone - a Zone instance\n   * @return void\n   */\n  drawZone: function(THREE, system, container, zone = {}) {\n    const color = '#2194ce';\n    const wireframe = true;\n    const {\n      width = size,\n      height = size,\n      depth = size,\n      radius = size,\n      x = DEFAULT_POSITION,\n      y = DEFAULT_POSITION,\n      z = DEFAULT_POSITION,\n    } = zone;\n\n    let geometry;\n\n    if (zone.isPointZone()) {\n      geometry = new THREE.SphereGeometry(15);\n    }\n\n    if (zone.isLineZone()) {\n      // TODO\n    }\n\n    if (zone.isBoxZone()) {\n      geometry = new THREE.BoxGeometry(width, height, depth);\n    }\n\n    if (zone.isSphereZone()) {\n      geometry = new THREE.SphereGeometry(radius, size, size);\n    }\n\n    if (zone.isMeshZone()) {\n      geometry = zone.geometry.geometry\n        ? zone.geometry.geometry.clone()\n        : zone.geometry.clone();\n    }\n\n    if (!geometry) {\n      geometry = new THREE.BoxGeometry(width, height, depth);\n    }\n\n    const material = new THREE.MeshBasicMaterial({ color, wireframe });\n    // NOTE! geometry.clone is required for UNKNOWN reasons,\n    // three does not render the mesh correctly without doing this since r88\n    const mesh = new THREE.Mesh(geometry.clone(), material);\n\n    container.add(mesh);\n\n    this.addEventListener(system, function() {\n      mesh.position.set(x, y, z);\n    });\n  },\n\n  /**\n   * Draws a mesh for each particle emitted in order to help debug particles.\n   *\n   * @param {object} system - the system instance\n   * @param {object} container - a three Object3D (usually the scene)\n   * @param {object} emitter - the emitter to debug\n   * @param {string} color - the color for the debug mesh material\n   * @return void\n   */\n  drawEmitter: function(THREE, system, container, emitter, color) {\n    const geometry = new THREE.OctahedronGeometry(size);\n    const material = new THREE.MeshBasicMaterial({\n      color: color || '#aaa',\n      wireframe: true,\n    });\n    // NOTE! geometry.clone is required for UNKNOWN reasons,\n    // three does not render the mesh correctly without doing this since r88\n    const mesh = new THREE.Mesh(geometry.clone(), material);\n\n    container.add(mesh);\n\n    this.addEventListener(system, function() {\n      mesh.position.copy(emitter.position);\n      mesh.rotation.set(\n        emitter.rotation.x,\n        emitter.rotation.y,\n        emitter.rotation.z\n      );\n    });\n  },\n\n  /**\n   * Renders emitter / particle information into the info element.\n   *\n   * @param {object} system - the system instance\n   * @param {integer} style - style to apply (see the addInfo method's switch statement)\n   * @return void\n   */\n  renderInfo: (function() {\n    function getCreatedNumber(type, system) {\n      var pool = type == 'material' ? '_materialPool' : '_targetPool';\n      var renderer = system.renderers[0];\n\n      return renderer[pool].cID;\n    }\n\n    function getEmitterPos(system) {\n      var e = system.emitters[0];\n\n      return (\n        Math.round(e.p.x) + ',' + Math.round(e.p.y) + ',' + Math.round(e.p.z)\n      );\n    }\n\n    return function(system, style) {\n      this.addInfo(style);\n      var str = '';\n\n      switch (this._infoType) {\n        case 2:\n          str += 'emitter:' + system.emitters.length + '<br>';\n          str += 'em speed:' + system.emitters[0].cID + '<br>';\n          str += 'pos:' + getEmitterPos(system);\n          break;\n\n        case 3:\n          str += system.renderers[0].name + '<br>';\n          str += 'target:' + getCreatedNumber('target') + '<br>';\n          str += 'material:' + getCreatedNumber('material');\n          break;\n\n        default:\n          str += 'particles:' + system.getCount() + '<br>';\n          str += 'pool:' + system.pool.getCount() + '<br>';\n          str += 'total:' + (system.getCount() + system.pool.getCount());\n      }\n      this._infoCon.innerHTML = str;\n    };\n  })(),\n\n  /**\n   * Appends the info element into the dom.\n   *\n   * @param {integer} style - the style type to apply\n   * @return void\n   */\n  addInfo: (function() {\n    return function(style) {\n      var self = this;\n\n      if (!this._infoCon) {\n        this._infoCon = document.createElement('div');\n        this._infoCon.style.cssText = [\n          'position:fixed;bottom:0px;left:0;cursor:pointer;',\n          'opacity:0.9;z-index:10000;padding:10px;font-size:12px;',\n          'width:120px;height:50px;background-color:#002;color:#0ff;',\n        ].join('');\n\n        this._infoType = 1;\n        this._infoCon.addEventListener(\n          'click',\n          function() {\n            self._infoType++;\n            if (self._infoType > 3) self._infoType = 1;\n          },\n          false\n        );\n\n        var bg, color;\n\n        switch (style) {\n          case 2:\n            bg = '#201';\n            color = '#f08';\n            break;\n\n          case 3:\n            bg = '#020';\n            color = '#0f0';\n            break;\n\n          default:\n            bg = '#002';\n            color = '#0ff';\n        }\n\n        this._infoCon.style['background-color'] = bg;\n        this._infoCon.style['color'] = color;\n      }\n\n      if (!this._infoCon.parentNode) document.body.appendChild(this._infoCon);\n    };\n  })(),\n};\n","/**\n * You can use this emit particles.\n *\n * This method will console.log the fixed number of your info  in updata or requestAnimationFrame\n *\n * use like this log('+12',mc); log 12 times\n *\n * @return void\n */\nexport default function() {\n  let once = 0;\n\n  if (window.console && window.console.trace) {\n    var arg = Array.prototype.slice.call(arguments);\n    var s1 = arguments[0] + '';\n\n    if (s1.indexOf('+') == 0) {\n      var n = parseInt(arguments[0]);\n\n      if (once < n) {\n        arg.shift();\n        console.trace.apply(console, arg);\n        once++;\n      }\n    } else {\n      arg.unshift('+15');\n      this.apply(console, arg);\n    }\n  }\n}\n","import Emitter from './Emitter';\nimport THREEUtil from '../utils/THREEUtil';\nimport Util from '../utils/Util';\nimport { EMITTER_TYPE_FOLLOW as type } from './types';\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from System.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class System.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} pObj the parameters object;\n   */\n  constructor(mouseTarget, ease, pObj) {\n    super(pObj);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    var self = this;\n\n    this.mousemoveHandler = function(e) {\n      self.mousemove.call(self, e);\n    };\n\n    this.mousedownHandler = function(e) {\n      self.mousedown.call(self, e);\n    };\n\n    this.mouseupHandler = function(e) {\n      self.mouseup.call(self, e);\n    };\n\n    this.mouseTarget.addEventListener(\n      'mousemove',\n      this.mousemoveHandler,\n      false\n    );\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stopEmit\n   */\n  stopEmit() {\n    this._allowEmitting = false;\n  }\n\n  setCameraAndCanvas(camera, canvas) {\n    this.camera = camera;\n    this.canvas = canvas;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX == 0) {\n      this.position.x += (e.layerX - this.position.x) * this.ease;\n      this.position.y += (e.layerY - this.position.y) * this.ease;\n    } else if (e.offsetX || e.offsetX == 0) {\n      this.position.x += (e.offsetX - this.position.x) * this.ease;\n      this.position.y += (e.offsetY - this.position.y) * this.ease;\n    }\n\n    this.position.copy(\n      THREEUtil.toSpacePos(this.position, this.camera, this.canvas)\n    );\n\n    if (this._allowEmitting) super.emit('once');\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\n      'mousemove',\n      this.mousemoveHandler,\n      false\n    );\n  }\n}\n","import {\n  PARTICLE_CREATED,\n  PARTICLE_DEAD,\n  PARTICLE_UPDATE,\n  SYSTEM_UPDATE,\n} from '../events/constants';\n\nimport { RENDERER_TYPE_BASE } from './types';\nimport { __DEV__ } from '../constants';\n\nexport default class BaseRenderer {\n  constructor(type = RENDERER_TYPE_BASE) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  init(system) {\n    var self = this;\n\n    this.system = system;\n\n    this.system.eventDispatcher.addEventListener(SYSTEM_UPDATE, function(\n      system\n    ) {\n      self.onSystemUpdate.call(self, system);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_CREATED, function(\n      particle\n    ) {\n      self.onParticleCreated.call(self, particle);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_UPDATE, function(\n      particle\n    ) {\n      self.onParticleUpdate.call(self, particle);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_DEAD, function(\n      particle\n    ) {\n      self.onParticleDead.call(self, particle);\n    });\n\n    this.logRendererType();\n  }\n\n  remove() {\n    this.system = null;\n  }\n\n  /**\n   * @abstract\n   */\n  onParticleCreated(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onParticleUpdate(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onParticleDead(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onSystemUpdate(system) {} // eslint-disable-line\n\n  /**\n   * Logs the renderer type being used when in development mode.\n   *\n   * @return void\n   */\n  logRendererType() {\n    if (!__DEV__) {\n      return;\n    }\n\n    console.log(`${this.type}`);\n  }\n}\n","import BaseRenderer from './BaseRenderer';\nimport { Pool } from '../core';\nimport { RENDERER_TYPE_CUSTOM as type } from './types';\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor() {\n    super(type);\n\n    this.targetPool = new Pool();\n    this.materialPool = new Pool();\n  }\n\n  onSystemUpdate() {}\n\n  onParticleCreated(particle) {} // eslint-disable-line\n\n  onParticleUpdate(particle) {} // eslint-disable-line\n\n  onParticleDead(particle) {} // eslint-disable-line\n}\n","import BaseRenderer from './BaseRenderer';\nimport { PUID } from '../utils';\nimport { Pool } from '../core';\nimport { RENDERER_TYPE_MESH as type } from './types';\n\n/**\n * @requires THREE - { Mesh, BoxGeometry, MeshLambertMaterial }\n */\nexport default class MeshRenderer extends BaseRenderer {\n  /**\n   * @param {object} container - An Object3D container, usually a THREE.Scene\n   * @param {object} THREE - THREE Api\n   */\n  constructor(container, THREE) {\n    super(type);\n\n    this.container = container;\n    this._targetPool = new Pool();\n    this._materialPool = new Pool();\n    this._body = new THREE.Mesh(\n      new THREE.BoxGeometry(50, 50, 50),\n      new THREE.MeshLambertMaterial({ color: '#ff0000' })\n    );\n  }\n\n  isThreeSprite(particle) {\n    return particle.target.isSprite;\n  }\n\n  onSystemUpdate() {}\n\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      //set target\n      if (!particle.body) particle.body = this._body;\n      particle.target = this._targetPool.get(particle.body);\n\n      //set material\n      if (particle.useAlpha || particle.useColor) {\n        particle.target.material.__puid = PUID.id(particle.body.material);\n        particle.target.material = this._materialPool.get(\n          particle.target.material\n        );\n      }\n    }\n\n    if (particle.target) {\n      particle.target.position.copy(particle.position);\n      this.container.add(particle.target);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    const { target, useAlpha, useColor, rotation } = particle;\n\n    if (!target) {\n      return;\n    }\n\n    target.position.copy(particle.position);\n\n    if (!this.isThreeSprite(particle)) {\n      target.rotation.set(rotation.x, rotation.y, rotation.z);\n    }\n\n    this.scale(particle);\n\n    if (useAlpha) {\n      target.material.opacity = particle.alpha;\n      target.material.transparent = true;\n    }\n\n    if (useColor) {\n      target.material.color.copy(particle.color);\n    }\n  }\n\n  scale(particle) {\n    particle.target.scale.set(particle.scale, particle.scale, particle.scale);\n  }\n\n  onParticleDead(particle) {\n    if (particle.target) {\n      if (particle.useAlpha || particle.useColor)\n        this._materialPool.expire(particle.target.material);\n\n      this._targetPool.expire(particle.target);\n      this.container.remove(particle.target);\n      particle.target = null;\n    }\n  }\n}\n","import MeshRenderer from './MeshRenderer';\nimport { RENDERER_TYPE_SPRITE as type } from './types';\n\n/**\n * @requires THREE - { Mesh, BoxGeometry, MeshLambertMaterial, Sprite, SpriteMaterial }\n */\nexport default class SpriteRenderer extends MeshRenderer {\n  constructor(container, THREE) {\n    super(container, THREE);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this._body = new THREE.Sprite(\n      new THREE.SpriteMaterial({ color: 0xffffff })\n    );\n  }\n\n  scale(particle) {\n    particle.target.scale.set(\n      particle.scale * particle.radius,\n      particle.scale * particle.radius,\n      1\n    );\n  }\n}\n","// Primitives\nexport const DEFAULT_MAX_PARTICLES = 10000;\nexport const VECTOR_3_SIZE = ['x', 'y', 'z'].length;\nexport const RGBA_SIZE = ['r', 'g', 'b', 'a'].length;\nexport const FLOAT_BYTE_SIZE = 4;\n\n// Byte sizes\nexport const POSITION_BYTE_SIZE = VECTOR_3_SIZE * FLOAT_BYTE_SIZE;\nexport const SIZE_BYTE_SIZE = FLOAT_BYTE_SIZE;\nexport const RGBA_BYTE_SIZE = RGBA_SIZE * FLOAT_BYTE_SIZE;\nexport const ALL_BYTE_SIZES = [\n  POSITION_BYTE_SIZE,\n  SIZE_BYTE_SIZE,\n  RGBA_BYTE_SIZE,\n];\nexport const PARTICLE_BYTE_SIZE = ALL_BYTE_SIZES.reduce(\n  (cur, acc) => cur + acc\n);\n\n// Attributes\nexport const POSITION_ATTRIBUTE_BUFFER_SIZE = VECTOR_3_SIZE;\nexport const SIZE_ATTRIBUTE_BUFFER_SIZE = 1;\nexport const RGBA_ATTRIBUTE_BUFFER_SIZE = RGBA_SIZE;\nexport const ALPHA_ATTRIBUTE_BUFFER_SIZE = 1;\nexport const TEXID_ATTRIBUTE_BUFFER_SIZE = 2;\n\nexport const ATTRIBUTE_TO_SIZE_MAP = {\n  position: POSITION_ATTRIBUTE_BUFFER_SIZE,\n  size: SIZE_ATTRIBUTE_BUFFER_SIZE,\n  // THREE.Color does not contain alpha, so we will have separate attributes for these\n  color: RGBA_ATTRIBUTE_BUFFER_SIZE,\n  alpha: ALPHA_ATTRIBUTE_BUFFER_SIZE,\n  texID: TEXID_ATTRIBUTE_BUFFER_SIZE,\n};\n\nexport const PARTICLE_STRIDE = [\n  POSITION_ATTRIBUTE_BUFFER_SIZE,\n  SIZE_ATTRIBUTE_BUFFER_SIZE,\n  RGBA_ATTRIBUTE_BUFFER_SIZE,\n  ALPHA_ATTRIBUTE_BUFFER_SIZE,\n  TEXID_ATTRIBUTE_BUFFER_SIZE,\n].reduce((cur, acc) => cur + acc);\n","import { DEFAULT_MAX_PARTICLES } from './ParticleBuffer/constants';\n\nexport const DEFAULT_RENDERER_OPTIONS = {\n  blending: 'AdditiveBlending',\n  baseColor: 0xffffff,\n  depthTest: true,\n  depthWrite: false,\n  transparent: true,\n  maxParticles: DEFAULT_MAX_PARTICLES,\n  shouldDebugTextureAtlas: false,\n  shouldForceDesktopRenderer: false,\n  shouldForceMobileRenderer: false,\n};\n","/**\n * Simple class that stores the particle's \"target\" or \"next\" state.\n *\n */\nexport class Target {\n  constructor(THREE) {\n    this.position = new THREE.Vector3();\n    this.size = 0;\n    this.color = new THREE.Color();\n    this.alpha = 0;\n    this.texture = null;\n    this.index = 0;\n  }\n\n  reset() {\n    this.position.set(0, 0, 0);\n    this.size = 0;\n    this.color.setRGB(0, 0, 0);\n    this.alpha = 0;\n    this.texture = null;\n  }\n}\n","/**\n * Map of particle IDs to integer ids\n */\nexport class UniqueList {\n  constructor(max = Infinity) {\n    this.max = max;\n    this.count = 0;\n    this._items = {};\n  }\n\n  add(item) {\n    if (this._items[item] !== undefined) {\n      return;\n    }\n\n    this._items[item] = this.count++;\n  }\n\n  find(item) {\n    return this._items[item];\n  }\n\n  destroy() {\n    this._items = {};\n    this.count = 0;\n  }\n}\n","import {\n  ATTRIBUTE_TO_SIZE_MAP,\n  DEFAULT_MAX_PARTICLES,\n  PARTICLE_BYTE_SIZE,\n} from './constants';\n\nlet THREE;\n\n/**\n * Creates and provides performant buffers for mapping particle properties to geometry vertices.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n * @see https://threejs.org/examples/?q=buffe#webgl_buffergeometry_points_interleaved\n * @see https://threejs.org/examples/?q=points#webgl_custom_attributes_points\n */\nexport default class ParticleBuffer {\n  constructor(maxParticles = DEFAULT_MAX_PARTICLES, three) {\n    THREE = three;\n    this.maxParticles = maxParticles;\n\n    this.createInterleavedBuffer().createBufferGeometry();\n  }\n\n  /**\n   * Creates the interleaved buffer that will be used to write data to the GPU.\n   *\n   * @return {ParticleBuffer}\n   */\n  createInterleavedBuffer() {\n    const arrayBuffer = new ArrayBuffer(this.maxParticles * PARTICLE_BYTE_SIZE);\n\n    this.interleavedBuffer = new THREE.InterleavedBuffer(\n      new Float32Array(arrayBuffer),\n      PARTICLE_BYTE_SIZE\n    );\n    // this.interleavedBuffer.usage = THREE.DynamicDrawUsage;\n    \n    return this;\n  }\n\n  /**\n   * Sets the geometry's buffer attributes.\n   *\n   * NOTE Each attribute needs to be set at the right index in the buffer right after the previous\n   * attribute that occupies a set amount of size in the buffer.\n   *\n   * @return {ParticleBufferGeometry}\n   */\n  createBufferGeometry() {\n    this.geometry = new THREE.BufferGeometry();\n\n    const { interleavedBuffer, geometry } = this;\n\n    Object.keys(ATTRIBUTE_TO_SIZE_MAP).reduce((offset, attribute) => {\n      const size = ATTRIBUTE_TO_SIZE_MAP[attribute];\n\n      geometry.setAttribute(\n        attribute,\n        new THREE.InterleavedBufferAttribute(interleavedBuffer, size, offset)\n      );\n\n      return (offset += size);\n    }, 0);\n\n    return this;\n  }\n\n  /**\n   * Gets the publicly accessible interleaved buffer.\n   *\n   * @return {THREE.InterleavedBuffer} buffers - The interleaved buffer\n   */\n  get buffer() {\n    return this.interleavedBuffer;\n  }\n\n  get stride() {\n    return PARTICLE_BYTE_SIZE;\n  }\n}\n","import {\n  RENDERER_TYPE_GPU_DESKTOP,\n  RENDERER_TYPE_GPU_MOBILE,\n} from '../../../types';\n\nimport { DATA_TEXTURE_SIZE } from './constants';\nimport { __DEV__ } from '../../../../constants';\nimport potpack from 'potpack';\n\n/**\n * Dynamic texture atlas for performant support of systems with multiple emitters and textures.\n *\n */\nexport default class TextureAtlas {\n  constructor(renderer, shouldDebug) {\n    const { three: THREE, type: rendererType } = renderer;\n    const data = new Float32Array(DATA_TEXTURE_SIZE * 4);\n    const ctx = (this.ctx = document.createElement('canvas').getContext('2d'));\n    const { canvas } = ctx;\n\n    this.shouldDebug = shouldDebug;\n    this.rendererType = rendererType;\n    this.indexData = data;\n    this.canvas = canvas;\n    this.entries = [];\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      this.atlasIndex = new THREE.DataTexture(\n        data,\n        DATA_TEXTURE_SIZE,\n        1,\n        THREE.RGBAFormat,\n        THREE.FloatType\n      );\n    }\n\n    canvas.width = canvas.height = DATA_TEXTURE_SIZE;\n\n    if (shouldDebug) {\n      this.debug(canvas, ctx);\n    }\n\n    this.atlasTexture = new THREE.CanvasTexture(canvas);\n    this.atlasTexture.flipY = false;\n\n    renderer.material.uniforms.uTexture.value = this.atlasTexture;\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      renderer.material.uniforms.atlasIndex.value = this.atlasIndex;\n    }\n\n    renderer.material.uniformsNeedUpdate = true;\n  }\n\n  /**\n   * Logs to the console when in dev mode.\n   *\n   */\n  log(...args) {\n    if (!__DEV__) {\n      return;\n    }\n\n    console.log(...args);\n  }\n\n  /**\n   * Debugs the texture atlas by rendering it to a canvas in the DOM.\n   *\n   */\n  debug() {\n    const { canvas, ctx } = this;\n    const halfmax = canvas.width;\n\n    ctx.fillStyle = 'purple';\n    ctx.fillRect(0, 0, halfmax, halfmax);\n    ctx.fillStyle = 'green';\n    ctx.fillRect(0, halfmax, halfmax, halfmax);\n    ctx.fillStyle = 'blue';\n    ctx.fillRect(halfmax, 0, halfmax, halfmax);\n    ctx.fillStyle = 'orange';\n    ctx.fillRect(halfmax, halfmax, halfmax, halfmax);\n    ctx.fillStyle = 'yellow';\n    ctx.font = canvas.width + 'px Verdana';\n    ctx.fillText('top row', 100, 500);\n    ctx.fillStyle = 'pink';\n    ctx.fillText('bottom row', 100, 1500);\n\n    canvas.style.position = 'absolute';\n    canvas.style.width = canvas.style.height = '300px';\n    canvas.style.left = canvas.style.top = '0px';\n    canvas.style.zIndex = 100;\n\n    document.body.appendChild(canvas);\n  }\n\n  /**\n   * Adds a texture to the texture atlas and flags that the atlas needs to be updated.\n   *\n   */\n  addTexture(texture) {\n    this.log('Adding texture to atlas:', texture.uuid);\n\n    texture.textureIndex = this.entries.length;\n    this.entries.push({ texture: texture });\n    this.needsUpdate = true;\n  }\n\n  /**\n   * Updates the texture atlas. Will only rebuild the atlas if all images are loaded.\n   *\n   */\n  update() {\n    if (!this.needsUpdate) {\n      return;\n    }\n\n    const {\n      entries,\n      canvas,\n      indexData,\n      ctx,\n      atlasIndex,\n      atlasTexture,\n      rendererType,\n    } = this;\n\n    for (let i = 0; i < entries.length; i++) {\n      if (!entries[i].texture.image) {\n        return;\n      }\n    }\n\n    this.needsUpdate = false;\n\n    for (let i = 0; i < entries.length; i++) {\n      const e = entries[i];\n      const { texture } = e;\n      const { width, height } = texture.image;\n\n      e.w = width;\n      e.h = height;\n    }\n\n    const stats = potpack(entries);\n\n    this.log('Rebuilt atlas:', stats);\n\n    if (canvas.width != stats.w || canvas.height != stats.h) {\n      canvas.width = stats.w;\n      canvas.height = stats.h;\n    }\n\n    for (let i = 0; i < entries.length; i++) {\n      const e = this.entries[i];\n      const ii = e.texture.textureIndex * 4;\n\n      if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n        indexData[ii + 0] = e.x / canvas.width;\n        indexData[ii + 1] = e.y / canvas.height;\n        indexData[ii + 2] = (e.x + e.w) / canvas.width;\n        indexData[ii + 3] = (e.y + e.h) / canvas.height;\n      }\n\n      if (rendererType === RENDERER_TYPE_GPU_MOBILE) {\n        indexData[ii + 0] = e.x / (canvas.width + 1);\n        indexData[ii + 1] = e.y / (canvas.height + 1);\n        indexData[ii + 2] = (e.x + e.w) / (canvas.width + 1);\n        indexData[ii + 3] = (e.y + e.h) / (canvas.height + 1);\n      }\n\n      ctx.drawImage(e.texture.image, e.x, e.y, e.w, e.h);\n    }\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      atlasIndex.needsUpdate = true;\n    }\n\n    atlasTexture.needsUpdate = true;\n  }\n\n  /**\n   * Disposes of the textures used by the texture atlas.\n   *\n   * @return void\n   */\n  destroy() {\n    const { atlasIndex, atlasTexture, canvas } = this;\n\n    atlasTexture.dispose();\n    atlasIndex && atlasIndex.dispose();\n\n    if (this.shouldDebug) {\n      canvas.remove();\n    }\n\n    this.entries = [];\n  }\n}\n","export const DATA_TEXTURE_SIZE = 256;\n","\nexport default function potpack(boxes) {\n\n    // calculate total box area and maximum box width\n    let area = 0;\n    let maxWidth = 0;\n\n    for (const box of boxes) {\n        area += box.w * box.h;\n        maxWidth = Math.max(maxWidth, box.w);\n    }\n\n    // sort the boxes for insertion by height, descending\n    boxes.sort((a, b) => b.h - a.h);\n\n    // aim for a squarish resulting container,\n    // slightly adjusted for sub-100% space utilization\n    const startWidth = Math.max(Math.ceil(Math.sqrt(area / 0.95)), maxWidth);\n\n    // start with a single empty space, unbounded at the bottom\n    const spaces = [{x: 0, y: 0, w: startWidth, h: Infinity}];\n\n    let width = 0;\n    let height = 0;\n\n    for (const box of boxes) {\n        // look through spaces backwards so that we check smaller spaces first\n        for (let i = spaces.length - 1; i >= 0; i--) {\n            const space = spaces[i];\n\n            // look for empty spaces that can accommodate the current box\n            if (box.w > space.w || box.h > space.h) continue;\n\n            // found the space; add the box to its top-left corner\n            // |-------|-------|\n            // |  box  |       |\n            // |_______|       |\n            // |         space |\n            // |_______________|\n            box.x = space.x;\n            box.y = space.y;\n\n            height = Math.max(height, box.y + box.h);\n            width = Math.max(width, box.x + box.w);\n\n            if (box.w === space.w && box.h === space.h) {\n                // space matches the box exactly; remove it\n                const last = spaces.pop();\n                if (i < spaces.length) spaces[i] = last;\n\n            } else if (box.h === space.h) {\n                // space matches the box height; update it accordingly\n                // |-------|---------------|\n                // |  box  | updated space |\n                // |_______|_______________|\n                space.x += box.w;\n                space.w -= box.w;\n\n            } else if (box.w === space.w) {\n                // space matches the box width; update it accordingly\n                // |---------------|\n                // |      box      |\n                // |_______________|\n                // | updated space |\n                // |_______________|\n                space.y += box.h;\n                space.h -= box.h;\n\n            } else {\n                // otherwise the box splits the space into two spaces\n                // |-------|-----------|\n                // |  box  | new space |\n                // |_______|___________|\n                // | updated space     |\n                // |___________________|\n                spaces.push({\n                    x: space.x + box.w,\n                    y: space.y,\n                    w: space.w - box.w,\n                    h: box.h\n                });\n                space.y += box.h;\n                space.h -= box.h;\n            }\n            break;\n        }\n    }\n\n    return {\n        w: width, // container width\n        h: height, // container height\n        fill: (area / (width * height)) || 0 // space utilization\n    };\n}\n","import { ParticleBuffer, Target, TextureAtlas, UniqueList } from '../common';\nimport { fragmentShader, vertexShader } from './shaders';\n\nimport BaseRenderer from '../../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from '../common/constants';\nimport { Pool } from '../../../core';\nimport { RENDERER_TYPE_GPU_DESKTOP } from '../../types';\n\nlet THREE;\n\n/**\n * GPURenderer for devices that support floating point textures.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class DesktopGPURenderer extends BaseRenderer {\n  constructor(container, three, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU_DESKTOP);\n\n    THREE = this.three = three;\n    const props = { ...DEFAULT_RENDERER_OPTIONS, ...options };\n    const {\n      camera,\n      maxParticles,\n      baseColor,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent,\n      shouldDebugTextureAtlas,\n    } = props;\n    const particleBuffer = new ParticleBuffer(maxParticles, THREE);\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        baseColor: { value: new THREE.Color(baseColor) },\n        uTexture: { value: null },\n        atlasIndex: { value: null },\n      },\n      vertexShader: vertexShader(),\n      fragmentShader: fragmentShader(),\n      blending: THREE[blending],\n      depthTest,\n      depthWrite,\n      transparent,\n    });\n\n    this.container = container;\n    this.camera = camera;\n    this.targetPool = new Pool();\n    this.uniqueList = new UniqueList(maxParticles);\n    this.particleBuffer = particleBuffer;\n    this.buffer = particleBuffer.buffer;\n    this.stride = particleBuffer.stride;\n    this.geometry = particleBuffer.geometry;\n    this.material = material;\n    this.points = new THREE.Points(this.geometry, this.material);\n    this.points.frustumCulled = false;\n    this.shouldDebugTextureAtlas = shouldDebugTextureAtlas;\n\n    this.container.add(this.points);\n  }\n\n  onSystemUpdate(system) {\n    super.onSystemUpdate(system);\n\n    this.buffer.needsUpdate = true;\n\n    this.textureAtlas && this.textureAtlas.update();\n  }\n\n  /**\n   * Pools the particle target if it does not exist.\n   * Updates the target and maps particle properties to the point.\n   *\n   * @param {Particle}\n   */\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      particle.target = this.targetPool.get(Target, THREE);\n      this.uniqueList.add(particle.id);\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Maps particle properties to the point if the particle has a target.\n   *\n   * @param {Particle}\n   */\n  onParticleUpdate(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Resets and clears the particle target.\n   *\n   * @param {Particle}\n   */\n  onParticleDead(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    particle.target.reset();\n    this.mapParticleTargetPropsToPoint(particle);\n\n    particle.target = null;\n  }\n\n  /**\n   * Maps all mutable properties from the particle to the target.\n   *\n   * @param {Particle}\n   * @return {DesktopGPURenderer}\n   */\n  updateTarget(particle) {\n    const { position, scale, radius, color, alpha, body, id } = particle;\n    const { r, g, b } = color;\n\n    particle.target.position.copy(position);\n    particle.target.size = scale * radius;\n    particle.target.color.setRGB(r, g, b);\n    particle.target.alpha = alpha;\n    particle.target.index = this.uniqueList.find(id);\n\n    if (body && body instanceof THREE.Sprite) {\n      const { map } = body.material;\n\n      particle.target.texture = map;\n      particle.target.textureIndex = this.getTextureID(\n        map,\n        this.shouldDebugTextureAtlas\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Entry point for mapping particle properties to buffer geometry points.\n   *\n   * @param {Particle} particle - The particle containing the properties to map\n   * @return {DesktopGPURenderer}\n   */\n  mapParticleTargetPropsToPoint(particle) {\n    this.updatePointPosition(particle)\n      .updatePointSize(particle)\n      .updatePointColor(particle)\n      .updatePointAlpha(particle)\n      .updatePointTextureIndex(particle);\n\n    return this;\n  }\n\n  /**\n   * Updates the point's position according to the particle's target position.\n   *\n   * @param {Particle} particle - The particle containing the target position.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointPosition(particle) {\n    const attribute = 'position';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.position.x;\n    buffer.array[target.index * stride + offset + 1] = target.position.y;\n    buffer.array[target.index * stride + offset + 2] = target.position.z;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's size relative to the particle's target scale and radius.\n   *\n   * @param {Particle} particle - The particle containing the target scale.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointSize(particle) {\n    const attribute = 'size';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.size;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's color attribute according with the particle's target color.\n   *\n   * @param {Particle} particle - The particle containing the target color and alpha.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointColor(particle) {\n    const attribute = 'color';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.color.r;\n    buffer.array[target.index * stride + offset + 1] = target.color.g;\n    buffer.array[target.index * stride + offset + 2] = target.color.b;\n\n    return this;\n  }\n\n  /**\n   * Updates the point alpha attribute with the particle's target alpha.\n   *\n   * @param {Particle} particle - The particle containing the target alpha.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointAlpha(particle) {\n    const attribute = 'alpha';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.alpha;\n\n    return this;\n  }\n\n  /**\n   * Updates the point texture attribute with the particle's target texture.\n   *\n   * @param {Particle} particle - The particle containing the target texture.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointTextureIndex(particle) {\n    const attribute = 'texID';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.textureIndex;\n\n    return this;\n  }\n\n  getTextureID(texture, debug) {\n    if (texture.textureIndex === undefined) {\n      if (!this.textureAtlas) {\n        this.textureAtlas = new TextureAtlas(this, debug);\n      }\n\n      this.textureAtlas.addTexture(texture);\n    }\n\n    return texture.textureIndex;\n  }\n\n  /**\n   * Tears down the GPURenderer.\n   *\n   * @return void\n   */\n  destroy() {\n    const { container, points, textureAtlas, uniqueList } = this;\n\n    container.remove(points);\n    uniqueList.destroy();\n    textureAtlas && textureAtlas.destroy();\n  }\n}\n","import { ParticleBuffer, Target, TextureAtlas, UniqueList } from '../common';\nimport { fragmentShader, vertexShader } from './shaders';\n\nimport BaseRenderer from '../../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from '../common/constants';\nimport { Pool } from '../../../core';\nimport { RENDERER_TYPE_GPU_MOBILE } from '../../types';\n\nlet THREE;\n\n/**\n * GPURenderer for mobile devices that do not support floating point textures.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class MobileGPURenderer extends BaseRenderer {\n  constructor(container, three, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU_MOBILE);\n\n    THREE = this.three = three;\n    const props = { ...DEFAULT_RENDERER_OPTIONS, ...options };\n    const {\n      camera,\n      maxParticles,\n      baseColor,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent,\n      shouldDebugTextureAtlas,\n    } = props;\n    const particleBuffer = new ParticleBuffer(maxParticles, THREE);\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        baseColor: { value: new THREE.Color(baseColor) },\n        uTexture: { value: null },\n        FFatlasIndex: { value: null },\n        atlasDim: { value: new THREE.Vector2() },\n      },\n      vertexShader: vertexShader(),\n      fragmentShader: fragmentShader(),\n      blending: THREE[blending],\n      depthTest,\n      depthWrite,\n      transparent,\n    });\n\n    this.camera = camera;\n    this.targetPool = new Pool();\n    this.uniqueList = new UniqueList(maxParticles);\n    this.particleBuffer = particleBuffer;\n    this.buffer = particleBuffer.buffer;\n    this.stride = particleBuffer.stride;\n    this.geometry = particleBuffer.geometry;\n    this.material = material;\n    this.points = new THREE.Points(this.geometry, this.material);\n    this.points.frustumCulled = false;\n    this.shouldDebugTextureAtlas = shouldDebugTextureAtlas;\n\n    container.add(this.points);\n  }\n\n  onSystemUpdate(system) {\n    super.onSystemUpdate(system);\n\n    this.buffer.needsUpdate = true;\n\n    const { textureAtlas } = this;\n\n    if (textureAtlas) {\n      textureAtlas.update();\n      this.material.uniforms.atlasDim.value.set(\n        textureAtlas.atlasTexture.image.width,\n        textureAtlas.atlasTexture.image.height\n      );\n    }\n  }\n\n  /**\n   * Pools the particle target if it does not exist.\n   * Updates the target and maps particle properties to the point.\n   *\n   * @param {Particle}\n   */\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      particle.target = this.targetPool.get(Target, THREE);\n      this.uniqueList.add(particle.id);\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Maps particle properties to the point if the particle has a target.\n   *\n   * @param {Particle}\n   */\n  onParticleUpdate(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Resets and clears the particle target.\n   *\n   * @param {Particle}\n   */\n  onParticleDead(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    particle.target.reset();\n    this.mapParticleTargetPropsToPoint(particle);\n\n    particle.target = null;\n  }\n\n  /**\n   * Maps all mutable properties from the particle to the target.\n   *\n   * @param {Particle}\n   * @return {GPURenderer}\n   */\n  updateTarget(particle) {\n    const { position, scale, radius, color, alpha, body, id } = particle;\n    const { r, g, b } = color;\n\n    particle.target.position.copy(position);\n    particle.target.size = scale * radius;\n    particle.target.color.setRGB(r, g, b);\n    particle.target.alpha = alpha;\n    particle.target.index = this.uniqueList.find(id);\n\n    if (body && body instanceof THREE.Sprite) {\n      const { map } = body.material;\n\n      particle.target.texture = map;\n      particle.target.textureIndex = this.getTextureID(\n        map,\n        this.shouldDebugTextureAtlas\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Entry point for mapping particle properties to buffer geometry points.\n   *\n   * @param {Particle} particle - The particle containing the properties to map\n   * @return {GPURenderer}\n   */\n  mapParticleTargetPropsToPoint(particle) {\n    this.updatePointPosition(particle)\n      .updatePointSize(particle)\n      .updatePointColor(particle)\n      .updatePointAlpha(particle)\n      .updatePointTextureIndex(particle);\n\n    return this;\n  }\n\n  /**\n   * Updates the point's position according to the particle's target position.\n   *\n   * @param {Particle} particle - The particle containing the target position.\n   * @return {GPURenderer}\n   */\n  updatePointPosition(particle) {\n    const attribute = 'position';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.position.x;\n    buffer.array[target.index * stride + offset + 1] = target.position.y;\n    buffer.array[target.index * stride + offset + 2] = target.position.z;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's size relative to the particle's target scale and radius.\n   *\n   * @param {Particle} particle - The particle containing the target scale.\n   * @return {GPURenderer}\n   */\n  updatePointSize(particle) {\n    const attribute = 'size';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.size;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's color attribute according with the particle's target color.\n   *\n   * @param {Particle} particle - The particle containing the target color and alpha.\n   * @return {GPURenderer}\n   */\n  updatePointColor(particle) {\n    const attribute = 'color';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.color.r;\n    buffer.array[target.index * stride + offset + 1] = target.color.g;\n    buffer.array[target.index * stride + offset + 2] = target.color.b;\n\n    return this;\n  }\n\n  /**\n   * Updates the point alpha attribute with the particle's target alpha.\n   *\n   * @param {Particle} particle - The particle containing the target alpha.\n   * @return {GPURenderer}\n   */\n  updatePointAlpha(particle) {\n    const attribute = 'alpha';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.alpha;\n\n    return this;\n  }\n\n  /**\n   * Updates the point texture attribute with the particle's target texture.\n   *\n   * @param {Particle} particle - The particle containing the target texture.\n   * @return {GPURenderer}\n   */\n  updatePointTextureIndex(particle) {\n    const attribute = 'texID';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n    const id = target.index * stride + offset + 0;\n\n    // eslint-disable-next-line\n    if (false) {\n      buffer.array[id] = target.textureIndex;\n    } else {\n      let ti = target.textureIndex * 4;\n      const ta = this.textureAtlas;\n      const ida = ta.indexData;\n      const nx = ida[ti++];\n      const ny = ida[ti++];\n      const px = ida[ti++];\n      const py = ida[ti++];\n\n      buffer.array[id] = ((nx * ta.atlasTexture.image.width) | 0) + px;\n      buffer.array[id + 1] = ((ny * ta.atlasTexture.image.height) | 0) + py;\n    }\n\n    return this;\n  }\n\n  getTextureID(texture, debug) {\n    if (texture.textureIndex === undefined) {\n      if (!this.textureAtlas) {\n        this.textureAtlas = new TextureAtlas(this, debug);\n      }\n\n      this.textureAtlas.addTexture(texture);\n    }\n\n    return texture.textureIndex;\n  }\n\n  destroy() {\n    const { container, points, textureAtlas, uniqueList } = this;\n\n    container.remove(points);\n    uniqueList.destroy();\n    textureAtlas && textureAtlas.destroy();\n  }\n}\n","import { DATA_TEXTURE_SIZE } from '../../common/TextureAtlas/constants';\nimport { SIZE_ATTENUATION_FACTOR } from '../../common/shaders/constants';\n\nexport const vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    //atlasIndex is a 256x1 float texture of tile rectangles as r=minx g=miny b=maxx a=maxy\n    uniform sampler2D atlasIndex;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute float texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      tileID = texID;\n      //get the tile rectangle from the atlasIndex texture..\n      tileRect = texture2D(atlasIndex, vec2((tileID + 0.5) / ${DATA_TEXTURE_SIZE}.0, 0.5));\n\n      gl_PointSize = ((size * ${SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\n","export const fragmentShader = () => {\n  return `\n    uniform vec3 baseColor;\n    uniform sampler2D uTexture;\n    uniform sampler2D atlasIndex;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      gl_FragColor = vec4(baseColor * targetColor, targetAlpha);\n\n      vec2 uv = gl_PointCoord;\n      uv = mix(tileRect.xy, tileRect.zw, gl_PointCoord);\n\n      gl_FragColor = gl_FragColor * texture2D(uTexture, uv);\n\n    }\n`;\n};\n","import { SIZE_ATTENUATION_FACTOR } from '../../common/shaders/constants';\n\nexport const vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    uniform vec2 atlasDim;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute vec2 texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      vec2 tmin = floor(texID) / atlasDim;\n      vec2 tmax = fract(texID);\n      tileRect = vec4(tmin,tmax);\n\n      gl_PointSize = ((size * ${SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\n","export const fragmentShader = () => {\n  return `\n    uniform vec3 baseColor;\n    uniform sampler2D uTexture;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n\n    void main() {\n      gl_FragColor = vec4(baseColor * targetColor, targetAlpha);\n\n      vec2 uv = gl_PointCoord;\n      uv = mix(tileRect.xy, tileRect.zw, gl_PointCoord);\n\n      gl_FragColor = gl_FragColor * texture2D(uTexture, uv);\n    }\n`;\n};\n","import BaseRenderer from '../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from './common/constants';\nimport DesktopGPURenderer from './Desktop';\nimport MobileGPURenderer from './Mobile';\nimport { RENDERER_TYPE_GPU } from '../types';\n\n/**\n * Performant particle renderer that uses THREE.Points to propagate particle (postiion, rgba etc.,) properties to\n * vertices in a ParticleBufferGeometry.\n * Uses a dynamic texture atlas to support systems with mutliple sprites in a performant way.\n *\n * NOTE! This is an experimental renderer and is currently not covered by tests, coverage will be added when the API\n * is more stable. Currently only compatible with sprite/texture based systems. Meshes are not yet supported.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class GPURenderer extends BaseRenderer {\n  constructor(container, THREE, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU);\n\n    const { shouldForceDesktopRenderer, shouldForceMobileRenderer } = options;\n    const args = [container, THREE, options];\n\n    if (shouldForceDesktopRenderer) {\n      return new DesktopGPURenderer(...args);\n    }\n\n    if (shouldForceMobileRenderer) {\n      return new MobileGPURenderer(...args);\n    }\n\n    if (!this.isFloatingPointTextureSupported()) {\n      return new MobileGPURenderer(...args);\n    }\n\n    return new DesktopGPURenderer(...args);\n  }\n\n  isFloatingPointTextureSupported() {\n    const canvas = document.createElement('canvas');\n\n    if (window.WebGL2RenderingContext && canvas.getContext('webgl2')) {\n      // return false here to test the mobile renderer on desktop\n      return true;\n    }\n\n    const gl = canvas.getContext('webgl');\n    const support = !!gl.getExtension('OES_texture_float');\n\n    canvas.remove();\n\n    return support;\n  }\n}\n","import { System } from './core';\n\nexport * from './behaviour';\nexport * from './debug';\nexport * from './ease';\nexport * from './emitter';\nexport * from './initializer';\nexport * from './math';\nexport * from './renderer';\nexport * from './utils';\nexport * from './zone';\nexport { System, Particle, Pool } from './core';\nexport default System;\n"],"names":["root","factory","exports","module","define","amd","this","Symbol","baseTimes","isArguments","isArray","isBuffer","isIndex","isTypedArray","hasOwnProperty","Object","prototype","value","inherited","isArr","isArg","isBuff","isType","skipIndexes","result","length","String","key","call","push","array","iteratee","index","Array","baseRandom","undefined","getRawTag","objectToString","symToStringTag","toStringTag","baseGetTag","isObjectLike","isLength","typedArrayTags","isPrototype","nativeKeys","object","nativeFloor","Math","floor","nativeRandom","random","lower","upper","arraySample","values","collection","n","func","arrayMap","props","freeGlobal","g","objectProto","nativeObjectToString","toString","isOwn","tag","unmasked","e","reIsUint","type","test","Ctor","constructor","overArg","keys","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","require","types","binding","transform","arg","freeSelf","self","Function","baseIsArguments","propertyIsEnumerable","arguments","isFunction","stubFalse","Buffer","isObject","baseIsTypedArray","baseUnary","nodeIsTypedArray","arrayLikeKeys","baseKeys","isArrayLike","baseSample","baseValues","byteToHex","i","substr","buf","offset","bth","join","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","rnds","r","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","b","node","clockseq","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","globalThis","obj","prop","nmd","paths","children","BEHAVIOUR_TYPE_ALPHA","BEHAVIOUR_TYPE_ATTRACTION","BEHAVIOUR_TYPE_COLOR","BEHAVIOUR_TYPE_CROSS_ZONE","BEHAVIOUR_TYPE_FORCE","BEHAVIOUR_TYPE_GRAVITY","BEHAVIOUR_TYPE_RANDOM_DRIFT","BEHAVIOUR_TYPE_REPULSION","BEHAVIOUR_TYPE_ROTATE","BEHAVIOUR_TYPE_SCALE","BEHAVIOUR_TYPE_SPRING","INITIALIZER_TYPE_BODY","INITIALIZER_TYPE_BODY_SPRITE","INITIALIZER_TYPE_TEXTURE","INITIALIZER_TYPE_LIFE","INITIALIZER_TYPE_MASS","INITIALIZER_TYPE_POSITION","INITIALIZER_TYPE_RADIUS","INITIALIZER_TYPE_VECTOR_VELOCITY","INITIALIZER_TYPE_POLAR_VELOCITY","INITIALIZER_TYPE_RADIAL_VELOCITY","INITIALIZER_TYPES_THAT_REQUIRE_THREE","ZONE_TYPE_BOX","ZONE_TYPE_LINE","ZONE_TYPE_MESH","ZONE_TYPE_POINT","ZONE_TYPE_SPHERE","RENDERER_TYPE_GPU_MOBILE","RENDERER_TYPE_GPU_DESKTOP","PI","POOL_MAX","DR","EULER","__DEV__","env","ease","easeLinear","easeInQuad","pow","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","s","easeOutBack","easeInOutBack","setEasingByName","easeName","getEasingByName","name","DEFAULT_LIFE","Infinity","DEFAULT_EASING","DEFAULT_SYSTEM_DELTA","SUPPORTED_JSON_INITIALIZER_TYPES","SUPPORTED_JSON_BEHAVIOUR_TYPES","SUPPORTED_JSON_ZONE_TYPES","_defineProperty","configurable","writable","getRGB","color","rgb","hex","m","exec","min","parseInt","charAt","_id","_uids","Map","getNewId","functionOrObject","has","newId","set","quaternion","vector","matrix","x","y","z","zero","one","q","_Math","DEG2RAD","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","toUpperCase","clamp","max","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Quaternion","w","_x","_y","_z","_w","Vector3","Matrix4","elements","console","error","Euler","order","_order","DefaultOrder","assign","slerp","qa","qb","qm","copy","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","atan2","tDir","f","defineProperties","_onChangeCallback","isQuaternion","clone","setFromEuler","euler","update","isEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","dot","abs","normalize","angleTo","acos","rotateTowards","step","inverse","conjugate","v","lengthSq","l","multiply","p","warn","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","equals","fromArray","toArray","_onChange","callback","isVector3","setScalar","scalar","setX","setY","setZ","setComponent","getComponent","add","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiplyVectors","multiplyScalar","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","manhattanLength","setLength","alpha","lerpVectors","v1","v2","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","theta","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","c","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","fromBufferAttribute","attribute","getX","getY","getZ","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","lookAt","eye","target","up","multiplyMatrices","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","makeShear","position","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","toScreenPos","pos","canvas","width","height","toSpacePos","distance","initValue","defaults","destroyArray","destroyObject","isUndefined","setVectorByObj","pOBJ","velocity","acceleration","setPrototypeByObj","proObj","filters","indexOf","_getValue","pan","getValue","withDefaults","properties","randomAToB","INT","randomFloating","center","randomZone","display","degreeTransform","toColor16","num","randomColor","slice","energy","getNormal","axisRotate","v0","k","tha","addValue","Span","_isArray","Util","_center","MathUtils","createSpan","ArraySpan","items","super","sample","createArraySpan","ColorSpan","colors","shouldRandomize","createColorSpan","Box","depth","contains","INTEGRATION_TYPE_EULER","INTEGRATION_TYPE_RK2","INTEGRATION_TYPE_RK4","INTEGRATION_TYPE_VERLET","integrate","particle","time","damping","sleep","old","mass","clear","eulerIntegration","Vector3D","eulerFromDir","vector3D","Polar3D","setRadius","setPhi","setTheta","toVector3D","Particle","uid","life","age","dead","body","parent","useColor","useAlpha","easing","behaviours","rotation","distanceToCamera","getDirection","reset","removeAllBehaviours","applyBehaviour","destroy","addBehaviour","behaviour","initialize","addBehaviours","removeBehaviour","splice","Pool","cID","list","create","constructorArgs","canCreateNewObject","canInstantiateObject","canCloneObject","getCount","args","puid","__puid","PUID","pop","expire","_getList","listeners","_listeners","addEventListener","listener","removeEventListener","arr","removeAllEventListeners","dispatchEvent","eventName","eventTarget","ret","handler","hasEventListener","SYSTEM_UPDATE","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_DEAD","Initializer","isEnabled","init","emitter","hasBeenInitialized","json","Body","SUPPORTED_MATERIAL_BLENDING_MODES","AdditiveBlending","CustomBlending","MultiplyBlending","NoBlending","NormalBlending","SubtractiveBlending","DEFAULT_MATERIAL_PROPERTIES","blending","fog","DEFAULT_JSON_MATERIAL_PROPERTIES","BodySprite","THREE","texture","materialProperties","Sprite","SpriteMaterial","TextureLoader","load","map","material","sprite","ensureMappedBlendingMode","particleEuler","initializers","bindEmitter","Life","lifePan","Mass","massPan","Zone","crossType","supportsCrossing","getPosition","crossing","_bound","_cross","_dead","isBoxZone","isLineZone","isMeshZone","isPointZone","isScreenZone","isSphereZone","BoxZone","friction","_static","LineZone","MeshZone","bounds","ThreeGeometry","geometry","isBufferGeometry","fromBufferGeometry","vertices","rVector","PointZone","ScreenZone","renderer","dis","THREEUtil","domElement","d4","vec2","SphereZone","centerX","centerY","centerZ","the","Position","apply","zones","concat","addZone","zoneType","params","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","includes","zone","Radius","oldRadius","Rate","numPan","timePan","startTime","nextTime","particlesMin","particlesMax","perSecondMin","perSecondMax","Texture","loadedTexture","Velocity","dirVec","vr","_useV","radiusPan","PolarVelocity","polar3d","polarRadius","polarTheta","polarPhi","velocityTheta","RadialVelocity","vector3d","VectorVelocity","DEFAULT_EMITTER_RATE","Emitter","particles","emitterBehaviours","currentEmitTime","totalEmitTimes","bindEmitterEvent","rate","isEmitting","eventDispatcher","EventDispatcher","dispatch","event","setRate","newPosition","setRotation","newRotation","emit","isNumber","experimental_emit","setTotalEmitTimes","setLife","stopEmit","removeAllParticles","addInitializer","initializer","addInitializers","setInitializers","removeInitializer","removeAllInitializers","setBehaviours","addEmitterBehaviour","addEmitterBehaviours","setEmitterBehaviours","removeEmitterBehaviour","removeAllEmitterBehaviours","addOnEmitterDeadEventListener","onEmitterDead","createParticle","pool","setupParticle","InitializerUtil","generate","updateEmitterBehaviours","integrationType","removeEmitter","DEFAULT_BEHAVIOUR_EASING","Behaviour","_life","normalizeForce","force","normalizeValue","mutate","energize","fromJSON","Alpha","alphaA","alphaB","same","_same","Attraction","targetPosition","radiusSq","attractionForce","Collision","useMass","onCollide","delta","otherParticle","overlap","averageMass1","averageMass2","_getAverageMass","particleA","particleB","Color","colorA","colorB","ColorUtil","CrossZone","zoneParams","Force","fx","fy","fz","Gravity","gravity","RandomDrift","driftX","driftY","driftZ","delay","randomForce","delayPan","Repulsion","Rotate","rotationType","_rotationType","_setRotation","fR","tR","addR","particleRotation","Scale","scaleA","scaleB","Spring","spring","makeBehaviours","forEach","data","DEFAULT_OPTIONS","shouldAutoEmit","Promise","resolve","reject","numberOfBehaviours","madeBehaviours","System","preParticles","canUpdate","emitters","renderers","system","makeRate","makeInitializers","addEmitter","madeEmitters","numberOfEmitters","numberOfInitializers","madeInitializers","doNotRequireTextureLoading","filter","doRequireTextureLoading","textureLoader","TextureInitializer","then","madeEmitterBehaviours","catch","makeEmitters","madeEmitter","fromJSONAsync","addRenderer","removeRenderer","remove","onStart","onUpdate","onEnd","all","total","DEFAULT_SIZE","DEFAULT_POSITION","onSystemUpdated","drawZone","container","size","SphereGeometry","BoxGeometry","MeshBasicMaterial","wireframe","mesh","Mesh","drawEmitter","OctahedronGeometry","renderInfo","getCreatedNumber","style","addInfo","str","_infoType","getEmitterPos","_infoCon","innerHTML","bg","document","createElement","cssText","parentNode","appendChild","once","shift","unshift","FollowEmitter","mouseTarget","pObj","_allowEmitting","initEventHandler","mousemoveHandler","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","setCameraAndCanvas","layerX","layerY","offsetX","offsetY","BaseRenderer","onSystemUpdate","onParticleCreated","onParticleUpdate","onParticleDead","logRendererType","CustomRenderer","targetPool","materialPool","MeshRenderer","_targetPool","_materialPool","_body","MeshLambertMaterial","isThreeSprite","isSprite","opacity","transparent","SpriteRenderer","VECTOR_3_SIZE","RGBA_SIZE","PARTICLE_BYTE_SIZE","reduce","cur","acc","SIZE_ATTRIBUTE_BUFFER_SIZE","ALPHA_ATTRIBUTE_BUFFER_SIZE","TEXID_ATTRIBUTE_BUFFER_SIZE","ATTRIBUTE_TO_SIZE_MAP","texID","DEFAULT_RENDERER_OPTIONS","baseColor","depthTest","depthWrite","maxParticles","shouldDebugTextureAtlas","shouldForceDesktopRenderer","shouldForceMobileRenderer","Target","setRGB","UniqueList","_items","item","find","ParticleBuffer","three","createInterleavedBuffer","createBufferGeometry","arrayBuffer","ArrayBuffer","interleavedBuffer","InterleavedBuffer","Float32Array","BufferGeometry","setAttribute","InterleavedBufferAttribute","buffer","stride","TextureAtlas","shouldDebug","rendererType","DATA_TEXTURE_SIZE","ctx","getContext","indexData","entries","atlasIndex","DataTexture","RGBAFormat","FloatType","debug","atlasTexture","CanvasTexture","flipY","uniforms","uTexture","uniformsNeedUpdate","halfmax","fillStyle","fillRect","font","fillText","zIndex","addTexture","uuid","textureIndex","needsUpdate","image","stats","boxes","area","maxWidth","box","sort","spaces","space","last","fill","potpack","ii","drawImage","dispose","DesktopGPURenderer","particleBuffer","ShaderMaterial","vertexShader","fragmentShader","uniqueList","points","Points","frustumCulled","textureAtlas","updateTarget","mapParticleTargetPropsToPoint","getTextureID","updatePointPosition","updatePointSize","updatePointColor","updatePointAlpha","updatePointTextureIndex","attributes","MobileGPURenderer","FFatlasIndex","atlasDim","Vector2","ti","ta","ida","nx","ny","px","py","GPURenderer","isFloatingPointTextureSupported","WebGL2RenderingContext","support","getExtension"],"version":3,"file":"index.a6823a53.js.map","sourceRoot":"/__parcel_source_root/"}